var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AccountComponent.html",[0,0.189,1,0.798]],["body/components/AccountComponent.html",[0,0.251,1,1.175,2,1.082,3,0.125,4,0.109,5,0.764,6,0.764,7,0.764,8,0.764,9,0.094,10,2.365,11,0.846,12,1.23,13,2.905,14,0.694,15,1.686,16,1.599,17,2.905,18,0.982,19,4.884,20,0.982,21,4.092,22,0.125,23,0.424,24,3.466,25,2.023,26,2.271,27,3.131,28,4.884,29,1.569,30,2.393,31,0.581,32,3.466,33,3.003,34,1.362,35,5.406,36,4.141,37,0.391,38,1.765,39,1.297,40,2.899,41,3.73,42,4.024,43,3.482,44,0.866,45,4.092,46,0.391,47,0.019,48,0.521,49,0.285,50,0.391,51,1.193,52,2.754,53,0.82,54,1.471,55,2.754,56,2.435,57,1.528,58,2.435,59,2.754,60,2.006,61,1.604,62,3.216,63,1.892,64,2.754,65,4.092,66,1.825,67,4.092,68,2.624,69,2.85,70,2.273,71,4.092,72,1.452,73,2.624,74,1.494,75,3.515,76,3.515,77,2.754,78,3.515,79,2.273,80,3.515,81,3.134,82,3.515,83,2.754,84,2.754,85,0.764,86,1.297,87,1.235,88,2.85,89,3.134,90,4.092,91,2.624,92,2.393,93,1.601,94,2.754,95,0.671,96,2.754,97,2.754,98,0.589,99,0.247,100,1.141,101,1.35,102,0.764,103,1.35,104,1.141,105,1.918,106,1.529,107,0.889,108,1.638,109,2.109,110,0.843,111,0.843,112,0.843,113,2.754,114,2.754,115,0.125,116,0.192,117,0.629,118,0.959,119,1.35,120,1.35,121,1.35,122,2.258,123,2.544,124,2.754,125,2.754,126,2.365,127,2.365,128,1.529,129,0.93,130,1.434,131,2.365,132,2.273,133,2.365,134,0.885,135,1.434,136,2.754,137,2.109,138,1.918,139,2.109,140,2.109,141,2.365,142,2.365,143,2.109,144,2.754,145,2.754,146,1.765,147,3.515,148,3.515,149,2.85,150,2.131,151,4.092,152,1.43,153,2.273,154,3.515,155,4.092,156,4.092,157,4.141,158,2.131,159,4.092,160,3.515,161,3.515,162,2.85,163,2.85,164,3.515,165,1.765,166,2.109,167,3.515,168,2.85,169,1.638,170,0.764,171,1.136,172,1.136,173,0.629,174,1.501,175,0.764,176,0.764,177,0.629,178,1.082,179,0.764,180,1.74,181,0.629,182,0.764,183,0.598,184,0.764,185,0.629,186,0.764,187,0.598,188,0.764,189,0.629,190,0.514,191,0.629,192,0.569,193,0.598,194,0.629,195,0.598,196,0.629,197,0.764,198,0.598,199,0.764,200,0.569,201,0.764,202,0.629,203,0.764,204,0.598,205,0.764,206,0.629,207,0.661,208,0.764,209,0.598,210,0.764,211,0.629,212,0.629,213,0.764,214,0.569,215,0.764,216,0.728,217,0.598,218,0.728,219,0.764,220,0.01,221,0.01]],["title/pipes/AccountLevelPipe.html",[150,1.913,222,1.606]],["body/pipes/AccountLevelPipe.html",[3,0.23,4,0.201,9,0.172,11,1.045,14,1.274,17,4.142,31,0.718,44,0.637,46,0.718,47,0.019,48,0.644,49,0.23,50,0.718,53,0.878,61,1.717,73,3.965,74,1.547,87,1.59,98,0.453,99,0.453,110,1.547,111,1.547,112,1.547,115,0.23,116,0.353,150,3.72,220,0.015,221,0.015,222,2.705,223,5.056,224,5.313,225,4.343,226,4.343,227,6.185,228,5.056,229,6.185,230,1.558,231,5.98,232,4.85,233,1.274,234,5.313,235,3.68,236,6.185,237,6.185,238,2.338,239,4.343,240,2.147,241,3.008]],["title/components/AddAnswerDialogComponent.html",[0,0.189,177,0.839]],["body/components/AddAnswerDialogComponent.html",[0,0.274,1,0.697,2,1.21,3,0.146,4,0.127,5,0.891,6,0.891,7,0.891,8,0.891,9,0.109,11,0.945,12,1.343,14,0.808,15,1.713,16,1.626,18,1.097,20,1.097,22,0.146,23,0.473,25,2.208,26,2.51,31,0.649,34,1.464,37,0.649,44,0.804,46,0.455,47,0.019,48,0.56,49,0.242,50,0.455,53,0.872,54,1.327,61,1.613,72,1.891,93,1.537,95,0.355,98,0.52,99,0.287,100,1.329,107,0.697,115,0.146,116,0.224,118,0.899,130,2.776,132,3.412,134,1.974,152,1.21,164,3.929,169,3.457,170,0.891,171,1.27,172,1.27,173,0.733,174,1.613,175,0.891,176,0.891,177,1.327,178,1.808,179,1.416,180,1.825,181,0.733,182,0.853,183,0.697,184,0.891,185,0.733,186,0.891,187,0.697,188,0.891,189,0.733,190,0.599,191,0.733,192,0.663,193,0.697,194,0.733,195,0.697,196,0.733,197,0.891,198,0.697,199,0.891,200,0.663,201,0.891,202,0.733,203,0.891,204,0.697,205,0.891,206,0.733,207,0.77,208,0.891,209,0.697,210,0.891,211,0.733,212,1.045,213,0.891,214,0.663,215,0.891,216,0.848,217,0.697,218,0.848,219,0.891,220,0.011,221,0.011,230,1.152,233,0.808,242,5.034,243,4.578,244,1.782,245,2.96,246,2.54,247,2.687,248,4.448,249,4.448,250,2.235,251,4.047,252,3.457,253,3.186,254,3.186,255,3.208,256,4.047,257,3.186,258,3.186,259,2.235,260,3.208,261,2.932,262,2.54,263,1.909,264,2.54,265,2.756,266,2.96,267,1.782,268,1.484,269,1.782,270,2.756,271,0.982,272,1.403,273,1.909,274,2.96,275,1.572,276,2.057,277,2.465,278,2.687,279,1.782,280,1.909,281,1.909,282,1.782,283,2.235,284,3.208,285,2.457,286,3.208,287,2.457,288,3.208,289,2.457,290,3.208,291,2.382,292,2.235,293,1.909,294,2.932,295,4.574,296,4.574,297,4.574,298,3.725,299,2.756]],["title/components/AddQuestionDialogComponent.html",[0,0.189,181,0.839]],["body/components/AddQuestionDialogComponent.html",[0,0.273,1,0.692,2,1.203,3,0.145,4,0.127,5,0.884,6,0.884,7,0.884,8,0.884,9,0.109,11,0.94,12,1.337,14,0.802,15,1.712,16,1.625,18,1.091,20,1.091,22,0.145,23,0.471,25,2.199,26,2.504,31,0.646,34,1.459,37,0.646,44,0.859,46,0.452,47,0.019,48,0.558,49,0.29,50,0.452,53,0.869,54,1.323,61,1.608,72,1.884,85,0.849,93,1.532,95,0.353,98,0.518,99,0.285,100,1.319,107,0.692,115,0.145,116,0.222,118,0.894,130,2.765,134,1.968,152,1.203,170,0.884,171,1.263,172,1.263,173,0.727,174,1.608,175,0.884,176,0.884,177,0.727,178,1.805,179,0.849,180,1.821,181,1.323,182,1.423,183,0.692,184,0.884,185,0.727,186,0.884,187,0.692,188,0.884,189,0.727,190,0.594,191,0.727,192,0.658,193,0.692,194,0.727,195,0.692,196,0.727,197,0.884,198,0.692,199,0.884,200,0.658,201,0.884,202,0.727,203,0.884,204,0.692,205,0.884,206,0.727,207,0.764,208,0.884,209,0.692,210,0.884,211,0.727,212,1.039,213,0.884,214,0.658,215,0.884,216,0.842,217,0.692,218,0.842,219,0.884,220,0.011,221,0.011,230,1.146,242,5.304,243,4.823,244,1.769,245,2.948,246,2.527,247,2.455,248,4.437,249,4.437,250,2.218,251,4.034,252,3.445,253,2.218,254,3.169,256,4.034,257,3.169,258,3.169,259,2.218,261,2.917,262,2.527,263,1.895,264,2.527,266,2.948,267,1.769,268,1.473,269,1.769,271,0.974,272,1.393,273,1.895,274,2.948,275,1.561,277,2.455,278,2.678,279,1.769,280,1.895,281,1.895,282,1.769,283,2.218,291,2.37,292,2.218,293,1.895,300,4.034,301,4.034,302,4.436,303,3.908,304,3.185,305,2.439,306,3.185,307,1.081,308,2.439,309,2.439,310,2.218,311,1.895,312,3.185,313,3.185,314,3.185,315,2.527]],["title/components/AdminComponent.html",[0,0.189,183,0.798]],["body/components/AdminComponent.html",[0,0.243,1,0.569,2,1.043,3,0.119,4,0.104,5,0.727,6,0.727,7,0.727,8,0.727,9,0.089,11,0.815,12,1.194,13,2.82,14,0.66,15,1.676,16,1.59,17,1.558,18,0.946,20,0.946,22,0.119,23,0.408,24,3.039,25,1.964,26,2.336,27,3.039,29,1.523,30,2.323,31,0.56,32,3.381,33,2.929,34,1.328,36,3.02,37,0.372,38,1.679,39,1.265,40,2.852,42,3.939,44,0.867,46,0.673,47,0.019,48,0.573,49,0.301,50,0.673,51,1.149,53,0.803,54,1.449,56,2.345,57,1.472,58,2.345,60,2.585,61,1.57,62,3.138,63,1.823,66,0.884,74,1.614,78,3.386,79,2.19,80,3.386,81,3.02,82,3.386,85,0.736,86,1.426,87,1.357,92,2.555,93,1.678,95,0.658,98,0.568,99,0.235,100,1.085,102,0.727,103,1.284,104,1.085,106,1.455,107,0.857,108,1.558,109,2.006,110,0.802,111,0.802,112,0.802,115,0.119,116,0.183,117,0.598,118,0.515,119,1.284,120,1.284,121,1.284,122,2.192,123,2.469,128,1.455,129,0.884,130,1.364,131,2.25,132,1.455,133,2.25,134,0.842,135,2.469,137,2.006,138,1.825,139,2.006,140,2.006,141,2.25,146,1.679,150,2.053,152,1.395,153,2.19,154,2.25,165,3.626,170,0.727,171,1.094,172,1.316,173,0.598,174,1.464,175,0.727,176,0.727,177,0.598,178,1.043,179,0.736,180,1.712,181,0.598,182,0.736,183,1.146,184,0.727,185,0.598,186,0.727,187,0.569,188,0.727,189,0.598,190,0.489,191,0.598,192,0.541,193,0.569,194,0.598,195,0.569,196,0.598,197,0.727,198,0.569,199,0.727,200,0.541,201,0.727,202,0.598,203,0.727,204,0.569,205,0.727,206,0.598,207,0.628,208,0.727,209,0.569,210,0.727,211,0.598,212,0.598,213,0.727,214,0.541,215,0.727,216,0.693,217,0.569,218,0.693,219,0.727,220,0.01,221,0.01,232,2.746,233,0.993,235,2.345,247,1.823,307,0.884,316,2.25,317,4.74,318,3.942,319,4.74,320,3.631,321,3.942,322,3.942,323,2.62,324,2.62,325,2.62,326,3.942,327,4.74,328,3.942,329,2.62,330,1.03,331,3.942,332,3.536,333,2.62,334,2.62,335,2.62,336,2.62,337,1.633,338,1.633,339,1.724,340,3.942,341,2.62,342,2.62,343,2.62,344,2.62,345,3.302,346,2.62,347,2.62,348,1.825,349,4.74,350,1.825,351,2.62,352,2.006,353,2.62,354,2.006,355,2.62,356,2.62,357,1.284,358,2.006,359,2.006,360,2.62,361,2.62,362,3.02,363,3.386,364,3.02,365,3.386,366,3.02,367,3.02,368,3.942,369,3.942,370,4.858,371,2.25,372,2.62,373,2.25,374,2.25,375,2.25,376,2.585,377,5.656,378,4.071,379,4.071,380,3.631,381,2.006,382,2.62,383,2.62,384,1.455,385,2.62,386,2.62,387,2.62,388,2.62,389,2.62,390,2.25,391,3.386,392,2.25,393,2.25,394,2.62]],["title/interfaces/Answer.html",[179,0.685,395,0.839]],["body/interfaces/Answer.html",[3,0.247,4,0.216,9,0.185,22,0.247,23,0.668,47,0.019,49,0.324,85,1.286,115,0.247,179,1.205,220,0.016,221,0.016,230,1.368,233,1.835,271,1.661,285,5.462,287,5.462,289,5.462,307,1.413,315,3.016,395,1.24,396,2.375,397,4.664,398,2.828,399,2.828,400,2.027]],["title/injectables/AnswerService.html",[401,0.881,402,2.813]],["body/injectables/AnswerService.html",[3,0.14,4,0.123,9,0.105,22,0.14,23,0.461,29,2.137,31,0.632,37,0.438,39,1.369,44,0.794,46,0.859,47,0.019,48,0.584,49,0.287,50,0.859,51,1.52,53,0.944,66,2.043,70,2.897,74,1.929,85,0.576,86,0.74,87,0.705,95,0.82,98,0.582,99,0.276,115,0.14,116,0.215,117,0.705,118,1.122,153,2.471,179,1.372,220,0.011,221,0.011,233,1.438,238,3.133,240,1.834,271,0.944,276,1.979,277,2.798,278,3.22,279,3.361,280,3.6,294,4.647,307,1.264,315,2.897,357,3.184,376,2.798,400,1.947,401,1.067,402,3.408,403,1.35,404,2.651,405,4.449,406,2.852,407,3.099,408,1.513,409,2.798,410,4.449,411,3.507,412,4.449,413,5.198,414,6.877,415,3.087,416,3.408,417,2.852,418,2.852,419,4.449,420,3.464,421,4.449,422,3.821,423,4.449,424,2.317,425,3.694,426,1.661,427,1.43,428,3.099,429,3.087,430,3.396,431,5.709,432,4.976,433,4.165,434,4.391,435,4.041,436,4.828,437,3.099,438,3.087,439,2.647,440,3.099,441,3.087,442,3.396,443,1.35,444,1.513,445,1.279,446,1.513,447,2.651,448,1.714,449,1.836,450,1.35,451,1.513,452,1.35,453,2.15,454,1.513,455,1.35,456,1.279,457,3.099,458,2.15,459,2.651,460,3.66,461,2.15,462,3.976,463,3.976,464,2.15,465,2.651,466,2.15,467,3.087,468,3.087]],["title/components/AppComponent.html",[0,0.189,185,0.839]],["body/components/AppComponent.html",[0,0.311,1,0.888,2,1.429,3,0.186,4,0.162,5,1.135,6,1.135,7,1.135,8,1.135,9,0.139,11,1.117,12,1.524,14,1.03,15,1.75,16,1.665,18,1.296,20,1.296,22,0.186,23,0.559,31,0.767,34,1.622,37,0.58,39,1.65,44,0.762,46,0.58,47,0.019,48,0.621,49,0.246,50,0.58,53,0.58,54,0.934,60,2.648,61,1.5,63,2.499,74,1.251,85,0.763,86,0.981,87,0.934,95,0.453,98,0.484,99,0.366,104,1.694,107,0.888,110,1.251,111,1.251,112,1.251,115,0.186,116,0.285,117,0.934,152,1.429,170,1.135,171,1.5,172,1.5,173,0.934,174,1.787,175,1.135,176,1.135,177,0.934,178,1.429,179,1.008,180,1.947,181,0.934,182,1.008,183,0.888,184,1.135,185,1.47,186,1.135,187,0.888,188,1.135,189,0.934,190,0.763,191,0.934,192,0.845,193,0.888,194,0.934,195,0.888,196,0.934,197,1.135,198,0.888,199,1.135,200,0.845,201,1.135,202,0.934,203,1.135,204,0.888,205,1.135,206,0.934,207,0.981,208,1.135,209,0.888,210,1.135,211,0.934,212,0.934,213,1.135,214,0.845,215,1.135,216,1.081,217,0.888,218,1.081,219,1.135,220,0.013,221,0.013,381,4.635,456,2.238,469,3.511,470,6.052,471,5.403,472,2.848,473,5.403,474,4.088,475,4.641,476,2.499,477,4.088]],["title/modules/AppModule.html",[478,3.154,479,2.558]],["body/modules/AppModule.html",[1,1.327,3,0.128,4,0.112,9,0.096,16,0.612,47,0.019,95,0.312,98,0.689,99,0.252,100,1.167,107,1.327,108,1.677,109,2.159,115,0.128,116,0.197,150,3.18,177,1.394,179,1.02,181,1.394,182,0.777,183,1.327,185,1.579,187,1.327,189,1.394,191,1.394,193,1.327,194,1.394,195,1.327,196,0.644,198,1.327,200,1.262,202,1.394,204,1.327,206,1.394,207,0.676,209,1.327,211,1.394,212,1.394,214,1.262,217,1.327,220,0.01,221,0.01,243,2.9,268,1.925,391,2.42,426,1.052,443,1.821,479,5.369,480,1.807,481,2.9,482,2.42,483,2.42,484,2.42,485,2.42,486,2.42,487,3.914,488,3.914,489,3.576,490,2.42,491,1.963,492,2.818,493,4.163,494,4.163,495,3.576,496,3.576,497,3.576,498,4.163,499,4.163,500,4.163,501,3.189,502,1.963,503,4.163,504,4.163,505,4.163,506,2.818,507,2.818,508,4.163,509,2.818,510,4.163,511,2.818,512,4.163,513,2.818,514,4.163,515,2.818,516,4.163,517,2.818,518,4.163,519,2.818,520,4.163,521,2.818,522,4.163,523,2.818,524,4.163,525,2.818,526,4.163,527,2.818,528,4.163,529,4.163,530,2.818,531,4.163,532,2.818,533,4.163,534,2.818,535,2.818,536,4.163,537,2.818,538,4.163,539,2.818,540,2.818,541,4.163,542,2.818,543,4.163,544,2.818,545,2.818,546,4.163,547,2.818,548,4.163,549,2.818,550,2.818,551,2.818,552,2.42,553,1.963,554,2.42,555,2.42,556,2.42,557,2.42,558,2.42,559,2.42,560,2.818,561,2.818,562,2.42,563,2.42,564,2.42,565,2.818,566,2.159,567,6.106,568,2.818,569,4.163,570,2.818,571,2.159,572,2.159,573,2.818,574,2.818,575,2.818,576,2.159,577,2.818,578,2.159,579,2.818,580,2.818,581,2.818,582,2.818]],["title/modules/AppRoutingModule.html",[478,3.154,487,2.354]],["body/modules/AppRoutingModule.html",[0,0.381,1,1.198,3,0.192,4,0.167,9,0.144,17,2.507,47,0.019,98,0.667,99,0.377,101,2.065,115,0.192,116,0.294,129,1.861,134,2.093,183,1.198,187,1.335,195,1.198,196,0.962,198,1.198,200,1.139,204,1.198,209,1.198,212,1.403,214,1.139,220,0.014,221,0.014,235,3.654,241,2.507,299,3.62,426,1.573,427,1.354,480,2.702,487,3.533,495,3.62,497,4.734,552,3.62,553,2.935,554,3.62,555,3.62,556,3.62,557,3.62,558,3.62,559,3.62,562,3.62,563,3.62,564,3.62,583,3.228,584,3.228,585,5.512,586,4.278,587,4.992,588,4.214,589,6.431,590,5.512,591,4.222,592,4.214,593,4.214,594,4.734,595,3.62,596,3.228,597,2.935,598,6.069,599,2.935,600,2.507,601,2.935,602,4.214,603,4.214,604,6.142,605,4.214,606,3.228,607,4.214,608,4.214]],["title/components/AuthComponent.html",[0,0.189,187,0.798]],["body/components/AuthComponent.html",[0,0.268,1,0.672,2,1.178,3,0.141,4,0.123,5,0.859,6,0.859,7,0.859,8,0.859,9,0.105,11,0.921,12,1.316,14,0.779,15,1.707,16,1.62,18,1.069,20,1.069,22,0.141,23,0.461,31,0.632,34,1.439,37,0.439,39,1.596,41,3.868,44,0.853,46,0.439,47,0.019,48,0.551,49,0.26,50,0.439,51,1.299,53,0.632,54,1.193,60,2.184,61,1.237,72,1.098,85,0.974,86,1.453,87,1.383,93,1.178,95,0.343,98,0.542,99,0.277,101,1.516,102,0.859,104,1.281,107,0.672,110,0.946,111,0.946,112,0.946,115,0.141,116,0.216,117,0.706,118,0.875,122,2.801,123,1.611,129,1.929,134,1.678,152,1.178,170,0.859,171,1.237,172,1.237,173,0.706,174,1.586,175,0.859,176,0.859,177,0.706,178,1.178,179,0.831,180,1.805,181,0.706,182,0.831,183,0.672,184,0.859,185,0.706,186,0.859,187,1.242,188,0.859,189,0.706,190,0.577,191,0.706,192,0.639,193,0.672,194,0.706,195,0.672,196,1.383,197,0.859,198,0.672,199,0.859,200,0.639,201,0.859,202,0.706,203,0.859,204,0.672,205,0.859,206,0.706,207,0.742,208,0.859,209,0.672,210,0.859,211,0.706,212,0.706,213,0.859,214,0.639,215,0.859,216,0.818,217,0.672,218,0.818,219,0.859,220,0.011,221,0.011,230,1.122,240,0.994,247,2.415,262,2.475,266,3.364,268,1.43,282,1.718,337,1.846,338,2.164,339,2.284,366,3.413,367,2.369,426,1.155,427,2.027,472,2.154,594,5.584,609,2.657,610,5.223,611,4.456,612,5.223,613,5.223,614,4.377,615,4,616,4.908,617,4.456,618,3.093,619,3.093,620,3.413,621,4.456,622,3.093,623,3.093,624,3.093,625,3.093,626,3.093,627,2.154,628,3.093,629,3.413,630,4.486,631,4.486,632,2.657,633,5.223,634,3.093,635,2.13,636,2.154,637,5.714,638,4.456,639,3.093,640,3.093,641,3.093,642,3.093,643,3.093,644,3.093,645,3.093,646,4.908,647,3.093,648,3.093,649,3.093,650,3.093,651,3.093,652,3.093,653,5.223,654,3.093,655,3.093,656,3.093,657,3.093,658,3.093,659,3.093,660,3.093,661,3.827,662,3.413,663,4.456,664,4.456,665,4.456,666,3.093]],["title/guards/AuthGuard.html",[587,2.558,667,2.813]],["body/guards/AuthGuard.html",[3,0.193,4,0.168,9,0.144,11,0.876,22,0.193,31,0.785,37,0.602,39,1.666,41,4.387,44,0.697,46,0.785,47,0.019,48,0.533,49,0.252,50,0.785,53,0.785,61,1.177,66,1.867,69,4.547,93,1.121,95,0.613,98,0.606,99,0.379,101,2.077,102,1.177,110,2.072,111,1.297,112,1.297,115,0.193,116,0.296,117,0.968,118,0.833,129,1.867,220,0.014,221,0.014,233,1.068,238,2.558,240,2.176,401,1.327,416,4.237,417,3.546,426,2.299,427,1.979,445,1.756,455,1.853,456,1.756,472,2.952,587,4.29,598,5.817,615,5.419,629,4.717,668,4.238,669,3.64,670,4.238,671,4.238,672,6.946,673,6.946,674,4.238,675,5.532,676,5.607,677,3.072,678,6.159,679,5.532,680,4.185,681,5.532,682,3.853,683,2.521,684,4.238,685,4.238,686,4.238,687,4.238,688,4.238,689,5.532,690,5.532,691,5.532,692,4.238,693,5.532]],["title/injectables/AuthService.html",[39,0.881,401,0.881]],["body/injectables/AuthService.html",[3,0.119,4,0.104,9,0.089,17,2.336,22,0.119,23,0.406,31,0.557,37,0.37,39,0.942,41,3.662,44,0.832,46,0.842,47,0.019,48,0.572,49,0.28,50,0.842,51,0.759,53,0.952,54,1.201,61,1.709,63,2.93,72,0.925,73,2.517,74,1.202,76,3.373,85,1.401,86,0.625,87,0.595,88,1.815,93,0.689,95,0.702,98,0.551,99,0.233,101,1.277,102,0.723,110,0.797,111,0.797,112,0.797,115,0.119,116,0.182,117,0.595,118,1.298,122,2.185,129,2.002,135,3.089,196,1.079,220,0.01,221,0.01,222,1.717,231,3.373,233,1.325,238,3.211,240,1.69,261,2.517,307,1.252,330,1.543,337,2.737,338,2.817,339,3.107,362,4.029,364,4.029,366,4.853,367,4.853,401,0.942,403,1.14,408,1.277,409,2.578,411,1.925,424,2.045,439,2.336,442,2.336,443,1.14,444,1.277,445,1.08,446,1.277,450,1.14,452,1.717,454,1.277,455,1.14,456,1.08,460,2.517,595,5.094,631,3.373,635,2.139,636,2.735,646,5.906,680,2.517,682,1.815,694,2.238,695,4.725,696,5.26,697,3.927,698,4.725,699,5.26,700,3.927,701,3.927,702,2.606,703,3.927,704,3.927,705,2.606,706,5.094,707,4.518,708,3.927,709,3.927,710,5.26,711,2.606,712,3.931,713,2.606,714,4.131,715,3.373,716,3.664,717,2.606,718,3.373,719,3.373,720,3.373,721,3.927,722,3.927,723,2.606,724,3.664,725,5.643,726,3.373,727,2.606,728,3.927,729,2.336,730,3.927,731,2.606,732,3.927,733,3.927,734,3.927,735,2.606,736,2.606,737,1.671,738,2.238,739,1.357,740,3.927,741,2.606,742,3.927,743,2.606,744,2.606,745,2.606,746,2.606,747,2.606,748,2.606,749,2.606,750,2.606,751,2.606,752,2.238,753,2.238,754,2.606,755,2.606,756,2.606,757,2.606,758,2.606,759,2.606,760,2.606,761,2.606,762,2.606,763,2.606,764,2.606,765,2.606,766,3.927,767,2.606,768,2.606,769,2.606,770,2.606,771,4.725,772,2.606,773,1.815,774,2.606,775,3.927,776,2.606,777,3.927,778,2.606,779,3.927,780,2.606,781,2.606,782,2.606,783,2.606,784,2.606,785,2.606,786,2.606,787,3.927,788,2.606,789,2.606,790,2.238,791,2.606,792,2.606,793,2.606,794,2.606,795,2.606]],["title/directives/AutofocusDirective.html",[173,0.839,217,0.798]],["body/directives/AutofocusDirective.html",[3,0.245,4,0.214,9,0.184,11,1.329,12,1.731,14,1.358,15,1.468,22,0.245,31,0.913,34,1.792,37,0.765,44,0.81,46,0.765,47,0.019,48,0.52,49,0.245,50,0.765,53,0.765,54,1.468,98,0.483,99,0.483,115,0.245,116,0.376,117,1.231,173,1.468,216,1.426,217,1.397,218,1.7,220,0.016,221,0.016,796,4.63,797,5.391,798,6.336,799,5.391,800,5.391,801,5.391]],["title/interfaces/Category.html",[190,0.685,395,0.839]],["body/interfaces/Category.html",[3,0.243,4,0.212,9,0.182,22,0.243,23,0.662,47,0.019,48,0.684,49,0.33,85,1.374,115,0.243,190,1.193,220,0.016,221,0.016,230,1.346,233,1.346,271,1.635,307,1.409,330,2.788,395,1.22,396,2.337,398,2.783,399,2.783,400,1.995,802,4.589,803,5.343,804,4.22,805,4.941,806,4.941]],["title/components/CategoryDialogComponent.html",[0,0.189,189,0.839]],["body/components/CategoryDialogComponent.html",[0,0.283,1,0.743,2,1.265,3,0.156,4,0.136,5,0.949,6,0.949,7,0.949,8,0.949,9,0.117,11,0.989,12,1.39,14,0.861,15,1.723,16,1.636,18,1.148,20,1.148,22,0.156,23,0.495,25,2.286,26,2.562,31,0.679,34,1.506,37,0.679,44,0.821,46,0.485,47,0.019,48,0.607,49,0.251,50,0.485,53,0.893,54,1.365,61,1.66,72,1.958,93,1.581,95,0.379,98,0.535,99,0.306,100,1.417,107,0.743,115,0.156,116,0.239,118,0.94,130,2.874,134,2.022,152,1.265,170,0.949,171,1.328,172,1.328,173,0.781,174,1.66,175,0.949,176,0.949,177,0.781,178,1.265,179,0.893,180,1.858,181,0.781,182,0.893,183,0.743,184,0.949,185,0.781,186,0.949,187,0.743,188,0.949,189,1.365,190,1.348,191,0.781,192,0.707,193,0.743,194,0.781,195,0.743,196,0.781,197,0.949,198,0.743,199,0.949,200,0.707,201,0.949,202,0.781,203,0.949,204,0.743,205,0.949,206,0.781,207,0.82,208,0.949,209,0.743,210,0.949,211,0.781,212,1.093,213,0.949,214,0.707,215,0.949,216,0.904,217,0.743,218,0.904,219,0.949,220,0.012,221,0.012,230,1.205,244,1.899,245,3.065,246,2.657,247,2.552,248,4.541,249,4.541,250,2.382,251,4.164,252,3.556,253,3.333,254,3.333,256,4.164,257,3.333,258,3.333,259,2.382,261,3.067,262,2.657,263,2.035,264,2.657,265,2.937,266,3.065,267,1.899,268,1.581,269,1.899,271,1.046,272,1.496,273,2.035,274,1.899,275,1.676,277,2.552,278,2.552,281,2.035,282,1.899,283,2.382,291,2.874,292,2.382,293,2.035,330,1.344,578,5.127,806,2.382,807,5.749,808,3.42,809,3.42,810,3.42,811,2.937,812,2.937,813,2.937,814,3.42]],["title/injectables/CategoryService.html",[401,0.881,815,2.558]],["body/injectables/CategoryService.html",[3,0.138,4,0.121,9,0.104,22,0.138,23,0.455,29,2.128,31,0.625,37,0.432,39,1.36,44,0.79,46,0.854,47,0.019,48,0.605,49,0.285,50,0.854,51,1.507,53,0.94,66,1.026,70,2.444,74,2.026,85,0.567,86,0.729,87,0.694,95,0.819,98,0.593,99,0.272,102,0.844,115,0.138,116,0.212,117,0.694,118,1.114,129,1.026,153,2.444,190,1.349,192,0.628,220,0.011,221,0.011,222,1.329,233,1.428,238,3.063,240,2.078,271,0.93,277,2.782,278,2.782,291,3.133,307,1.17,330,2.542,357,3.246,376,2.778,400,1.93,401,1.056,403,1.329,406,2.821,407,3.065,408,1.49,409,2.778,411,3.498,420,3.449,425,3.678,428,3.065,430,2.618,432,3.37,433,4.246,434,4.368,435,4.02,436,4.803,437,3.065,439,2.618,440,3.065,442,3.372,443,1.329,444,1.49,445,1.259,446,1.49,448,1.688,449,1.809,450,1.329,451,1.49,452,1.329,454,1.49,455,1.329,456,1.259,457,2.117,458,2.117,460,3.634,461,2.117,462,3.948,463,3.602,464,2.117,466,2.117,683,1.809,716,2.117,737,1.949,804,1.809,805,2.117,806,2.117,811,2.611,815,3.065,816,2.611,817,3.779,818,4.4,819,3.04,820,4.394,821,4.02,822,5.386,823,6.271,824,4.869,825,6.015,826,3.04,827,3.779,828,4.607,829,3.04,830,3.37,831,3.37,832,3.04,833,1.809,834,3.04,835,3.04,836,2.611,837,1.949,838,3.04,839,4.4,840,3.04,841,3.04,842,3.04,843,3.04,844,3.04,845,2.611,846,3.04,847,3.04,848,3.04,849,2.611,850,2.611,851,3.04,852,3.04]],["title/interfaces/Course.html",[192,0.759,395,0.839]],["body/interfaces/Course.html",[3,0.239,4,0.209,9,0.179,22,0.239,23,0.656,47,0.019,48,0.68,49,0.334,85,1.406,115,0.239,192,1.309,220,0.016,221,0.016,230,1.325,233,1.325,271,1.609,307,1.369,330,2.773,395,1.201,396,2.3,398,2.739,399,2.739,400,1.963,677,3.776,804,4.198,805,4.915,853,4.517,854,5.259,855,5.405,856,5.405]],["title/components/CourseDialogComponent.html",[0,0.189,191,0.839]],["body/components/CourseDialogComponent.html",[0,0.28,1,0.725,2,1.244,3,0.152,4,0.133,5,0.926,6,0.926,7,0.926,8,0.926,9,0.114,11,0.972,12,1.372,14,0.84,15,1.719,16,1.632,18,1.128,20,1.128,22,0.152,23,0.487,25,2.256,26,2.542,31,0.667,34,1.49,37,0.667,44,0.855,46,0.474,47,0.019,48,0.601,49,0.248,50,0.474,53,0.885,54,1.35,61,1.642,72,1.933,93,1.564,95,0.37,98,0.529,99,0.299,100,1.382,107,0.725,115,0.152,116,0.233,118,0.924,130,2.836,134,2.003,152,1.244,170,0.926,171,1.306,172,1.306,173,0.762,174,1.642,175,0.926,176,0.926,177,0.762,178,1.244,179,0.877,180,1.845,181,0.762,182,0.877,183,0.725,184,0.926,185,0.762,186,0.926,187,0.725,188,0.926,189,0.762,190,0.623,191,1.35,192,1.487,193,0.725,194,0.762,195,0.725,196,0.762,197,0.926,198,0.725,199,0.926,200,0.69,201,0.926,202,0.762,203,0.926,204,0.725,205,0.926,206,0.762,207,0.8,208,0.926,209,0.725,210,0.926,211,0.762,212,1.074,213,0.926,214,0.69,215,0.926,216,0.882,217,0.725,218,0.882,219,0.926,220,0.012,221,0.012,230,1.185,244,1.853,245,3.025,246,2.612,247,2.518,248,4.505,249,4.505,250,2.324,251,4.119,252,3.518,254,3.275,256,4.119,257,3.275,258,3.275,259,2.324,261,3.015,262,2.612,263,1.985,264,2.612,266,3.025,267,1.853,268,1.543,269,1.853,271,1.021,272,1.459,273,1.985,274,1.853,275,1.635,277,2.518,278,2.518,281,1.985,282,1.853,283,2.324,291,2.836,292,2.324,293,1.985,303,4.039,305,2.555,308,2.555,309,2.555,330,1.311,576,5.285,812,2.866,813,2.866,855,2.555,856,2.555,857,5.927,858,5.446,859,4.678,860,3.336,861,3.336,862,3.336,863,3.336,864,3.336,865,3.336,866,3.336,867,3.015,868,4.703]],["title/injectables/CourseService.html",[401,0.881,869,2.558]],["body/injectables/CourseService.html",[3,0.131,4,0.115,9,0.099,22,0.131,23,0.439,29,2.177,31,0.602,37,0.41,39,1.328,44,0.802,46,0.875,47,0.019,48,0.614,49,0.29,50,0.875,51,1.464,53,0.962,57,1.584,66,2.389,68,1.853,70,2.356,85,0.539,86,0.694,87,0.66,95,0.828,98,0.585,99,0.259,102,0.803,115,0.131,116,0.202,117,0.66,118,1.088,129,0.976,149,2.014,153,2.356,158,1.506,192,1.474,220,0.011,221,0.011,222,1.264,233,1.485,238,3.082,240,2.099,241,1.72,271,0.885,277,2.85,278,2.85,279,1.606,291,3.07,307,1.15,330,1.136,357,3.02,376,2.889,400,1.876,401,1.018,403,1.264,406,2.72,407,2.955,408,1.417,409,2.713,411,3.468,420,1.506,425,3.763,426,1.079,427,0.929,428,2.955,430,3.293,433,3.95,434,4.292,435,3.95,436,4.72,437,2.955,439,2.524,440,2.955,442,2.989,443,1.264,444,1.417,445,1.198,446,1.417,448,1.606,449,1.72,450,1.264,451,1.417,452,1.264,454,1.417,455,1.264,456,1.198,457,2.014,458,2.014,460,3.779,461,2.014,462,4.106,463,3.856,464,2.014,466,2.014,680,1.853,683,1.72,716,2.014,724,4.549,737,1.853,804,1.72,805,2.014,817,3.644,827,3.644,828,5.261,830,3.249,831,3.249,833,1.72,836,2.483,837,1.853,849,2.483,850,2.483,855,2.214,856,2.214,867,4.537,869,2.955,870,2.483,871,4.242,872,4.242,873,2.891,874,4.242,875,2.891,876,2.891,877,2.891,878,4.242,879,2.891,880,2.989,881,2.891,882,2.891,883,2.483,884,2.483,885,2.483,886,2.483,887,2.483,888,2.483,889,2.483,890,2.483,891,2.891,892,2.891,893,2.891,894,4.242,895,2.891,896,2.891,897,2.891,898,2.891,899,2.891,900,2.891,901,2.891,902,2.891,903,2.891,904,2.891,905,2.891,906,2.891]],["title/components/DialogComponent.html",[0,0.189,193,0.798]],["body/components/DialogComponent.html",[0,0.312,1,0.898,2,1.439,3,0.188,4,0.164,5,1.147,6,1.147,7,1.147,8,1.147,9,0.141,11,1.125,12,1.533,14,1.041,15,1.751,16,1.664,18,1.305,20,1.305,22,0.188,23,0.563,25,2.521,26,2.139,31,0.772,34,1.629,37,0.587,44,0.766,46,0.587,47,0.019,48,0.623,49,0.247,50,0.587,53,0.587,54,1.243,95,0.458,98,0.487,99,0.37,100,1.712,107,0.898,115,0.188,116,0.288,134,2.078,152,1.439,170,1.147,171,1.511,172,1.511,173,0.944,174,1.795,175,1.147,176,1.147,177,0.944,178,1.439,179,1.015,180,1.952,181,0.944,182,1.015,183,0.898,184,1.147,185,0.944,186,1.147,187,0.898,188,1.147,189,0.944,190,0.771,191,0.944,192,0.854,193,1.405,194,0.944,195,0.898,196,0.944,197,1.147,198,0.898,199,1.147,200,0.854,201,1.147,202,0.944,203,1.147,204,0.898,205,1.147,206,0.944,207,0.992,208,1.147,209,0.898,210,1.147,211,0.944,212,0.944,213,1.147,214,0.854,215,1.147,216,1.093,217,0.898,218,1.093,219,1.147,220,0.013,221,0.013,245,3.379,246,3.022,263,2.459,264,2.296,267,2.296,269,2.296,294,4.145,422,3.55,424,3.367,907,3.55,908,4.133,909,4.133,910,4.133,911,4.133,912,4.133,913,6.084,914,5.442,915,5.442,916,4.133]],["title/interfaces/DialogData.html",[395,0.839,917,2.558]],["body/interfaces/DialogData.html",[0,0.275,3,0.183,4,0.16,9,0.137,11,0.831,12,1.346,13,3.18,15,0.919,16,0.874,18,0.965,20,0.965,22,0.183,23,0.553,25,2.214,26,1.581,29,1.293,30,1.972,33,2.234,34,1.013,37,0.571,39,1.282,40,2.776,47,0.019,49,0.303,51,1.172,54,1.461,56,2.393,57,1.502,58,2.393,60,2.62,61,1.484,62,2.393,63,2.472,66,1.358,85,1.34,92,2.214,93,1.414,95,0.758,98,0.625,99,0.36,100,1.667,102,1.117,103,1.972,104,1.667,106,2.234,107,0.874,108,2.393,110,1.231,111,1.231,112,1.231,115,0.243,116,0.281,118,1.05,119,1.972,120,1.972,121,1.972,130,2.095,134,1.293,135,3.468,146,2.579,152,1.064,220,0.013,221,0.013,230,1.346,247,1.86,252,3.18,262,2.969,264,2.234,266,3.553,267,2.234,268,1.86,269,2.234,282,2.234,293,3.18,307,1.277,337,2.65,338,2.65,339,2.797,350,4.456,395,0.919,396,1.759,614,3.081,620,3.081,627,2.802,635,2.027,636,2.802,729,2.393,739,2.095,917,4.181,918,3.081,919,3.081,920,3.455,921,3.455,922,3.455,923,3.455,924,3.455,925,3.455,926,3.455,927,3.455,928,5.156,929,3.455,930,3.081,931,3.455,932,2.802,933,3.455,934,3.455,935,3.455,936,3.455]],["title/components/EditAnswerDialogComponent.html",[0,0.189,194,0.839]],["body/components/EditAnswerDialogComponent.html",[0,0.284,1,0.745,2,1.267,3,0.156,4,0.136,5,0.952,6,0.952,7,0.952,8,0.952,9,0.117,11,0.991,12,1.392,14,0.863,15,1.724,16,1.637,18,1.15,20,1.15,22,0.156,23,0.496,26,1.884,31,0.68,34,1.507,37,0.784,44,0.822,47,0.019,48,0.533,49,0.218,53,0.784,54,1.262,61,1.33,68,3.836,72,1.216,74,1.466,86,0.822,87,0.783,93,1.267,95,0.38,98,0.429,99,0.307,107,0.745,115,0.156,116,0.239,132,2.662,134,1.776,152,1.836,169,2.851,170,0.952,171,1.33,172,1.33,173,0.783,174,1.661,175,0.952,176,0.952,177,0.783,178,1.267,179,1.414,180,1.859,181,0.783,182,0.894,183,0.745,184,0.952,185,0.783,186,0.952,187,0.745,188,0.952,189,0.783,190,0.64,191,0.783,192,0.708,193,0.745,194,1.367,195,0.745,196,0.783,197,0.952,198,0.745,199,0.952,200,0.708,201,0.952,202,0.783,203,0.952,204,0.745,205,0.952,206,0.783,207,0.822,208,0.952,209,0.745,210,0.952,211,0.783,212,1.094,213,0.952,214,0.708,215,0.952,216,0.906,217,0.745,218,0.906,219,0.952,220,0.012,221,0.012,230,1.207,244,1.904,245,3.069,246,2.662,247,2.216,253,2.387,270,2.944,271,1.049,272,1.499,273,2.039,274,1.904,275,1.68,276,2.197,277,2.216,278,2.555,279,1.904,280,2.039,281,2.039,291,1.785,298,3.836,308,3.671,352,3.671,427,1.54,571,5.13,635,1.157,937,5.752,938,4.746,939,5.139,940,4.116,941,4.116,942,4.746,943,2.944,944,5.139,945,3.428,946,3.428,947,4.116,948,4.116,949,3.072,950,4.116,951,4.116,952,4.116,953,3.428,954,2.944,955,4.792,956,3.428,957,4.233,958,4.746,959,4.116,960,4.116,961,2.944,962,2.944,963,2.944,964,2.944,965,2.944,966,2.944]],["title/components/ErrorPageComponent.html",[0,0.189,195,0.798]],["body/components/ErrorPageComponent.html",[0,0.297,1,0.811,2,1.344,3,0.17,4,0.148,5,1.036,6,1.036,7,1.036,8,1.036,9,0.127,11,1.051,12,1.456,13,3.439,14,0.94,15,1.737,16,1.649,18,1.22,20,1.22,22,0.17,23,0.526,31,0.722,33,3.447,34,1.563,37,0.53,44,0.818,46,0.53,47,0.019,48,0.598,49,0.263,50,0.53,53,0.722,54,1.417,56,3.024,57,1.898,58,3.024,60,2.491,74,1.769,85,0.949,86,0.896,87,0.853,92,2.395,93,1.344,95,0.414,98,0.517,99,0.334,101,1.83,102,1.036,107,0.811,110,1.142,111,1.142,112,1.142,115,0.17,116,0.261,117,0.853,122,3.002,134,1.857,152,1.344,170,1.036,171,1.411,172,1.411,173,0.853,174,1.723,175,1.036,176,1.036,177,0.853,178,1.344,179,0.949,180,1.903,181,0.853,182,0.949,183,0.811,184,1.036,185,0.853,186,1.036,187,0.811,188,1.036,189,0.853,190,0.697,191,0.853,192,0.772,193,0.811,194,0.853,195,1.349,196,1.593,197,1.036,198,0.811,199,1.036,200,0.772,201,1.036,202,0.853,203,1.036,204,0.811,205,1.036,206,0.853,207,0.896,208,1.036,209,0.811,210,1.036,211,0.853,212,0.853,213,1.036,214,0.772,215,1.036,216,0.987,217,0.811,218,0.987,219,1.036,220,0.013,221,0.013,553,4.666,606,3.894,615,3.894,616,5.33,632,3.207,967,5.753,968,3.207,969,5.781,970,5.084,971,5.781,972,3.734,973,5.084,974,3.734,975,3.734,976,5.781,977,3.734,978,3.734,979,3.734,980,3.734,981,3.734]],["title/components/FaqComponent.html",[0,0.189,198,0.798]],["body/components/FaqComponent.html",[0,0.301,1,0.831,2,1.366,3,0.174,4,0.152,5,1.061,6,1.061,7,1.061,8,1.061,9,0.13,14,0.963,15,1.74,16,1.653,18,1.239,20,1.239,22,0.174,23,0.535,44,0.481,47,0.019,48,0.564,57,1.929,66,2.277,72,1.833,73,3.312,74,1.17,86,0.917,87,0.873,95,0.424,98,0.342,99,0.342,107,0.831,110,1.17,111,1.17,112,1.17,115,0.174,116,0.267,152,1.366,165,3.312,170,1.061,171,1.434,172,1.434,173,0.873,174,1.74,175,1.061,176,1.061,177,0.873,178,1.366,179,0.964,180,1.915,181,0.873,182,0.964,183,0.831,184,1.061,185,0.873,186,1.061,187,0.831,188,1.061,189,0.873,190,0.713,191,0.873,192,0.79,193,0.831,194,0.873,195,0.831,196,0.873,197,1.061,198,1.362,199,1.061,200,0.79,201,1.061,202,0.873,203,1.061,204,0.831,205,1.061,206,0.873,207,0.917,208,1.061,209,0.831,210,1.061,211,0.873,212,0.873,213,1.061,214,0.79,215,1.061,216,1.011,217,0.831,218,1.011,219,1.061,220,0.013,221,0.013,272,2.259,276,3.312,311,3.074,339,2.259,378,3.284,379,4.438,381,2.929,420,2.691,424,2.691,427,1.66,476,2.389,596,4.482,630,4.438,662,5.167,676,4.438,982,3.284,983,5.852,984,5.167,985,5.852,986,3.824,987,4.438,988,3.957,989,5.167,990,5.167,991,5.167,992,5.383,993,4.438,994,5.167,995,5.167,996,5.167,997,5.167,998,4.438,999,5.167,1000,5.167,1001,5.167,1002,3.957,1003,5.167,1004,6.267,1005,5.167,1006,3.824,1007,3.957,1008,3.824,1009,5.167,1010,6.267,1011,5.167,1012,5.167,1013,5.167,1014,5.167,1015,3.824,1016,3.824,1017,3.824]],["title/components/GameComponent.html",[0,0.189,200,0.759]],["body/components/GameComponent.html",[0,0.182,1,0.366,2,0.736,3,0.077,4,0.067,5,0.468,6,0.468,7,0.468,8,0.468,9,0.057,11,0.575,12,0.895,14,0.425,15,1.574,16,1.489,18,0.667,20,0.667,22,0.077,23,0.288,25,1.472,26,1.794,29,1.142,30,1.741,31,0.395,34,1.039,36,2.131,37,0.239,38,1.081,39,0.989,40,2.404,41,3.092,42,3.179,43,2.887,44,0.919,46,0.585,47,0.019,48,0.501,49,0.315,50,0.585,51,0.811,53,0.824,54,1.325,57,1.539,60,1.364,66,0.939,72,1.744,74,1.396,79,1.545,85,0.917,86,1.693,87,1.612,89,2.721,91,3.15,92,2.465,93,1.922,95,0.576,98,0.544,99,0.151,100,0.698,101,0.826,102,0.468,103,0.826,104,0.698,105,1.174,106,0.936,107,0.366,115,0.077,116,0.118,117,0.385,118,0.81,119,0.826,120,0.826,121,1.364,122,1.907,123,2.148,128,1.973,129,1.199,134,0.542,138,1.938,143,1.291,152,0.736,157,2.131,158,2.377,160,3.542,162,3.179,163,1.174,165,1.081,166,1.291,168,1.174,170,0.468,171,0.772,172,0.772,173,0.385,174,1.145,175,0.468,176,0.468,177,0.385,178,0.736,179,1.205,180,1.443,181,0.385,182,1.014,183,0.366,184,0.468,185,0.385,186,0.468,187,0.366,188,0.468,189,0.385,190,0.315,191,0.385,192,0.348,193,0.605,194,0.385,195,0.366,196,0.385,197,0.468,198,0.366,199,0.468,200,0.852,201,0.468,202,0.385,203,0.468,204,0.366,205,0.468,206,0.385,207,0.404,208,0.468,209,0.366,210,0.468,211,0.385,212,0.385,213,0.468,214,0.348,215,0.468,216,0.446,217,0.366,218,0.446,219,0.468,220,0.007,221,0.007,230,0.701,240,1.142,275,1.364,294,2.278,301,1.174,307,0.97,310,1.174,311,2.114,315,3.018,320,2.721,337,0.698,338,0.698,339,0.737,354,3.159,357,1.741,358,1.291,359,1.291,374,1.448,384,2.887,392,1.448,395,0.385,417,1.081,418,1.784,424,0.878,426,2.166,427,2.14,435,1.784,476,0.779,597,1.938,599,1.938,601,2.475,677,2.29,682,1.938,712,1.174,729,1.003,737,1.081,773,1.938,790,2.39,820,2.926,867,2.926,932,1.174,993,2.39,1002,2.131,1007,1.291,1018,1.291,1019,3.051,1020,2.39,1021,3.051,1022,3.051,1023,3.051,1024,4.464,1025,3.051,1026,3.051,1027,3.051,1028,4.464,1029,3.051,1030,3.051,1031,4.464,1032,3.051,1033,3.051,1034,3.051,1035,3.051,1036,3.051,1037,3.051,1038,3.051,1039,3.92,1040,3.051,1041,3.051,1042,3.051,1043,2.721,1044,3.542,1045,3.553,1046,2.782,1047,3.542,1048,3.542,1049,3.542,1050,3.542,1051,2.782,1052,3.051,1053,2.644,1054,2.782,1055,1.686,1056,1.686,1057,2.39,1058,1.686,1059,1.686,1060,1.686,1061,1.686,1062,1.686,1063,1.686,1064,2.39,1065,1.686,1066,3.051,1067,2.39,1068,1.686,1069,1.686,1070,1.686,1071,1.686,1072,1.686,1073,1.686,1074,1.686,1075,1.686,1076,1.686,1077,1.686,1078,1.686,1079,1.686,1080,1.686,1081,1.686,1082,1.686,1083,1.686,1084,1.686,1085,1.686,1086,1.686,1087,1.686,1088,1.686,1089,1.686,1090,1.686,1091,1.686,1092,1.686,1093,1.686,1094,1.686,1095,1.686,1096,1.686,1097,1.686,1098,1.448,1099,1.448,1100,1.448,1101,1.448,1102,1.291,1103,2.131,1104,1.448,1105,3.051,1106,1.448,1107,3.051,1108,1.448,1109,1.448,1110,1.448,1111,1.448,1112,2.39,1113,1.448,1114,1.448,1115,1.448,1116,1.448,1117,1.448,1118,3.051,1119,1.448,1120,2.39,1121,1.448,1122,2.39,1123,1.448,1124,1.448,1125,1.448,1126,2.39,1127,1.448,1128,1.448,1129,1.448,1130,1.448,1131,1.448,1132,1.448,1133,1.448,1134,1.448,1135,1.448,1136,1.448,1137,1.448,1138,1.448,1139,1.448,1140,1.448,1141,1.448,1142,1.291,1143,1.448,1144,1.448,1145,1.448,1146,1.448,1147,3.051,1148,2.39,1149,2.39,1150,1.448,1151,2.39,1152,1.448,1153,1.448,1154,1.448,1155,1.448,1156,1.448,1157,1.448,1158,2.131,1159,1.448,1160,1.448,1161,1.448,1162,1.448,1163,1.448,1164,1.448,1165,1.448,1166,1.448,1167,1.448,1168,1.448,1169,1.448,1170,2.39,1171,1.448,1172,1.448,1173,1.448,1174,2.131,1175,1.448,1176,1.448,1177,1.448,1178,2.131,1179,1.448,1180,1.448,1181,2.782,1182,2.782,1183,2.782,1184,2.782,1185,2.782,1186,4.444,1187,4.124,1188,4.124,1189,2.782,1190,2.782,1191,2.782,1192,2.131,1193,2.782,1194,2.782,1195,2.782,1196,2.782,1197,2.782,1198,2.782,1199,2.782,1200,2.782,1201,3.542,1202,2.782,1203,2.782,1204,2.39,1205,2.782,1206,2.782,1207,2.782,1208,2.782,1209,1.686,1210,1.686,1211,1.686,1212,1.686,1213,1.448,1214,1.686,1215,1.686]],["title/components/HeaderComponent.html",[0,0.189,202,0.839]],["body/components/HeaderComponent.html",[0,0.286,1,0.758,2,1.283,3,0.159,4,0.139,5,0.968,6,0.968,7,0.968,8,0.968,9,0.119,11,1.003,12,1.405,14,0.878,15,1.726,16,1.639,18,1.164,20,1.164,22,0.159,23,0.502,30,2.733,31,0.688,33,3.348,34,1.519,37,0.495,39,1.574,44,0.864,46,0.495,47,0.019,48,0.581,49,0.221,50,0.495,53,0.792,54,1.377,56,2.886,57,1.811,58,2.886,60,2.377,61,1.674,62,3.587,63,2.788,86,1.338,87,1.274,92,2.31,95,0.668,98,0.499,99,0.312,102,0.968,104,1.445,107,0.758,110,1.067,111,1.067,112,1.067,115,0.159,116,0.243,117,0.796,118,1.096,119,1.709,146,2.235,152,1.283,170,0.968,171,1.347,172,1.347,173,0.796,174,1.674,175,0.968,176,0.968,177,0.796,178,1.283,179,0.905,180,1.868,181,0.796,182,0.905,183,0.758,184,0.968,185,0.796,186,0.968,187,0.758,188,0.968,189,0.796,190,0.651,191,0.796,192,0.721,193,0.758,194,0.796,195,0.758,196,0.796,197,0.968,198,0.758,199,0.968,200,0.721,201,0.968,202,1.377,203,0.968,204,0.758,205,0.968,206,0.796,207,0.837,208,0.968,209,0.758,210,0.968,211,0.796,212,0.796,213,0.968,214,0.721,215,0.968,216,0.922,217,0.758,218,0.922,219,0.968,220,0.012,221,0.012,230,0.878,380,3.715,426,1.302,427,2.162,472,2.429,591,3.715,596,3.715,597,3.378,599,3.378,661,4.166,662,3.715,706,4.166,707,4.166,988,3.715,1216,2.995,1217,5.577,1218,4.85,1219,4.79,1220,5.577,1221,4.79,1222,6.029,1223,4.85,1224,3.487,1225,3.487,1226,3.487,1227,3.487,1228,3.487,1229,3.487,1230,3.487,1231,3.487,1232,3.487,1233,3.487,1234,3.487,1235,3.487,1236,3.487,1237,3.487,1238,4.85,1239,3.715,1240,4.85,1241,4.85]],["title/components/HomeComponent.html",[0,0.189,204,0.798]],["body/components/HomeComponent.html",[0,0.309,1,0.879,2,1.419,3,0.184,4,0.161,5,1.123,6,1.123,7,1.123,8,1.123,9,0.138,12,1.019,14,1.019,15,1.748,16,1.661,18,1.287,20,1.287,22,0.184,23,0.555,37,0.574,44,0.758,46,0.574,47,0.019,48,0.675,49,0.274,50,0.574,66,1.811,74,1.237,75,3.474,79,2.979,85,0.755,86,0.97,87,0.924,95,0.448,98,0.48,99,0.362,107,0.879,110,1.237,111,1.237,112,1.237,115,0.184,116,0.282,117,0.924,152,1.419,170,1.123,171,1.489,172,1.489,173,0.924,174,1.78,175,1.123,176,1.123,177,0.924,178,1.419,179,1.001,180,1.942,181,0.924,182,1.001,183,0.879,184,1.123,185,0.924,186,1.123,187,0.879,188,1.123,189,0.924,190,0.755,191,0.924,192,0.836,193,0.879,194,0.924,195,0.879,196,0.924,197,1.123,198,0.879,199,1.123,200,0.836,201,1.123,202,0.924,203,1.123,204,1.393,205,1.123,206,0.924,207,0.97,208,1.123,209,0.879,210,1.123,211,0.924,212,0.924,213,1.123,214,0.836,215,1.123,216,1.07,217,0.879,218,1.07,219,1.123,220,0.013,221,0.013,418,3.439,424,2.794,501,3.098,502,2.817,591,4.109,987,4.607,988,3.098,992,4.607,1242,3.474,1243,6.019,1244,5.364,1245,6.019,1246,4.044,1247,6.411,1248,5.364,1249,5.364,1250,4.607,1251,5.364,1252,4.044,1253,6.019,1254,4.044,1255,4.044,1256,5.364,1257,4.044,1258,5.364,1259,5.364,1260,5.364,1261,4.044]],["title/components/LoadingScreenComponent.html",[0,0.189,206,0.839]],["body/components/LoadingScreenComponent.html",[0,0.233,1,0.53,2,0.988,3,0.111,4,0.097,5,0.677,6,0.677,7,0.677,8,0.677,9,0.083,11,0.772,13,2.7,14,0.614,15,1.662,16,1.576,18,0.896,20,0.896,22,0.17,23,0.387,31,0.53,33,2.824,34,1.281,37,0.53,44,0.758,46,0.346,47,0.019,48,0.49,49,0.206,50,0.346,53,0.644,54,1.252,86,0.896,87,1.036,92,1.88,95,0.27,98,0.455,99,0.218,102,0.677,107,0.53,115,0.111,116,0.17,118,0.892,132,2.824,152,0.988,158,2.648,161,6.554,168,1.699,169,3.025,170,0.677,171,1.037,172,1.037,173,0.557,174,1.412,175,0.677,176,0.677,177,0.557,178,0.988,179,0.697,180,1.67,181,0.557,182,0.697,183,0.53,184,0.677,185,0.557,186,0.677,187,0.53,188,0.677,189,0.557,190,0.455,191,0.557,192,0.504,193,0.53,194,0.557,195,0.53,196,0.557,197,0.677,198,0.53,199,0.677,200,0.504,201,0.677,202,0.557,203,0.677,204,0.53,205,0.677,206,1.161,207,1.627,208,0.677,209,0.53,210,0.677,211,0.557,212,0.557,213,0.677,214,0.504,215,0.677,216,0.645,217,0.53,218,0.645,219,0.677,220,0.009,221,0.009,226,6.292,232,1.699,298,3.26,307,0.455,384,3.211,390,3.208,393,4.367,427,1.2,445,1.011,491,1.699,572,4.754,677,1.355,798,4.367,957,3.476,1007,1.868,1213,3.897,1262,5.331,1263,2.095,1264,4.538,1265,4.367,1266,4.538,1267,3.735,1268,5.085,1269,4.538,1270,5.085,1271,2.095,1272,3.706,1273,4.538,1274,4.538,1275,5.085,1276,3.735,1277,2.439,1278,2.439,1279,2.439,1280,3.735,1281,2.439,1282,2.439,1283,2.439,1284,2.095,1285,2.439,1286,3.735,1287,2.439,1288,2.439,1289,2.439,1290,2.095,1291,3.735,1292,4.538,1293,2.439,1294,2.439,1295,2.439,1296,3.735,1297,2.439,1298,2.439,1299,2.439,1300,2.439,1301,2.439,1302,5.481,1303,5.085,1304,2.439,1305,3.735,1306,2.439,1307,3.735,1308,2.439,1309,5.481,1310,7.154,1311,2.439,1312,2.439,1313,2.095,1314,5.085,1315,2.439,1316,2.439,1317,3.735,1318,2.439,1319,2.439,1320,2.439,1321,4.538,1322,2.439,1323,3.735,1324,3.735,1325,3.735,1326,5.085,1327,4.538,1328,5.085,1329,3.735,1330,4.538,1331,6.017,1332,3.735,1333,2.439,1334,3.735,1335,3.735,1336,2.439,1337,2.439,1338,2.439,1339,2.439,1340,2.439,1341,5.781,1342,5.481,1343,2.439,1344,5.481,1345,2.439,1346,2.439,1347,2.439,1348,2.439,1349,2.439,1350,2.439,1351,2.439,1352,2.439,1353,2.439,1354,3.735,1355,5.085,1356,2.439,1357,2.439,1358,2.439,1359,2.439,1360,2.439,1361,2.439,1362,2.439,1363,2.439,1364,2.439,1365,3.735,1366,3.735,1367,2.439,1368,2.439,1369,3.735,1370,3.735,1371,2.439,1372,2.439,1373,3.735,1374,3.735,1375,2.439,1376,2.439,1377,3.735,1378,3.735,1379,2.439,1380,3.735,1381,4.538,1382,2.439,1383,3.735,1384,2.439,1385,2.439,1386,2.439,1387,2.439,1388,2.439,1389,2.439,1390,2.439,1391,2.439,1392,2.439,1393,2.439,1394,2.439,1395,2.439,1396,2.439,1397,2.439,1398,2.439,1399,2.439,1400,2.439,1401,2.439,1402,2.439,1403,2.439]],["title/interceptors/LoadingScreenInterceptor.html",[488,2.354,1404,3.154]],["body/interceptors/LoadingScreenInterceptor.html",[3,0.204,4,0.178,9,0.153,11,0.925,22,0.204,23,0.593,31,0.814,37,0.636,44,0.839,46,0.814,47,0.019,48,0.553,49,0.303,50,0.814,53,0.636,86,1.375,87,1.309,98,0.617,99,0.401,102,1.243,115,0.204,116,0.312,117,1.023,129,1.511,207,1.375,220,0.014,221,0.014,240,1.842,307,0.835,384,3.702,401,1.375,426,1.671,427,1.439,443,1.958,445,1.855,488,3.675,629,4.843,635,1.511,1265,4.923,1271,3.846,1272,4.519,1284,3.846,1405,4.477,1406,3.846,1407,6.323,1408,6.323,1409,5.732,1410,5.732,1411,5.732,1412,6.666,1413,6.323,1414,6.666,1415,4.477,1416,4.477,1417,4.477,1418,5.732,1419,5.732,1420,5.732,1421,4.477,1422,5.732,1423,5.732,1424,4.477,1425,6.323,1426,4.477,1427,4.477,1428,4.477,1429,4.477,1430,6.666,1431,4.477,1432,4.477,1433,4.477,1434,4.477]],["title/injectables/LoadingScreenService.html",[401,0.881,1272,2.354]],["body/injectables/LoadingScreenService.html",[3,0.217,4,0.189,9,0.163,22,0.217,23,0.617,31,0.847,44,0.902,46,0.677,47,0.019,48,0.46,49,0.271,50,0.677,53,0.924,54,1.604,86,1.431,87,1.558,98,0.534,99,0.427,102,1.324,115,0.217,116,0.333,118,1.279,207,1.562,220,0.015,221,0.015,240,1.532,401,1.431,403,2.085,426,1.78,427,2.092,455,2.085,456,1.975,635,2.014,677,3.788,880,4.178,1272,3.824,1290,5.123,1435,6.242,1436,4.095,1437,6.509,1438,6.509,1439,6.821,1440,6.821,1441,5.123,1442,4.768,1443,4.768,1444,4.768,1445,4.768,1446,4.768,1447,4.768,1448,4.768,1449,4.768,1450,5.965,1451,4.095,1452,4.768,1453,4.768]],["title/components/LobbyComponent.html",[0,0.189,209,0.798]],["body/components/LobbyComponent.html",[0,0.209,1,0.448,2,0.867,3,0.094,4,0.082,5,0.573,6,0.573,7,0.573,8,0.573,9,0.07,11,0.677,12,1.027,14,0.52,15,1.625,16,1.539,18,0.786,20,0.786,22,0.094,23,0.339,24,2.614,27,2.614,29,1.31,31,0.465,32,2.977,34,1.17,37,0.293,38,1.323,39,1.114,40,2.615,43,3.14,44,0.916,46,0.579,47,0.019,48,0.566,49,0.313,50,0.579,51,0.955,53,0.858,54,1.443,79,1.82,85,0.612,86,1.671,87,1.591,92,2.704,93,1.854,95,0.561,98,0.584,99,0.185,102,0.573,103,1.011,104,0.855,105,1.437,106,1.146,107,0.448,115,0.094,116,0.144,117,0.471,118,0.995,120,1.011,121,1.011,122,2.494,123,2.809,128,1.82,129,0.696,132,1.146,137,1.58,138,1.437,139,1.58,142,1.772,147,3.988,148,3.988,149,2.283,150,1.707,152,0.867,158,1.075,165,1.323,166,1.58,167,2.815,168,2.283,169,1.227,170,0.573,171,0.91,172,0.91,173,0.471,174,1.289,175,0.573,176,0.573,177,0.471,178,0.867,179,0.612,180,1.57,181,0.471,182,0.612,183,0.448,184,0.573,185,0.471,186,0.573,187,0.448,188,0.573,189,0.471,190,1.006,191,0.471,192,1.306,193,0.448,194,0.471,195,0.448,196,0.471,197,0.573,198,0.448,199,0.573,200,0.426,201,0.573,202,0.471,203,0.573,204,0.448,205,0.573,206,0.471,207,0.495,208,0.573,209,1.009,210,0.573,211,0.471,212,0.471,213,0.573,214,0.426,215,0.573,216,0.546,217,0.448,218,0.546,219,0.573,220,0.008,221,0.008,230,0.52,268,0.954,272,1.433,307,0.612,345,2.84,348,1.437,371,2.815,420,1.707,426,1.891,427,1.817,430,1.95,476,2.923,597,2.283,627,3.529,635,1.568,738,1.772,773,2.283,815,3.938,820,3.457,845,2.815,859,3.502,869,3.938,880,2.426,1043,3.123,1102,1.58,1103,1.58,1174,2.51,1178,2.51,1186,5.123,1454,1.772,1455,4.077,1456,3.277,1457,4.077,1458,4.077,1459,4.077,1460,4.077,1461,4.077,1462,4.077,1463,4.077,1464,4.077,1465,4.077,1466,4.077,1467,4.077,1468,4.077,1469,4.077,1470,4.077,1471,4.077,1472,4.644,1473,4.644,1474,4.644,1475,4.644,1476,4.644,1477,3.277,1478,3.277,1479,3.938,1480,3.277,1481,2.063,1482,2.063,1483,2.063,1484,2.063,1485,2.063,1486,2.063,1487,2.063,1488,3.277,1489,2.063,1490,3.277,1491,2.063,1492,2.063,1493,2.063,1494,2.063,1495,2.063,1496,2.063,1497,2.063,1498,2.063,1499,2.063,1500,2.063,1501,2.063,1502,2.063,1503,2.063,1504,2.063,1505,2.063,1506,2.063,1507,2.063,1508,2.063,1509,2.063,1510,2.063,1511,2.063,1512,2.063,1513,2.063,1514,2.063,1515,2.063,1516,2.063,1517,2.063,1518,2.063,1519,2.063,1520,2.063,1521,2.063,1522,2.063,1523,2.063,1524,2.063,1525,2.063,1526,2.063,1527,2.063,1528,2.063,1529,2.063,1530,3.277,1531,2.063,1532,2.063,1533,2.063,1534,2.063,1535,2.063,1536,1.58,1537,2.063,1538,2.063,1539,2.063,1540,2.063,1541,2.063,1542,2.063,1543,2.063,1544,2.063,1545,2.063,1546,2.063,1547,3.502,1548,2.063,1549,2.063,1550,3.277,1551,3.277,1552,3.277,1553,5.393,1554,3.277,1555,3.277,1556,3.277,1557,3.277,1558,3.277,1559,2.51,1560,3.277,1561,3.277,1562,2.815,1563,3.988,1564,4.644,1565,3.988,1566,3.277,1567,3.277,1568,3.277,1569,3.277,1570,3.277,1571,3.277,1572,3.277]],["title/injectables/LobbyService.html",[401,0.881,1479,2.558]],["body/injectables/LobbyService.html",[3,0.143,4,0.125,9,0.107,22,0.143,29,2.039,31,0.64,37,0.447,39,1.382,44,0.725,46,0.818,47,0.019,48,0.555,49,0.262,50,0.818,51,1.537,53,0.901,57,2.276,61,0.874,63,3.32,66,1.781,72,1.872,79,3.524,95,0.775,98,0.585,99,0.282,110,0.963,111,0.963,112,0.963,115,0.143,116,0.22,117,0.719,118,0.618,129,1.945,134,1.012,190,0.587,220,0.011,221,0.011,222,2.307,233,1.329,238,3.022,240,2.039,272,1.377,274,1.748,275,1.543,300,2.193,307,1.318,330,2.627,354,4.412,376,3.336,401,1.082,403,1.377,408,1.543,409,2.823,411,2.585,418,2.893,420,2.35,425,3.524,430,3.427,443,1.377,444,1.543,445,1.304,446,1.543,448,1.748,450,1.377,451,1.543,452,1.377,454,1.543,455,1.377,456,1.304,476,3.148,635,1.781,683,1.873,724,3.143,739,1.64,806,2.193,820,3.693,821,4.068,833,3.427,837,2.018,880,1.873,949,2.018,1186,3.456,1192,3.456,1479,3.674,1536,2.411,1559,4.412,1562,3.876,1563,2.704,1565,3.876,1573,2.704,1574,4.512,1575,4.512,1576,4.512,1577,3.148,1578,4.512,1579,6.098,1580,6.098,1581,3.148,1582,4.512,1583,4.512,1584,3.148,1585,3.456,1586,4.512,1587,5.761,1588,4.512,1589,4.512,1590,4.861,1591,4.861,1592,3.148,1593,4.512,1594,4.512,1595,4.512,1596,4.512,1597,2.704,1598,2.411,1599,2.411,1600,2.411,1601,2.411,1602,2.704,1603,2.704,1604,3.148,1605,2.411,1606,4.512,1607,3.148,1608,3.148,1609,3.148,1610,3.148,1611,3.148,1612,2.704,1613,3.674,1614,3.674,1615,3.674,1616,3.148,1617,2.411,1618,2.704,1619,3.876,1620,2.704,1621,2.704,1622,2.411,1623,3.148,1624,2.411,1625,2.704,1626,2.411,1627,2.704,1628,2.704,1629,2.411,1630,2.704,1631,2.411,1632,2.704,1633,2.704,1634,2.411,1635,2.704,1636,2.704,1637,3.674,1638,3.148,1639,3.148,1640,3.148]],["title/interfaces/Player2.html",[91,2.354,395,0.839]],["body/interfaces/Player2.html",[0,0.215,3,0.129,4,0.113,9,0.097,11,0.586,12,1.053,15,0.647,16,0.616,18,0.68,20,0.68,22,0.129,23,0.433,25,1.174,26,1.114,29,0.911,30,1.389,34,0.714,39,1.003,40,2.297,41,2.955,42,2.912,43,2.759,47,0.02,49,0.249,51,0.826,54,0.647,57,1.56,72,1.483,74,0.867,85,1.258,89,2.171,91,3.515,92,2.535,93,1.923,95,0.607,98,0.619,99,0.254,100,1.174,101,1.389,102,0.787,103,1.389,104,1.174,105,1.974,106,1.574,115,0.129,116,0.198,117,0.647,118,1.077,119,1.389,120,1.389,121,2.049,122,2.535,123,2.856,128,2.759,129,1.677,134,0.911,143,2.171,157,3.202,158,3.045,162,3.46,163,1.974,179,1.181,182,1.023,193,0.616,200,0.586,220,0.01,221,0.01,240,1.596,294,1.817,307,1.023,310,1.974,311,1.686,320,2.171,337,2.271,338,2.271,339,2.398,357,1.389,358,2.171,359,2.171,384,3.045,395,0.647,396,1.239,417,1.817,424,1.476,426,2.424,427,2.224,476,1.311,599,1.974,601,1.974,677,1.574,712,3.819,729,1.686,737,1.817,773,2.912,820,1.817,867,1.817,932,1.974,1018,2.171,1019,2.434,1020,2.434,1021,2.434,1022,2.434,1023,2.434,1024,2.434,1025,2.434,1026,2.434,1027,2.434,1028,2.434,1029,2.434,1030,2.434,1031,2.434,1032,2.434,1033,2.434,1034,2.434,1035,2.434,1036,2.434,1037,2.434,1038,2.434,1039,2.434,1040,2.434,1041,2.434,1042,2.434,1043,2.171,1044,2.434,1047,2.434,1048,2.434,1049,2.434,1050,2.434,1052,2.434,1053,2.68,1057,2.434,1064,2.434,1066,3.591,1067,2.434,1098,2.434,1099,2.434,1100,2.434,1101,2.434,1102,2.171,1103,3.202,1104,2.434,1105,4.266,1106,2.434,1107,4.266,1108,2.434,1109,2.434,1110,2.434,1111,2.434,1112,3.591,1113,2.434,1114,2.434,1115,2.434,1116,2.434,1117,2.434,1118,4.266,1119,2.434,1120,3.591,1121,2.434,1122,3.591,1123,2.434,1124,2.434,1125,2.434,1126,3.591,1127,2.434,1128,2.434,1129,2.434,1130,2.434,1131,2.434,1132,2.434,1133,2.434,1134,2.434,1135,2.434,1136,2.434,1137,2.434,1138,2.434,1139,2.434,1140,2.434,1141,2.434,1142,2.171,1143,2.434,1144,2.434,1145,2.434,1146,2.434,1147,2.434,1148,3.591,1149,3.591,1150,2.434,1151,3.591,1152,2.434,1153,2.434,1154,2.434,1155,2.434,1156,2.434,1157,2.434,1158,3.202,1159,2.434,1160,2.434,1161,2.434,1162,2.434,1163,2.434,1164,2.434,1165,2.434,1166,2.434,1167,2.434,1168,2.434,1169,2.434,1170,3.591,1171,2.434,1172,2.434,1173,2.434,1174,3.202,1175,2.434,1176,2.434,1177,2.434,1178,3.202,1179,2.434,1180,2.434]],["title/interfaces/Question.html",[182,0.685,395,0.839]],["body/interfaces/Question.html",[3,0.239,4,0.209,9,0.179,22,0.239,23,0.656,47,0.019,49,0.334,85,1.369,115,0.239,182,1.182,220,0.016,221,0.016,230,1.325,233,1.325,271,1.609,300,4.915,301,4.915,302,5.405,307,1.425,315,2.921,395,1.201,396,2.3,398,2.739,399,2.739,400,1.963,804,4.198,1641,4.517,1642,6.061,1643,5.405]],["title/components/QuestionDialogComponent.html",[0,0.189,211,0.839]],["body/components/QuestionDialogComponent.html",[0,0.286,1,0.756,2,1.281,3,0.158,4,0.138,5,0.966,6,0.966,7,0.966,8,0.966,9,0.119,11,1.001,12,1.403,14,0.876,15,1.726,16,1.639,18,1.162,20,1.162,22,0.158,23,0.501,26,1.903,31,0.687,34,1.517,37,0.791,44,0.825,47,0.019,48,0.537,49,0.22,53,0.791,54,1.272,61,1.344,68,3.861,72,1.235,74,1.482,86,0.835,87,0.795,93,1.281,95,0.385,98,0.434,99,0.311,107,0.756,115,0.158,116,0.243,132,2.69,134,1.79,152,1.281,169,2.881,170,0.966,171,1.344,172,1.344,173,0.795,174,1.672,175,0.966,176,0.966,177,0.795,178,1.281,179,0.904,180,1.867,181,0.795,182,1.342,183,0.756,184,0.966,185,0.795,186,0.966,187,0.756,188,0.966,189,0.795,190,0.649,191,0.795,192,0.719,193,0.756,194,0.795,195,0.756,196,0.795,197,0.966,198,0.756,199,0.966,200,0.719,201,0.966,202,0.795,203,0.966,204,0.756,205,0.966,206,0.795,207,0.835,208,0.966,209,0.756,210,0.966,211,1.375,212,1.106,213,0.966,214,0.719,215,0.966,216,0.92,217,0.756,218,0.92,219,0.966,220,0.012,221,0.012,230,1.22,244,1.932,245,3.094,246,2.69,247,2.239,271,1.064,272,1.521,273,2.07,274,1.932,275,1.705,277,2.239,278,2.576,279,1.932,280,2.07,281,2.07,291,1.812,298,3.861,305,2.665,309,3.709,310,2.423,311,2.07,352,3.709,373,4.159,375,4.159,427,1.556,566,5.151,635,1.174,938,4.784,939,5.173,940,4.159,941,4.159,942,4.784,943,2.988,944,5.173,947,4.159,948,4.159,949,3.104,950,4.159,951,4.159,952,4.159,954,2.988,957,4.266,958,4.784,959,4.159,960,4.159,961,2.988,962,2.988,963,2.988,964,2.988,965,2.988,966,2.988,1644,5.776,1645,3.479,1646,3.479,1647,4.843,1648,3.479,1649,4.843]],["title/interfaces/QuestionList.html",[395,0.839,1650,2.558]],["body/interfaces/QuestionList.html",[3,0.24,4,0.21,9,0.18,22,0.24,23,0.658,47,0.019,49,0.31,98,0.61,115,0.24,179,1.398,182,1.398,190,1.398,220,0.016,221,0.016,230,1.601,233,1.332,271,1.944,315,3.53,395,1.207,396,2.312,398,3.31,399,3.31,400,2.372,1650,4.426,1651,4.541,1652,5.287,1653,5.287,1654,5.287]],["title/injectables/QuestionsService.html",[401,0.881,1053,2.354]],["body/injectables/QuestionsService.html",[3,0.116,4,0.102,9,0.087,22,0.116,23,0.401,29,2.176,31,0.55,37,0.363,39,1.25,44,0.793,46,0.868,47,0.019,48,0.59,49,0.286,50,0.868,51,1.361,53,0.961,57,1.945,66,1.577,70,2.15,72,2.37,74,2.152,85,0.477,86,0.613,87,0.584,95,0.826,98,0.548,99,0.229,115,0.116,116,0.178,117,0.584,118,1.024,153,2.15,182,1.337,192,0.8,220,0.01,221,0.01,233,1.483,238,3.131,240,1.892,271,0.782,276,4.134,277,2.828,278,2.982,279,3.109,280,1.521,307,1.263,311,4.075,315,3.76,330,2.476,357,3.222,376,2.886,400,1.744,401,0.929,403,1.118,406,2.482,407,2.696,408,1.253,409,2.553,411,3.391,413,4.807,418,3.775,420,3.067,425,3.76,428,2.696,430,3.1,432,4.51,433,3.34,434,4.102,435,3.775,437,2.696,439,2.303,440,2.696,442,3.1,443,1.118,444,1.253,445,1.059,446,1.253,448,1.42,449,1.521,450,1.118,451,1.253,452,1.118,454,1.253,455,1.118,456,1.059,457,1.781,458,1.781,459,4.012,460,3.775,461,1.781,462,4.102,463,4.102,464,1.781,466,1.781,601,2.696,729,2.303,739,1.332,821,3.775,822,5.058,824,4.475,828,5.425,830,4.51,831,4.51,867,3.34,1053,2.482,1192,3.991,1643,1.959,1650,3.629,1655,2.196,1656,3.871,1657,3.871,1658,3.871,1659,3.871,1660,3.871,1661,2.557,1662,3.871,1663,3.871,1664,5.889,1665,5.21,1666,3.871,1667,3.871,1668,6.299,1669,3.871,1670,2.557,1671,5.889,1672,2.557,1673,3.871,1674,2.557,1675,5.21,1676,3.871,1677,2.557,1678,3.871,1679,2.557,1680,2.196,1681,3.871,1682,2.557,1683,2.557,1684,2.557,1685,3.871,1686,2.196]],["title/interfaces/Quiz.html",[395,0.839,476,1.698]],["body/interfaces/Quiz.html",[3,0.225,4,0.197,9,0.169,22,0.225,23,0.632,47,0.019,49,0.341,85,1.414,88,4.61,115,0.225,190,1.29,220,0.015,221,0.015,230,1.246,233,1.246,271,1.514,307,1.428,395,1.13,396,2.164,398,2.577,399,2.577,400,1.847,476,3.061,880,4.111,1590,5.293,1591,5.293,1622,5.293,1624,5.293,1626,5.293,1629,5.293,1631,5.293,1634,5.293,1687,4.25]],["title/injectables/QuizService.html",[43,2.04,401,0.881]],["body/injectables/QuizService.html",[3,0.141,4,0.123,9,0.106,22,0.141,29,2.031,31,0.635,37,0.441,43,2.484,44,0.82,46,0.924,47,0.019,48,0.628,49,0.296,50,0.924,53,0.897,93,0.822,95,0.815,98,0.596,99,0.278,115,0.141,116,0.217,117,0.71,126,2.67,127,2.67,129,2.291,158,1.619,179,0.834,182,0.834,190,0.58,220,0.011,221,0.011,222,2.763,233,0.783,240,2.264,285,2.381,287,2.381,289,2.381,300,2.166,301,4.227,302,2.381,307,1.367,376,3.591,384,1.727,401,1.073,403,1.36,408,1.524,409,2.807,411,2.192,443,1.36,444,1.524,445,1.288,446,1.524,447,2.67,450,1.36,451,1.524,452,1.36,453,2.166,454,1.524,455,1.36,456,1.288,465,2.67,476,2.068,635,2.133,683,1.85,804,1.85,833,3.874,837,3.358,880,1.85,1158,2.381,1204,2.67,1536,2.381,1590,5.198,1591,2.381,1597,2.67,1613,4.401,1614,4.401,1615,4.401,1617,4.012,1618,2.67,1619,3.841,1620,2.67,1621,2.67,1622,4.648,1624,2.381,1625,2.67,1626,2.381,1627,2.67,1628,2.67,1629,2.381,1630,2.67,1631,2.381,1632,2.67,1633,2.67,1634,4.84,1635,2.67,1636,2.67,1637,4.401,1642,2.67,1643,2.381,1680,2.67,1686,2.67,1688,2.67,1689,4.472,1690,4.472,1691,4.472,1692,4.472,1693,4.472,1694,4.472,1695,3.109,1696,4.472,1697,3.109,1698,4.472,1699,5.728,1700,3.109,1701,4.472,1702,3.109,1703,4.472,1704,3.109,1705,4.472,1706,3.109,1707,4.472,1708,3.109,1709,3.109,1710,3.109,1711,4.472,1712,3.109,1713,3.109,1714,3.109,1715,3.109,1716,3.109,1717,4.472,1718,3.109,1719,3.109,1720,3.109,1721,3.109,1722,5.238,1723,3.109,1724,3.109,1725,2.381,1726,3.109,1727,3.109,1728,3.109,1729,3.109,1730,3.109]],["title/interfaces/Ranking.html",[395,0.839,600,2.185]],["body/interfaces/Ranking.html",[0,0.296,3,0.205,4,0.179,9,0.154,11,0.932,12,1.451,15,1.03,16,0.98,18,1.082,20,1.082,22,0.205,23,0.596,24,2.892,27,2.892,29,1.449,30,2.211,32,2.892,34,1.136,39,1.382,47,0.019,49,0.314,51,1.315,54,1.03,74,1.38,85,1.34,92,2.629,93,1.678,95,0.703,98,0.618,99,0.404,102,1.252,103,2.211,104,1.869,110,1.38,111,1.38,112,1.38,115,0.205,116,0.315,117,1.03,118,0.886,119,2.211,120,2.211,121,2.211,122,2.086,123,2.349,128,2.505,214,0.932,220,0.014,221,0.014,307,1.37,337,2.861,338,2.861,345,3.142,348,3.142,395,1.03,396,1.973,600,3.977,1239,3.455,1725,5.12,1731,3.455,1732,5.932,1733,5.932,1734,4.068,1735,3.874,1736,3.874,1737,3.874,1738,3.874,1739,3.874,1740,3.874]],["title/components/RankingComponent.html",[0,0.189,214,0.759]],["body/components/RankingComponent.html",[0,0.284,1,0.744,2,1.266,3,0.156,4,0.136,5,0.95,6,0.95,7,0.95,8,0.95,9,0.117,11,0.99,12,1.391,14,0.862,15,1.723,16,1.636,18,1.149,20,1.149,22,0.156,23,0.496,24,3.54,27,3.54,29,1.775,30,2.707,31,0.68,32,3.834,34,1.507,37,0.486,38,2.195,39,1.435,44,0.86,46,0.486,47,0.019,48,0.577,49,0.297,50,0.486,51,1.396,53,0.68,54,1.261,74,1.048,85,1.116,86,1.51,87,1.437,92,2.608,93,1.725,95,0.697,98,0.563,99,0.306,102,0.95,103,1.678,104,1.418,107,0.744,110,1.048,111,1.048,112,1.048,115,0.156,116,0.239,117,0.782,118,0.673,119,1.678,120,1.678,121,1.678,122,1.583,123,1.783,128,1.901,152,1.266,170,0.95,171,1.329,172,1.329,173,0.782,174,1.66,175,0.95,176,0.95,177,0.782,178,1.266,179,0.894,180,1.859,181,0.782,182,0.894,183,0.744,184,0.95,185,0.782,186,0.95,187,0.744,188,0.95,189,0.782,190,0.639,191,0.782,192,0.708,193,0.744,194,0.782,195,0.744,196,0.782,197,0.95,198,0.744,199,0.95,200,0.708,201,0.95,202,0.782,203,0.95,204,0.744,205,0.95,206,0.782,207,0.821,208,0.95,209,0.744,210,0.95,211,0.782,212,0.782,213,0.95,214,1.236,215,0.95,216,0.905,217,0.744,218,0.905,219,0.95,220,0.012,221,0.012,307,1.03,337,2.288,338,2.288,345,2.385,348,2.385,362,3.668,363,4.113,364,3.668,365,4.113,395,0.782,600,3.745,1201,4.113,1239,2.622,1725,2.622,1731,2.622,1732,4.743,1733,4.743,1734,4.292,1735,2.941,1736,4.113,1737,4.743,1738,4.743,1739,2.941,1740,2.941,1741,4.789,1742,3.424,1743,3.424,1744,3.424,1745,3.424,1746,3.424,1747,3.424,1748,4.789,1749,4.789,1750,4.789]],["title/injectables/RankingService.html",[401,0.881,1734,2.354]],["body/injectables/RankingService.html",[3,0.21,4,0.184,9,0.158,22,0.21,29,1.879,31,0.83,37,0.656,39,1.618,44,0.737,46,0.83,47,0.019,48,0.564,49,0.266,50,0.83,51,1.87,53,0.83,57,1.725,61,1.283,63,2.705,66,1.56,95,0.747,98,0.636,99,0.414,110,1.414,111,1.414,112,1.414,115,0.21,116,0.322,117,1.055,118,0.908,129,1.56,220,0.014,221,0.014,222,2.021,230,1.473,233,1.164,238,2.137,240,1.485,272,2.021,376,3.145,401,1.403,403,2.021,408,2.265,409,3.305,411,3.145,425,3.248,443,2.021,444,2.265,445,1.915,446,2.265,448,2.567,450,2.021,452,2.021,454,2.265,455,2.021,456,1.915,600,4.012,635,1.56,739,2.407,821,2.963,833,3.48,1585,4.48,1598,3.54,1599,3.54,1600,3.54,1601,3.54,1605,3.54,1613,3.219,1614,3.219,1615,3.219,1637,3.219,1734,4.114,1751,3.97,1752,5.849,1753,4.622,1754,5.849,1755,4.622,1756,4.622,1757,4.622]],["title/classes/User.html",[95,0.407,116,0.256]],["body/classes/User.html",[3,0.183,4,0.16,9,0.137,22,0.183,23,0.554,25,3.153,31,0.759,37,0.759,44,0.905,46,0.572,47,0.019,48,0.388,49,0.311,50,0.572,53,0.908,66,2.161,69,4.458,79,3.555,85,1.395,88,4.458,93,1.065,95,0.593,115,0.183,116,0.281,118,1.051,135,3.47,220,0.013,221,0.013,230,1.015,233,1.015,234,5.497,235,3.808,239,3.46,240,2.057,241,2.396,271,1.233,307,1.324,337,2.76,338,2.76,339,2.913,398,2.098,399,2.098,400,1.504,416,4.902,417,4.103,424,3.333,426,2.389,427,2.057,635,1.36,677,2.971,680,4.55,682,4.458,712,4.458,714,4.184,752,5.16,753,5.16,1219,5.497,1221,5.497,1441,4.595,1603,3.46,1758,4.028,1759,3.46,1760,4.028,1761,4.028,1762,4.028,1763,4.028,1764,4.028,1765,4.028,1766,4.028,1767,4.028,1768,4.028,1769,4.028,1770,4.028,1771,4.028,1772,5.35,1773,4.028,1774,5.35]],["title/components/UserEditComponent.html",[0,0.189,107,0.798]],["body/components/UserEditComponent.html",[0,0.262,1,0.646,2,1.144,3,0.135,4,0.118,5,0.825,6,0.825,7,0.825,8,0.825,9,0.101,11,0.894,12,1.286,13,3.037,14,0.748,15,1.7,16,1.613,17,2.575,18,1.038,20,1.038,22,0.135,23,0.448,25,2.577,26,1.701,29,1.64,30,2.502,31,0.614,33,3.115,34,1.413,37,0.614,39,1.345,40,2.97,44,0.859,46,0.422,47,0.019,48,0.541,49,0.283,50,0.422,51,1.488,53,0.796,54,1.503,56,2.575,57,1.615,58,2.575,60,2.748,61,1.557,62,2.575,63,2.756,66,1.461,85,0.952,86,0.713,87,0.679,92,2.115,93,1.35,95,0.774,98,0.575,99,0.266,100,1.231,102,0.825,103,1.456,104,1.231,106,1.65,107,1.219,108,4.11,110,0.909,111,0.909,112,0.909,115,0.197,116,0.207,118,0.85,119,1.456,120,1.456,121,1.456,130,2.921,134,1.915,135,2.254,146,1.905,152,1.483,170,0.825,171,1.201,172,1.201,173,0.679,174,1.557,175,0.825,176,0.825,177,0.679,178,1.144,179,0.808,180,1.783,181,0.679,182,0.808,183,0.646,184,0.825,185,0.679,186,0.825,187,0.646,188,0.825,189,0.679,190,0.554,191,0.679,192,0.614,193,0.646,194,0.679,195,0.646,196,0.679,197,0.825,198,0.646,199,0.825,200,0.614,201,0.825,202,0.679,203,0.825,204,0.646,205,0.825,206,0.679,207,0.713,208,0.825,209,0.646,210,0.825,211,0.679,212,0.679,213,0.825,214,0.614,215,0.825,216,0.786,217,0.646,218,0.786,219,0.825,220,0.011,221,0.011,230,1.286,232,3.906,247,2.361,252,3.546,262,2.835,263,1.768,264,2.404,266,3.31,267,1.65,268,1.374,269,1.65,282,1.65,293,2.575,307,0.808,337,1.231,338,1.231,339,1.299,350,2.069,395,0.679,614,4.295,620,3.315,627,2.069,635,1.723,636,2.069,729,2.575,739,2.254,917,4.152,918,5.291,919,2.276,920,2.552,921,3.717,922,4.384,923,2.552,924,3.717,925,3.717,926,3.717,927,4.816,928,4.384,929,2.552,930,2.276,931,2.552,932,2.069,933,2.552,934,2.552,935,2.552,936,2.552,1547,3.717,1775,2.971,1776,4.328,1777,2.971,1778,2.971,1779,2.971,1780,2.971,1781,2.971,1782,2.971,1783,2.971,1784,2.971,1785,3.717,1786,4.328]],["title/injectables/UserService.html",[40,1.698,401,0.881]],["body/injectables/UserService.html",[3,0.13,4,0.113,9,0.097,22,0.13,29,2.038,31,0.597,37,0.405,39,1.32,40,2.307,44,0.739,46,0.833,47,0.019,48,0.566,49,0.267,50,0.833,51,1.454,53,0.924,57,1.862,61,0.793,62,1.699,63,3.312,66,2.34,68,2.695,69,4.085,70,2.335,72,1.013,73,1.831,95,0.833,98,0.568,99,0.256,110,0.874,111,0.874,112,0.874,115,0.13,116,0.199,117,0.652,118,0.561,129,2.071,135,2.866,140,2.187,149,2.928,153,1.586,220,0.01,221,0.01,222,2.406,233,1.257,238,3.01,240,2.091,241,2.501,272,1.249,275,1.399,307,1.24,330,2.163,332,2.968,337,1.742,338,1.742,339,1.838,350,4.705,357,2.697,376,3.397,401,1.008,403,1.249,408,1.399,409,2.697,411,2.445,420,2.189,425,3.407,433,3.528,439,2.501,442,3.274,443,1.249,444,1.399,445,1.183,446,1.399,448,1.586,450,1.249,451,1.399,452,1.249,454,1.399,455,1.249,456,1.183,635,1.858,680,2.695,683,1.699,714,2.928,724,4.273,726,4.726,739,1.487,833,3.489,837,2.695,883,3.611,884,3.611,885,3.611,886,3.611,887,3.611,888,3.611,889,3.611,890,4.726,930,4.492,949,1.831,1002,3.22,1451,2.453,1559,3.22,1585,4.215,1598,2.187,1599,2.187,1600,2.187,1601,2.187,1602,2.453,1605,2.187,1612,3.611,1613,3.833,1614,3.833,1615,3.833,1617,2.187,1637,3.833,1785,2.453,1787,2.453,1788,4.204,1789,4.204,1790,4.204,1791,4.204,1792,2.856,1793,4.204,1794,2.856,1795,4.204,1796,2.856,1797,4.204,1798,2.856,1799,4.204,1800,5.503,1801,4.989,1802,4.204,1803,2.856,1804,2.856,1805,2.856,1806,2.856,1807,2.856,1808,2.856,1809,4.204,1810,5.503,1811,4.204,1812,4.204,1813,4.989,1814,4.204,1815,4.204,1816,4.204,1817,4.204,1818,2.856,1819,2.856,1820,2.856,1821,2.856,1822,4.204,1823,2.856,1824,2.856,1825,2.856,1826,2.856,1827,2.856,1828,2.856]],["title/interfaces/Users.html",[332,2.185,395,0.839]],["body/interfaces/Users.html",[3,0.243,4,0.212,9,0.182,22,0.243,23,0.662,47,0.019,49,0.33,85,1.409,115,0.243,135,3.695,220,0.016,221,0.016,230,1.346,233,1.346,271,1.635,307,1.374,330,2.788,332,3.805,337,2.939,338,2.939,339,3.102,395,1.22,396,2.337,398,2.783,399,2.783,400,1.995,1829,4.589,1830,5.343]],["title/coverage.html",[1831,4.318]],["body/coverage.html",[0,0.385,1,0.746,9,0.117,10,2.947,39,0.823,40,1.587,43,1.906,47,0.019,49,0.156,91,2.2,95,0.38,107,0.746,108,2.853,116,0.239,150,1.787,173,0.784,177,0.784,179,1.175,181,0.784,182,1.032,183,0.746,185,0.784,187,0.746,189,0.784,190,0.64,191,0.784,192,0.709,193,0.746,194,0.784,195,0.746,198,0.746,200,0.709,202,0.784,204,0.746,206,0.784,209,0.746,211,0.784,212,0.784,214,0.709,217,0.746,220,0.012,221,0.012,222,1.501,224,2.947,225,2.947,235,2.041,242,3.674,243,3.341,244,3.625,298,4.039,316,2.947,332,2.041,384,4.149,395,1.607,397,2.947,401,1.687,402,2.628,404,2.947,449,2.041,450,1.501,451,1.682,452,1.501,453,2.39,469,2.947,476,1.587,488,2.2,553,2.39,566,2.628,571,2.628,572,2.628,576,2.628,578,2.628,583,2.628,584,2.628,587,2.39,600,2.041,609,2.947,635,1.158,667,2.628,669,2.947,694,2.947,796,2.947,802,2.947,807,2.947,815,2.39,816,2.947,853,2.947,857,2.947,869,2.39,870,2.947,907,2.947,917,2.39,918,3.674,919,3.674,937,2.947,967,2.947,968,2.947,982,2.947,1018,3.674,1053,2.2,1216,2.947,1242,2.947,1262,2.947,1263,2.947,1272,2.2,1404,2.947,1406,2.947,1435,2.947,1436,2.947,1454,2.947,1479,2.39,1573,2.947,1641,2.947,1644,2.947,1650,2.39,1651,2.947,1655,2.947,1687,2.947,1688,2.947,1731,3.674,1734,2.2,1751,2.947,1759,2.947,1787,2.947,1829,2.947,1831,2.947,1832,3.431,1833,3.431,1834,3.431,1835,3.431,1836,3.431,1837,2.947,1838,3.431,1839,6.527,1840,6.7,1841,4.796,1842,4.796,1843,5.987,1844,4.796,1845,3.431,1846,6.3,1847,3.431,1848,3.431,1849,4.796,1850,3.431,1851,4.796,1852,4.796,1853,4.796,1854,3.431,1855,4.796,1856,4.796,1857,3.431,1858,3.431,1859,5.142,1860,5.987,1861,3.431,1862,3.431,1863,3.431,1864,3.431,1865,4.796,1866,4.796,1867,4.999,1868,6.3,1869,6.3,1870,2.628,1871,4.796,1872,4.796,1873,4.796,1874,3.431,1875,3.431,1876,4.796,1877,4.796,1878,3.431,1879,3.431,1880,3.431,1881,3.431,1882,3.431,1883,3.431,1884,4.796,1885,3.431,1886,3.431,1887,3.431,1888,3.431,1889,2.947,1890,4.119,1891,2.947,1892,4.119,1893,2.947,1894,2.947,1895,3.431,1896,3.431]],["title/dependencies.html",[481,3.079,1897,2.628]],["body/dependencies.html",[47,0.019,99,0.486,101,2.661,102,1.507,220,0.016,221,0.016,268,2.511,481,3.782,496,4.664,501,4.946,502,4.498,1898,5.43,1899,7.525,1900,5.43,1901,6.457,1902,5.43,1903,5.43,1904,5.43,1905,5.43,1906,5.43,1907,5.43,1908,5.43,1909,5.43,1910,5.43,1911,5.43,1912,5.43,1913,5.43,1914,5.43,1915,5.43,1916,5.43,1917,5.43,1918,5.43,1919,5.43]],["title/miscellaneous/functions.html",[1920,2.131,1921,3.797]],["body/miscellaneous/functions.html",[22,0.225,46,1.008,47,0.018,48,0.684,49,0.314,50,1.008,51,1.442,61,1.374,74,2.025,81,4.675,85,1.349,196,1.13,220,0.015,221,0.015,233,1.741,307,1.349,330,2.908,332,2.944,380,3.79,400,2.471,449,3.631,450,2.669,451,2.991,452,2.669,453,4.251,714,4.251,715,4.25,716,4.251,718,4.25,719,4.25,720,4.25,821,4.243,1867,3.79,1870,5.07,1920,3.446,1921,4.25,1922,6.097,1923,4.948,1924,6.911,1925,6.619,1926,4.948,1927,6.104,1928,4.948,1929,6.104,1930,4.948,1931,4.948]],["title/index.html",[22,0.139,1932,3.06,1933,3.06]],["body/index.html",[0,0.351,4,0.191,9,0.204,11,0.992,16,1.043,47,0.016,48,0.463,70,3.326,178,1.269,220,0.015,221,0.015,357,2.935,370,5.143,400,1.791,406,4.185,475,6.373,491,3.342,589,4.121,606,3.675,635,1.62,739,2.499,949,3.839,998,5.143,1142,3.675,1250,5.607,1897,4.121,1934,4.798,1935,5.989,1936,4.798,1937,6.528,1938,4.798,1939,4.798,1940,4.798,1941,7.036,1942,4.798,1943,4.798,1944,4.798,1945,4.798,1946,4.798,1947,4.798,1948,4.798,1949,4.798,1950,4.798,1951,4.798,1952,6.528,1953,6.528,1954,4.798,1955,6.836,1956,4.798,1957,4.798,1958,4.798,1959,4.798,1960,5.989,1961,5.989,1962,6.836,1963,4.798,1964,5.989,1965,5.989,1966,4.798,1967,7.175,1968,4.798,1969,4.798,1970,4.798,1971,5.989,1972,4.798,1973,4.798,1974,4.798,1975,4.798,1976,6.528,1977,4.798,1978,4.798,1979,4.798,1980,3.675,1981,4.798,1982,5.989,1983,4.798,1984,5.989,1985,4.798,1986,4.798,1987,4.798]],["title/modules.html",[480,3.223]],["body/modules.html",[47,0.017,220,0.017,221,0.017,479,4.132,480,3.803,487,3.803,502,4.132,1313,5.096,1988,5.933,1989,6.8,1990,5.933,1991,5.933]],["title/overview.html",[1980,3.85]],["body/overview.html",[1,1.362,2,1.162,47,0.019,107,1.362,116,0.307,150,3.263,158,3.447,162,3.944,163,3.059,173,1.003,177,1.431,181,1.431,183,1.362,185,1.629,187,1.362,189,1.431,191,1.431,193,1.362,194,1.431,195,1.362,198,1.362,200,1.295,202,1.431,204,1.362,206,1.431,209,1.362,211,1.431,212,1.431,214,1.295,217,1.362,220,0.014,221,0.014,222,1.921,396,1.921,403,1.921,479,5.463,480,2.816,481,3.944,482,3.773,483,3.773,484,3.773,485,3.773,486,3.773,487,4.017,488,4.017,489,4.863,490,3.773,491,3.059,586,3.059,667,3.364,1837,3.773,1859,3.773,1980,3.364]],["title/routes.html",[586,3.501]],["body/routes.html",[47,0.017,220,0.017,221,0.017,586,4.207]],["title/miscellaneous/variables.html",[1920,2.131,1992,3.797]],["body/miscellaneous/variables.html",[22,0.24,47,0.019,49,0.334,85,0.987,86,1.735,87,1.651,220,0.016,221,0.016,235,3.781,241,3.145,307,0.987,426,2.372,427,1.699,583,4.05,584,4.868,1867,4.05,1870,4.868,1889,4.541,1890,6.071,1891,4.541,1892,4.541,1893,5.458,1894,5.458,1920,3.682,1922,4.541,1992,4.541,1993,5.287,1994,6.355,1995,5.287,1996,5.287,1997,5.287,1998,5.287,1999,5.287,2000,6.355,2001,6.355,2002,5.287]]],"invertedIndex":[["",{"_index":47,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":384,"title":{},"body":{"components/AdminComponent.html":{},"components/GameComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"interfaces/Player2.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["0.11.4",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["0.22.11",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["0.2s",{"_index":1345,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["0.4s",{"_index":1347,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["0.6",{"_index":1306,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["0.6s",{"_index":1349,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["0.8s",{"_index":1351,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["0.9",{"_index":1366,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["0/1",{"_index":1840,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1848,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1845,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":1854,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1849,"title":{},"body":{"coverage.html":{}}}],["0/42",{"_index":1850,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1851,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1865,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1853,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1864,"title":{},"body":{"coverage.html":{}}}],["01.01.2022",{"_index":156,"title":{},"body":{"components/AccountComponent.html":{}}}],["015",{"_index":291,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["016",{"_index":279,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"injectables/AnswerService.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{}}}],["017",{"_index":280,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"injectables/AnswerService.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{}}}],["018",{"_index":459,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionsService.html":{}}}],["1",{"_index":158,"title":{},"body":{"components/AccountComponent.html":{},"injectables/CourseService.html":{},"components/GameComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"injectables/QuizService.html":{},"overview.html":{}}}],["1.1",{"_index":1370,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["1.1.18",{"_index":1911,"title":{},"body":{"dependencies.html":{}}}],["1.2",{"_index":1374,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["1.3",{"_index":1378,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["1.4",{"_index":1381,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["1.5",{"_index":1390,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["1.6",{"_index":1384,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["1.7",{"_index":1387,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["1/1",{"_index":1869,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1875,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1866,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":1873,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":1860,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":162,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"overview.html":{}}}],["100",{"_index":298,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/LoadingScreenComponent.html":{},"components/QuestionDialogComponent.html":{},"coverage.html":{}}}],["1000",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["100000",{"_index":1301,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["10px",{"_index":168,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{}}}],["11px",{"_index":1649,"title":{},"body":{"components/QuestionDialogComponent.html":{}}}],["12.0.0",{"_index":1906,"title":{},"body":{"dependencies.html":{}}}],["12.2.0",{"_index":1899,"title":{},"body":{"dependencies.html":{}}}],["12.2.13",{"_index":1901,"title":{},"body":{"dependencies.html":{}}}],["12.2.7",{"_index":1939,"title":{},"body":{"index.html":{}}}],["14",{"_index":1859,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["14px",{"_index":1016,"title":{},"body":{"components/FaqComponent.html":{}}}],["16",{"_index":1872,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":1006,"title":{},"body":{"components/FaqComponent.html":{}}}],["1s",{"_index":1353,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["2",{"_index":163,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"overview.html":{}}}],["2.3.0",{"_index":1915,"title":{},"body":{"dependencies.html":{}}}],["2/10",{"_index":1844,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":1847,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1856,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1858,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1843,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1280,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["201",{"_index":434,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["20px",{"_index":375,"title":{},"body":{"components/AdminComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["21",{"_index":1837,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["22",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["232f3e",{"_index":1008,"title":{},"body":{"components/FaqComponent.html":{}}}],["24/45",{"_index":1863,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":1305,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["28",{"_index":1855,"title":{},"body":{"coverage.html":{}}}],["2px",{"_index":958,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["3.4.1",{"_index":1912,"title":{},"body":{"dependencies.html":{}}}],["3.4s",{"_index":1334,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["3/14",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["3/9",{"_index":1852,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":1317,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["30px",{"_index":1328,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["33",{"_index":1846,"title":{},"body":{"coverage.html":{}}}],["330px",{"_index":1357,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["35",{"_index":1358,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["350px",{"_index":133,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{}}}],["36",{"_index":1887,"title":{},"body":{"coverage.html":{}}}],["3600",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["39",{"_index":1362,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["3d",{"_index":1325,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["4",{"_index":239,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"classes/User.html":{}}}],["4/11",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":1877,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1363,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["400",{"_index":436,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{}}}],["40px",{"_index":1338,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["42",{"_index":1364,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["43",{"_index":1367,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["44",{"_index":1368,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["45",{"_index":1371,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["46",{"_index":1372,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["47",{"_index":1375,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["475158",{"_index":1327,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["48",{"_index":1376,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["4fc3f7",{"_index":1214,"title":{},"body":{"components/GameComponent.html":{}}}],["5",{"_index":241,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"modules/AppRoutingModule.html":{},"injectables/CourseService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["5/8",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":161,"title":{},"body":{"components/AccountComponent.html":{},"components/LoadingScreenComponent.html":{}}}],["500",{"_index":1671,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["5000",{"_index":1174,"title":{},"body":{"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{}}}],["500px",{"_index":296,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["52",{"_index":1379,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["53",{"_index":1862,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":1382,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["57",{"_index":1876,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":1385,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["5px",{"_index":1339,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["6",{"_index":1251,"title":{},"body":{"components/HomeComponent.html":{}}}],["6.6.0",{"_index":1913,"title":{},"body":{"dependencies.html":{}}}],["6/9",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":1878,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":1359,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["66",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["666",{"_index":1017,"title":{},"body":{"components/FaqComponent.html":{}}}],["68",{"_index":1388,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["7/11",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1389,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["70px",{"_index":1322,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["78",{"_index":1391,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["80",{"_index":1393,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["800px",{"_index":297,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["81",{"_index":1394,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["82",{"_index":1395,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["83",{"_index":1396,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["84",{"_index":1397,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["85",{"_index":1398,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["86",{"_index":1399,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["87",{"_index":1400,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["8px",{"_index":394,"title":{},"body":{"components/AdminComponent.html":{}}}],["9",{"_index":1874,"title":{},"body":{"coverage.html":{}}}],["9._",{"_index":643,"title":{},"body":{"components/AuthComponent.html":{}}}],["90",{"_index":1401,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["91",{"_index":1402,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["92",{"_index":1403,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["99",{"_index":1360,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["_changedetectorref",{"_index":1274,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["_elmref",{"_index":1273,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["_loading",{"_index":1437,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["_token",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["_tokenexpirationdate",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{}}}],["ab",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["abbrechen",{"_index":1547,"title":{},"body":{"components/LobbyComponent.html":{},"components/UserEditComponent.html":{}}}],["abgebrochen",{"_index":1552,"title":{},"body":{"components/LobbyComponent.html":{}}}],["abgelaufen",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["abkürzung",{"_index":868,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["abmelden",{"_index":1240,"title":{},"body":{"components/HeaderComponent.html":{}}}],["abrechen",{"_index":924,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["abrufen",{"_index":1601,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["absolute",{"_index":1303,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["accessors",{"_index":1441,"title":{},"body":{"injectables/LoadingScreenService.html":{},"classes/User.html":{}}}],["account",{"_index":17,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"components/UserEditComponent.html":{}}}],["account'},{'name",{"_index":176,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["account.component.css",{"_index":19,"title":{},"body":{"components/AccountComponent.html":{}}}],["account.component.html",{"_index":21,"title":{},"body":{"components/AccountComponent.html":{}}}],["account/account.component",{"_index":557,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["accountcomponent",{"_index":1,"title":{"components/AccountComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["accountlevel",{"_index":135,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{}}}],["accountlevel_idaccountlevel",{"_index":1822,"title":{},"body":{"injectables/UserService.html":{}}}],["accountlevelpipe",{"_index":150,"title":{"pipes/AccountLevelPipe.html":{}},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/LobbyComponent.html":{},"coverage.html":{},"overview.html":{}}}],["action",{"_index":371,"title":{},"body":{"components/AdminComponent.html":{},"components/LobbyComponent.html":{}}}],["actions",{"_index":340,"title":{},"body":{"components/AdminComponent.html":{}}}],["activatedroute",{"_index":616,"title":{},"body":{"components/AuthComponent.html":{},"components/ErrorPageComponent.html":{}}}],["activatedroutesnapshot",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{}}}],["activerequests",{"_index":1407,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["actual_component",{"_index":219,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["add",{"_index":178,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"index.html":{}}}],["addanswerdialogcomponent",{"_index":177,"title":{"components/AddAnswerDialogComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["addquestiondialogcomponent",{"_index":181,"title":{"components/AddQuestionDialogComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["admin",{"_index":235,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["admin'},{'name",{"_index":184,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["admin.component.css",{"_index":317,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin.component.html",{"_index":318,"title":{},"body":{"components/AdminComponent.html":{}}}],["admin/admin.component",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["admincomponent",{"_index":183,"title":{"components/AdminComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["administratoren",{"_index":1196,"title":{},"body":{"components/GameComponent.html":{}}}],["adminrechte",{"_index":885,"title":{},"body":{"injectables/CourseService.html":{},"injectables/UserService.html":{}}}],["adresse",{"_index":995,"title":{},"body":{"components/FaqComponent.html":{}}}],["afterviewinit",{"_index":1264,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["aktion",{"_index":1571,"title":{},"body":{"components/LobbyComponent.html":{}}}],["aktionen",{"_index":369,"title":{},"body":{"components/AdminComponent.html":{}}}],["aktualisert",{"_index":356,"title":{},"body":{"components/AdminComponent.html":{}}}],["aktualisiert",{"_index":442,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{}}}],["aktuell",{"_index":1559,"title":{},"body":{"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"injectables/UserService.html":{}}}],["aktuelle",{"_index":113,"title":{},"body":{"components/AccountComponent.html":{}}}],["aktuellen",{"_index":62,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/HeaderComponent.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["align",{"_index":377,"title":{},"body":{"components/AdminComponent.html":{}}}],["all(loggedinuser",{"_index":872,"title":{},"body":{"injectables/CourseService.html":{}}}],["allcoursessub",{"_index":1457,"title":{},"body":{"components/LobbyComponent.html":{}}}],["alle",{"_index":57,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["aller",{"_index":1799,"title":{},"body":{"injectables/UserService.html":{}}}],["alles",{"_index":1611,"title":{},"body":{"injectables/LobbyService.html":{}}}],["allquizes",{"_index":1458,"title":{},"body":{"components/LobbyComponent.html":{}}}],["allsearchusers",{"_index":1738,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["allusers",{"_index":319,"title":{},"body":{"components/AdminComponent.html":{}}}],["als",{"_index":421,"title":{},"body":{"injectables/AnswerService.html":{}}}],["andere",{"_index":887,"title":{},"body":{"injectables/CourseService.html":{},"injectables/UserService.html":{}}}],["angesprochen",{"_index":889,"title":{},"body":{"injectables/CourseService.html":{},"injectables/UserService.html":{}}}],["angezeigt",{"_index":903,"title":{},"body":{"injectables/CourseService.html":{}}}],["angular",{"_index":1250,"title":{},"body":{"components/HomeComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":1898,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1900,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1902,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":443,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1903,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":99,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":1904,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":268,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/LobbyComponent.html":{},"components/UserEditComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":1908,"title":{},"body":{"dependencies.html":{}}}],["angular/material/badge",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/button",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":530,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":100,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"components/UserEditComponent.html":{}}}],["angular/material/expansion",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/form",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/grid",{"_index":534,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":527,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/list",{"_index":537,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":511,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/progress",{"_index":544,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":532,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sidenav",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/slide",{"_index":539,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/sort",{"_index":513,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/table",{"_index":509,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/tooltip",{"_index":542,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":501,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":101,"title":{},"body":{"components/AccountComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"dependencies.html":{}}}],["animation",{"_index":1331,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["anmelden",{"_index":661,"title":{},"body":{"components/AuthComponent.html":{},"components/HeaderComponent.html":{}}}],["anmeldung",{"_index":631,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["answer",{"_index":179,"title":{"interfaces/Answer.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{}}}],["answer.description",{"_index":1204,"title":{},"body":{"components/GameComponent.html":{},"injectables/QuizService.html":{}}}],["answer.idanswers",{"_index":465,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuizService.html":{}}}],["answer.model",{"_index":1654,"title":{},"body":{"interfaces/QuestionList.html":{}}}],["answer.question_idquestion",{"_index":1720,"title":{},"body":{"injectables/QuizService.html":{}}}],["answer.truth",{"_index":1158,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{},"injectables/QuizService.html":{}}}],["answerarray",{"_index":1717,"title":{},"body":{"injectables/QuizService.html":{}}}],["answerarray.push",{"_index":1719,"title":{},"body":{"injectables/QuizService.html":{}}}],["answerednumber",{"_index":1021,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["answerid",{"_index":414,"title":{},"body":{"injectables/AnswerService.html":{}}}],["answerservice",{"_index":402,"title":{"injectables/AnswerService.html":{}},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["answerssub",{"_index":1022,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["antwort",{"_index":294,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"injectables/AnswerService.html":{},"components/DialogComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["antworten",{"_index":276,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"injectables/AnswerService.html":{},"components/EditAnswerDialogComponent.html":{},"components/FaqComponent.html":{},"injectables/QuestionsService.html":{}}}],["anzahl",{"_index":1662,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"index.html":{}}}],["app.component",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":471,"title":{},"body":{"components/AppComponent.html":{}}}],["appautofocus",{"_index":218,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["appcomponent",{"_index":185,"title":{"components/AppComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodule",{"_index":479,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":487,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["approved",{"_index":1642,"title":{},"body":{"interfaces/Question.html":{},"injectables/QuizService.html":{}}}],["arial",{"_index":1012,"title":{},"body":{"components/FaqComponent.html":{}}}],["artifacts",{"_index":1956,"title":{},"body":{"index.html":{}}}],["attribut",{"_index":1820,"title":{},"body":{"injectables/UserService.html":{}}}],["auf",{"_index":73,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"injectables/AuthService.html":{},"components/FaqComponent.html":{},"injectables/UserService.html":{}}}],["aus",{"_index":1612,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/UserService.html":{}}}],["ausgeloggt",{"_index":71,"title":{},"body":{"components/AccountComponent.html":{}}}],["auth",{"_index":51,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["auth'},{'name",{"_index":188,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["auth.component.css",{"_index":610,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.component.html",{"_index":611,"title":{},"body":{"components/AuthComponent.html":{}}}],["auth.service",{"_index":448,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["auth/auth.component",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["authcomponent",{"_index":187,"title":{"components/AuthComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":587,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authobs",{"_index":653,"title":{},"body":{"components/AuthComponent.html":{}}}],["authobs.subscribe",{"_index":656,"title":{},"body":{"components/AuthComponent.html":{}}}],["authorization",{"_index":1613,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["authrefresh",{"_index":1418,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["authservice",{"_index":39,"title":{"injectables/AuthService.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["autofocus.directive",{"_index":568,"title":{},"body":{"modules/AppModule.html":{}}}],["autofocusdirective",{"_index":217,"title":{"directives/AutofocusDirective.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["autologin",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["autologout",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["autologout(expirationduration",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["automatically",{"_index":1946,"title":{},"body":{"index.html":{}}}],["available",{"_index":1991,"title":{},"body":{"modules.html":{}}}],["background",{"_index":1213,"title":{},"body":{"components/GameComponent.html":{},"components/LoadingScreenComponent.html":{}}}],["basis",{"_index":383,"title":{},"body":{"components/AdminComponent.html":{}}}],["beantwortet",{"_index":1206,"title":{},"body":{"components/GameComponent.html":{}}}],["bearbeiten",{"_index":1785,"title":{},"body":{"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["bearer",{"_index":1614,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["beenden",{"_index":1208,"title":{},"body":{"components/GameComponent.html":{}}}],["beendet",{"_index":56,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/HeaderComponent.html":{},"components/UserEditComponent.html":{}}}],["behandelt",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["behaviorsubject",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{},"components/LobbyComponent.html":{}}}],["behaviorsubject(null",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["bei",{"_index":993,"title":{},"body":{"components/FaqComponent.html":{},"components/GameComponent.html":{}}}],["beide",{"_index":1132,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["benutzen",{"_index":681,"title":{},"body":{"guards/AuthGuard.html":{}}}],["benutzer",{"_index":63,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/HeaderComponent.html":{},"injectables/LobbyService.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["benutzern",{"_index":1602,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/UserService.html":{}}}],["benutzers",{"_index":1760,"title":{},"body":{"classes/User.html":{}}}],["benutzertabelle",{"_index":1830,"title":{},"body":{"interfaces/Users.html":{}}}],["benutzerverwaltung",{"_index":154,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{}}}],["benutzerverwaltungs",{"_index":326,"title":{},"body":{"components/AdminComponent.html":{}}}],["benötigten",{"_index":1145,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["berein",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["bereit",{"_index":1605,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["bereits",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{},"components/GameComponent.html":{}}}],["bermittelt",{"_index":1182,"title":{},"body":{"components/GameComponent.html":{}}}],["bestätigung",{"_index":67,"title":{},"body":{"components/AccountComponent.html":{}}}],["beta.35",{"_index":1907,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":388,"title":{},"body":{"components/AdminComponent.html":{}}}],["bi",{"_index":278,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"injectables/AnswerService.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{}}}],["bitte",{"_index":1188,"title":{},"body":{"components/GameComponent.html":{}}}],["blob",{"_index":1326,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["blob:nth",{"_index":1342,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["blobs",{"_index":1314,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["block",{"_index":1296,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["boolean",{"_index":677,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/Course.html":{},"components/GameComponent.html":{},"components/LoadingScreenComponent.html":{},"injectables/LoadingScreenService.html":{},"interfaces/Player2.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["border",{"_index":957,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/LoadingScreenComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["bottom",{"_index":374,"title":{},"body":{"components/AdminComponent.html":{},"components/GameComponent.html":{}}}],["box",{"_index":1336,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["break",{"_index":1429,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["breits",{"_index":419,"title":{},"body":{"injectables/AnswerService.html":{}}}],["browse",{"_index":1989,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":502,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["browserbasiertes",{"_index":1258,"title":{},"body":{"components/HomeComponent.html":{}}}],["browsermodule",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1955,"title":{},"body":{"index.html":{}}}],["button",{"_index":1212,"title":{},"body":{"components/GameComponent.html":{}}}],["buttons",{"_index":372,"title":{},"body":{"components/AdminComponent.html":{}}}],["c",{"_index":1983,"title":{},"body":{"index.html":{}}}],["calc(100",{"_index":167,"title":{},"body":{"components/AccountComponent.html":{},"components/LobbyComponent.html":{}}}],["canactivate",{"_index":598,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{}}}],["cancelgame",{"_index":1472,"title":{},"body":{"components/LobbyComponent.html":{}}}],["cancelgamemsg",{"_index":1459,"title":{},"body":{"components/LobbyComponent.html":{}}}],["capabilities",{"_index":1974,"title":{},"body":{"index.html":{}}}],["card",{"_index":166,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{}}}],["catcherror",{"_index":444,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["catcherror((errorres",{"_index":849,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{}}}],["catcherror(handleerror",{"_index":1637,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["catcherror(this.handleerror",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["categorieid",{"_index":825,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categories",{"_index":1460,"title":{},"body":{"components/LobbyComponent.html":{}}}],["category",{"_index":190,"title":{"interfaces/Category.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{}}}],["category.createdate",{"_index":847,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.creator_iduser",{"_index":846,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.id",{"_index":852,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.idcategory",{"_index":843,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category.model",{"_index":1652,"title":{},"body":{"interfaces/QuestionList.html":{}}}],["category.name",{"_index":845,"title":{},"body":{"injectables/CategoryService.html":{},"components/LobbyComponent.html":{}}}],["category.subject_idsubject",{"_index":844,"title":{},"body":{"injectables/CategoryService.html":{}}}],["category_idcategory",{"_index":300,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Question.html":{},"injectables/QuizService.html":{}}}],["categoryarray",{"_index":839,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categoryarray.push",{"_index":842,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categorydialogcomponent",{"_index":189,"title":{"components/CategoryDialogComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["categoryid",{"_index":1580,"title":{},"body":{"injectables/LobbyService.html":{}}}],["categoryservice",{"_index":815,"title":{"injectables/CategoryService.html":{}},"body":{"injectables/CategoryService.html":{},"components/LobbyComponent.html":{},"coverage.html":{}}}],["cdk",{"_index":1209,"title":{},"body":{"components/GameComponent.html":{}}}],["cell",{"_index":961,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["cell:hover",{"_index":962,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["cellinput",{"_index":956,"title":{},"body":{"components/EditAnswerDialogComponent.html":{}}}],["cellinputtext",{"_index":1648,"title":{},"body":{"components/QuestionDialogComponent.html":{}}}],["center",{"_index":390,"title":{},"body":{"components/AdminComponent.html":{},"components/LoadingScreenComponent.html":{}}}],["change",{"_index":1948,"title":{},"body":{"index.html":{}}}],["changedetectorref",{"_index":1275,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["check",{"_index":1979,"title":{},"body":{"index.html":{}}}],["checkalldata",{"_index":1044,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["checkuniqueanswer",{"_index":405,"title":{},"body":{"injectables/AnswerService.html":{}}}],["checkuniqueanswer(loggedinuser",{"_index":412,"title":{},"body":{"injectables/AnswerService.html":{}}}],["child(1",{"_index":1343,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["child(2",{"_index":1346,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["child(3",{"_index":1348,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["child(4",{"_index":1350,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["child(5",{"_index":1352,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["choice",{"_index":1970,"title":{},"body":{"index.html":{}}}],["class",{"_index":116,"title":{"classes/User.html":{}},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":1758,"title":{},"body":{"classes/User.html":{}}}],["cleartimeout(this.tokenexpirationtimer",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["cli",{"_index":1937,"title":{},"body":{"index.html":{}}}],["close",{"_index":248,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["closediasub",{"_index":320,"title":{},"body":{"components/AdminComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["cluster_appmodule",{"_index":482,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":485,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":486,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":484,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":483,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":1950,"title":{},"body":{"index.html":{}}}],["color",{"_index":1007,"title":{},"body":{"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/LoadingScreenComponent.html":{}}}],["command",{"_index":1971,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":1910,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":175,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"overview.html":{}}}],["confirm('möchtest",{"_index":137,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/LobbyComponent.html":{}}}],["console.log('all",{"_index":1681,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["console.log('hallo",{"_index":1285,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["console.log('inside",{"_index":1127,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["console.log(category",{"_index":851,"title":{},"body":{"injectables/CategoryService.html":{}}}],["console.log(categoryarray",{"_index":848,"title":{},"body":{"injectables/CategoryService.html":{}}}],["console.log(course",{"_index":905,"title":{},"body":{"injectables/CourseService.html":{}}}],["console.log(errormessage",{"_index":123,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/AuthComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["console.log(question",{"_index":1685,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["console.log(response",{"_index":143,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["console.log(responsedata",{"_index":840,"title":{},"body":{"injectables/CategoryService.html":{}}}],["console.log(this.data",{"_index":953,"title":{},"body":{"components/EditAnswerDialogComponent.html":{}}}],["console.log(this.form.value",{"_index":866,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["console.log(user",{"_index":1826,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":129,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/GameComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":912,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(auth",{"_index":38,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"components/RankingComponent.html":{}}}],["constructor(authservice",{"_index":472,"title":{},"body":{"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/HeaderComponent.html":{}}}],["constructor(data",{"_index":908,"title":{},"body":{"components/DialogComponent.html":{}}}],["constructor(dialogref",{"_index":1775,"title":{},"body":{"components/UserEditComponent.html":{}}}],["constructor(elementref",{"_index":797,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["constructor(fb",{"_index":250,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["constructor(http",{"_index":408,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["constructor(iduser",{"_index":1761,"title":{},"body":{"classes/User.html":{}}}],["constructor(loadingscreenservice",{"_index":1271,"title":{},"body":{"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{}}}],["constructor(private",{"_index":117,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["constructor(route",{"_index":972,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["constructor(sanitizer",{"_index":1246,"title":{},"body":{"components/HomeComponent.html":{}}}],["content",{"_index":386,"title":{},"body":{"components/AdminComponent.html":{}}}],["context",{"_index":1893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["controller",{"_index":1819,"title":{},"body":{"injectables/UserService.html":{}}}],["countflagged",{"_index":1656,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["countflagged(loggedinuser",{"_index":1660,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["course",{"_index":192,"title":{"interfaces/Course.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{}}}],["course.id",{"_index":906,"title":{},"body":{"injectables/CourseService.html":{}}}],["course.isactive",{"_index":1532,"title":{},"body":{"components/LobbyComponent.html":{}}}],["course.name",{"_index":1566,"title":{},"body":{"components/LobbyComponent.html":{}}}],["coursearray",{"_index":894,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursearray.push",{"_index":896,"title":{},"body":{"injectables/CourseService.html":{}}}],["coursedialogcomponent",{"_index":191,"title":{"components/CourseDialogComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["courseid",{"_index":828,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["courses",{"_index":1461,"title":{},"body":{"components/LobbyComponent.html":{}}}],["courseservice",{"_index":869,"title":{"injectables/CourseService.html":{}},"body":{"injectables/CourseService.html":{},"components/LobbyComponent.html":{},"coverage.html":{}}}],["coverage",{"_index":1831,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":406,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{},"index.html":{}}}],["create(loggedinuser",{"_index":428,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["created",{"_index":1606,"title":{},"body":{"injectables/LobbyService.html":{}}}],["createdate",{"_index":804,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Question.html":{},"injectables/QuizService.html":{}}}],["createdquiz",{"_index":1462,"title":{},"body":{"components/LobbyComponent.html":{}}}],["createquiz",{"_index":1574,"title":{},"body":{"injectables/LobbyService.html":{}}}],["createquiz(loggedinuser",{"_index":1578,"title":{},"body":{"injectables/LobbyService.html":{}}}],["creator",{"_index":805,"title":{},"body":{"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{}}}],["currentanswers",{"_index":1023,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentcategory",{"_index":1024,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentcategoryid",{"_index":1025,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentcorrectanswer",{"_index":1026,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentgamesub",{"_index":1027,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentplayerpoints",{"_index":1028,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentquestion",{"_index":1029,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentquestion.questiondescription",{"_index":1203,"title":{},"body":{"components/GameComponent.html":{}}}],["currentquizid",{"_index":1030,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentsubject",{"_index":1031,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentsubjectid",{"_index":1032,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["currentusergame",{"_index":1463,"title":{},"body":{"components/LobbyComponent.html":{}}}],["currentusergame.category",{"_index":1557,"title":{},"body":{"components/LobbyComponent.html":{}}}],["currentusergame.firstnamecreator",{"_index":1554,"title":{},"body":{"components/LobbyComponent.html":{}}}],["currentusergame.lastnamecreator",{"_index":1555,"title":{},"body":{"components/LobbyComponent.html":{}}}],["currentusergame.subject",{"_index":1556,"title":{},"body":{"components/LobbyComponent.html":{}}}],["currentusersub",{"_index":1464,"title":{},"body":{"components/LobbyComponent.html":{}}}],["cursor",{"_index":963,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["darf",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{},"components/FaqComponent.html":{}}}],["das",{"_index":230,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"interfaces/Answer.html":{},"components/AuthComponent.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"interfaces/Quiz.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"interfaces/Users.html":{}}}],["dashed",{"_index":965,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["data",{"_index":134,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"components/UserEditComponent.html":{}}}],["data.answer",{"_index":915,"title":{},"body":{"components/DialogComponent.html":{}}}],["data.description",{"_index":955,"title":{},"body":{"components/EditAnswerDialogComponent.html":{}}}],["data.questiondescription",{"_index":1647,"title":{},"body":{"components/QuestionDialogComponent.html":{}}}],["data['isloginmode",{"_index":634,"title":{},"body":{"components/AuthComponent.html":{}}}],["data['message",{"_index":980,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["datasource",{"_index":24,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["datasourcecategories",{"_index":1465,"title":{},"body":{"components/LobbyComponent.html":{}}}],["datasourcecourses",{"_index":1466,"title":{},"body":{"components/LobbyComponent.html":{}}}],["datasub",{"_index":971,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["date",{"_index":88,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{},"interfaces/Quiz.html":{},"classes/User.html":{}}}],["date().gettime",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(new",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(userdata._tokenexpirationdate",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["date(userdata._tokenexpirationdate).gettime",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["daten",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"components/UserEditComponent.html":{}}}],["datum",{"_index":155,"title":{},"body":{"components/AccountComponent.html":{}}}],["debouncetime",{"_index":1268,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["debouncetime(200",{"_index":1288,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["declarations",{"_index":493,"title":{},"body":{"modules/AppModule.html":{}}}],["decorators",{"_index":263,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/UserEditComponent.html":{}}}],["default",{"_index":86,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["dein",{"_index":1207,"title":{},"body":{"components/GameComponent.html":{}}}],["deine",{"_index":913,"title":{},"body":{"components/DialogComponent.html":{}}}],["deklariert",{"_index":423,"title":{},"body":{"injectables/AnswerService.html":{}}}],["delay",{"_index":1344,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["delete",{"_index":153,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{}}}],["delete(geturlbyid(this.model",{"_index":466,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["delete(loggedinuser",{"_index":437,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["deletegame",{"_index":1689,"title":{},"body":{"injectables/QuizService.html":{}}}],["deletegame(loggedinuser",{"_index":1696,"title":{},"body":{"injectables/QuizService.html":{}}}],["deleteuser",{"_index":1788,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(loggedinuser",{"_index":1793,"title":{},"body":{"injectables/UserService.html":{}}}],["dem",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["den",{"_index":61,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/HeaderComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["dependencies",{"_index":481,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":66,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["des",{"_index":821,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/RankingService.html":{},"miscellaneous/functions.html":{}}}],["description",{"_index":233,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"interfaces/Question.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"miscellaneous/functions.html":{}}}],["dev",{"_index":1943,"title":{},"body":{"index.html":{}}}],["development",{"_index":1940,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":26,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"components/UserEditComponent.html":{}}}],["dialog'},{'name",{"_index":180,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["dialog.component",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["dialog.component.css",{"_index":245,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["dialog.component.html",{"_index":246,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["dialog.component.ts",{"_index":244,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:17",{"_index":1645,"title":{},"body":{"components/QuestionDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":943,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":253,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":309,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["dialog.component.ts:21",{"_index":308,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":303,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["dialog.component.ts:23",{"_index":1646,"title":{},"body":{"components/QuestionDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":265,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/CategoryDialogComponent.html":{}}}],["dialog.component.ts:25",{"_index":945,"title":{},"body":{"components/EditAnswerDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":259,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":305,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["dialog.component.ts:33",{"_index":946,"title":{},"body":{"components/EditAnswerDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":809,"title":{},"body":{"components/CategoryDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":260,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":306,"title":{},"body":{"components/AddQuestionDialogComponent.html":{}}}],["dialog.component.ts:44",{"_index":861,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["dialog.component.ts:49",{"_index":808,"title":{},"body":{"components/CategoryDialogComponent.html":{}}}],["dialog.component.ts:50",{"_index":255,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["dialog.component.ts:52",{"_index":304,"title":{},"body":{"components/AddQuestionDialogComponent.html":{}}}],["dialog.component.ts:54",{"_index":860,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["dialog/add",{"_index":243,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["dialog/category",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"components/CategoryDialogComponent.html":{},"coverage.html":{}}}],["dialog/course",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"components/CourseDialogComponent.html":{},"coverage.html":{}}}],["dialog/dialog.component",{"_index":1099,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["dialog/edit",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"components/EditAnswerDialogComponent.html":{},"coverage.html":{}}}],["dialog/question",{"_index":566,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionDialogComponent.html":{},"coverage.html":{}}}],["dialogcomponent",{"_index":193,"title":{"components/DialogComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dialogdata",{"_index":917,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{},"coverage.html":{}}}],["dialogfenster",{"_index":80,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{}}}],["dialogref",{"_index":130,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["dich",{"_index":1187,"title":{},"body":{"components/GameComponent.html":{}}}],["die",{"_index":74,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"miscellaneous/functions.html":{}}}],["diese",{"_index":110,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["dieses",{"_index":398,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/Question.html":{},"interfaces/QuestionList.html":{},"interfaces/Quiz.html":{},"classes/User.html":{},"interfaces/Users.html":{}}}],["directive",{"_index":173,"title":{"directives/AutofocusDirective.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":216,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":1954,"title":{},"body":{"index.html":{}}}],["directory",{"_index":1959,"title":{},"body":{"index.html":{}}}],["disableanswerbutton",{"_index":1033,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["disablenextquestionbutton",{"_index":1034,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["display",{"_index":1307,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["displayedcolumns",{"_index":27,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["displayloadingscreen",{"_index":1425,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["dist",{"_index":1958,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":1832,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["domsanitizer",{"_index":1247,"title":{},"body":{"components/HomeComponent.html":{}}}],["done",{"_index":127,"title":{},"body":{"components/AccountComponent.html":{},"injectables/QuizService.html":{}}}],["du",{"_index":138,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{}}}],["dynamic",{"_index":1909,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":366,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["e2e",{"_index":1968,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1340,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["edit",{"_index":152,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["edit.component",{"_index":109,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{}}}],["edit.component.css",{"_index":922,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["edit.component.html",{"_index":921,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["edit.component.ts",{"_index":919,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{},"coverage.html":{}}}],["edit.component.ts:29",{"_index":1783,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit.component.ts:31",{"_index":1784,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit.component.ts:32",{"_index":1776,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit.component.ts:36",{"_index":1782,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit.component.ts:37",{"_index":1781,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit.component.ts:46",{"_index":1778,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit.component.ts:62",{"_index":1779,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit.component.ts:69",{"_index":1780,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit.component.ts:87",{"_index":1777,"title":{},"body":{"components/UserEditComponent.html":{}}}],["edit/user",{"_index":108,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"modules/AppModule.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{},"coverage.html":{}}}],["editanswerdialogcomponent",{"_index":194,"title":{"components/EditAnswerDialogComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["editieren",{"_index":273,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["editmode",{"_index":938,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["educat",{"_index":988,"title":{},"body":{"components/FaqComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["ein",{"_index":79,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"classes/User.html":{}}}],["eine",{"_index":420,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/FaqComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{}}}],["einem",{"_index":1192,"title":{},"body":{"components/GameComponent.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{}}}],["einen",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/UserService.html":{}}}],["eines",{"_index":1603,"title":{},"body":{"injectables/LobbyService.html":{},"classes/User.html":{}}}],["eingabe",{"_index":925,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["eingeloggte",{"_index":883,"title":{},"body":{"injectables/CourseService.html":{},"injectables/UserService.html":{}}}],["eingeloggten",{"_index":1931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eingeloggter",{"_index":425,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["element",{"_index":172,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["element.accountlevel",{"_index":349,"title":{},"body":{"components/AdminComponent.html":{}}}],["element.category",{"_index":1570,"title":{},"body":{"components/LobbyComponent.html":{}}}],["element.email",{"_index":368,"title":{},"body":{"components/AdminComponent.html":{}}}],["element.firstname",{"_index":363,"title":{},"body":{"components/AdminComponent.html":{},"components/RankingComponent.html":{}}}],["element.firstnamecreator",{"_index":1567,"title":{},"body":{"components/LobbyComponent.html":{}}}],["element.id",{"_index":351,"title":{},"body":{"components/AdminComponent.html":{}}}],["element.lastname",{"_index":365,"title":{},"body":{"components/AdminComponent.html":{},"components/RankingComponent.html":{}}}],["element.lastnamecreator",{"_index":1568,"title":{},"body":{"components/LobbyComponent.html":{}}}],["element.subject",{"_index":1569,"title":{},"body":{"components/LobbyComponent.html":{}}}],["element.totalpoints",{"_index":1748,"title":{},"body":{"components/RankingComponent.html":{}}}],["element.totalwins",{"_index":1750,"title":{},"body":{"components/RankingComponent.html":{}}}],["elementref",{"_index":798,"title":{},"body":{"directives/AutofocusDirective.html":{},"components/LoadingScreenComponent.html":{}}}],["email",{"_index":339,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{}}}],["enabled",{"_index":1420,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["end",{"_index":1967,"title":{},"body":{"index.html":{}}}],["endgame",{"_index":1035,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["enter",{"_index":664,"title":{},"body":{"components/AuthComponent.html":{}}}],["environment",{"_index":1890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["erfolgreich",{"_index":1551,"title":{},"body":{"components/LobbyComponent.html":{}}}],["ergebnis",{"_index":160,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{}}}],["ermittelt",{"_index":1585,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["error",{"_index":196,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"miscellaneous/functions.html":{}}}],["errormessage",{"_index":122,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["errorpagecomponent",{"_index":195,"title":{"components/ErrorPageComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errorres",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["errorres.error.error",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["erst",{"_index":1130,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["erstelle",{"_index":1190,"title":{},"body":{"components/GameComponent.html":{}}}],["erstellen",{"_index":1563,"title":{},"body":{"components/LobbyComponent.html":{},"injectables/LobbyService.html":{}}}],["erstellt",{"_index":430,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{}}}],["erstellten",{"_index":1193,"title":{},"body":{"components/GameComponent.html":{}}}],["es",{"_index":1183,"title":{},"body":{"components/GameComponent.html":{}}}],["eventemitter",{"_index":944,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["example",{"_index":370,"title":{},"body":{"components/AdminComponent.html":{},"index.html":{}}}],["execute",{"_index":1964,"title":{},"body":{"index.html":{}}}],["exisiert",{"_index":1184,"title":{},"body":{"components/GameComponent.html":{}}}],["exisitert",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["exists",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["expansion",{"_index":378,"title":{},"body":{"components/AdminComponent.html":{},"components/FaqComponent.html":{}}}],["expirationdate",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["expirationduration",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["expiresin",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":115,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{}}}],["exports",{"_index":608,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["falsch",{"_index":914,"title":{},"body":{"components/DialogComponent.html":{}}}],["false",{"_index":427,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["family",{"_index":1009,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq",{"_index":596,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/FaqComponent.html":{},"components/HeaderComponent.html":{}}}],["faq'},{'name",{"_index":199,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["faq.component.css",{"_index":983,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq.component.html",{"_index":984,"title":{},"body":{"components/FaqComponent.html":{}}}],["faq/faq.component",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["faqcomponent",{"_index":198,"title":{"components/FaqComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["fb",{"_index":254,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["fehlermeldung",{"_index":976,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["fehlermeldungen",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["fernstudium.de",{"_index":645,"title":{},"body":{"components/AuthComponent.html":{}}}],["ffnet",{"_index":78,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{}}}],["field",{"_index":391,"title":{},"body":{"components/AdminComponent.html":{},"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"index.html":{}}}],["files",{"_index":1949,"title":{},"body":{"index.html":{}}}],["filter",{"_index":1315,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["filteredresponse",{"_index":1530,"title":{},"body":{"components/LobbyComponent.html":{}}}],["finalize",{"_index":1423,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["find",{"_index":817,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{}}}],["find(loggedinuser",{"_index":827,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{}}}],["finishgame",{"_index":1045,"title":{},"body":{"components/GameComponent.html":{}}}],["finishquiz",{"_index":1690,"title":{},"body":{"injectables/QuizService.html":{}}}],["finishquiz(loggedinuser",{"_index":1698,"title":{},"body":{"injectables/QuizService.html":{}}}],["first",{"_index":1142,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{},"index.html":{}}}],["firstname",{"_index":337,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{}}}],["firstnamecreator",{"_index":1629,"title":{},"body":{"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["flagged",{"_index":1643,"title":{},"body":{"interfaces/Question.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{}}}],["flex",{"_index":382,"title":{},"body":{"components/AdminComponent.html":{}}}],["focused.mat",{"_index":1210,"title":{},"body":{"components/GameComponent.html":{}}}],["focusout",{"_index":942,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["font",{"_index":1004,"title":{},"body":{"components/FaqComponent.html":{}}}],["form",{"_index":247,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{},"components/UserEditComponent.html":{}}}],["formaccountlevel",{"_index":928,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["formbuilder",{"_index":251,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["formcontrol",{"_index":627,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/DialogData.html":{},"components/LobbyComponent.html":{},"components/UserEditComponent.html":{}}}],["formcontrol(null",{"_index":637,"title":{},"body":{"components/AuthComponent.html":{}}}],["formcontrol(this.data.accountlevel",{"_index":923,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["formgroup",{"_index":266,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["formsmodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{}}}],["formular",{"_index":262,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["formulardaten",{"_index":621,"title":{},"body":{"components/AuthComponent.html":{}}}],["found",{"_index":604,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["frage",{"_index":315,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/GameComponent.html":{},"interfaces/Question.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{}}}],["fragen",{"_index":311,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{}}}],["fragenpool",{"_index":1238,"title":{},"body":{"components/HeaderComponent.html":{}}}],["full",{"_index":299,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"modules/AppRoutingModule.html":{}}}],["function",{"_index":1868,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1921,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funktionen",{"_index":1600,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["further",{"_index":1975,"title":{},"body":{"index.html":{}}}],["fügt",{"_index":1593,"title":{},"body":{"injectables/LobbyService.html":{}}}],["für",{"_index":418,"title":{},"body":{"injectables/AnswerService.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{}}}],["g",{"_index":1982,"title":{},"body":{"index.html":{}}}],["game",{"_index":599,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Player2.html":{}}}],["game'},{'name",{"_index":201,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["game.component.css",{"_index":1019,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["game.component.html",{"_index":1020,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["game.length",{"_index":1103,"title":{},"body":{"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{}}}],["game/dialog/dialog.component",{"_index":579,"title":{},"body":{"modules/AppModule.html":{}}}],["game/game.component",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["game[0",{"_index":1520,"title":{},"body":{"components/LobbyComponent.html":{}}}],["game[0].category",{"_index":1115,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["game[0].idcategory",{"_index":1117,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["game[0].idcreatoruser",{"_index":1119,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["game[0].idjoineruser",{"_index":1121,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["game[0].idquiz",{"_index":1109,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["game[0].idsubject",{"_index":1113,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["game[0].subject",{"_index":1111,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["gamecomponent",{"_index":200,"title":{"components/GameComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["gamesarray",{"_index":1619,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["gamesarray.push",{"_index":1621,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["gegen",{"_index":1198,"title":{},"body":{"components/GameComponent.html":{}}}],["gehe",{"_index":1189,"title":{},"body":{"components/GameComponent.html":{}}}],["gehörende",{"_index":467,"title":{},"body":{"injectables/AnswerService.html":{}}}],["geladen",{"_index":1134,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["gelöscht",{"_index":70,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["gemacht",{"_index":1162,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["gemeldet",{"_index":1181,"title":{},"body":{"components/GameComponent.html":{}}}],["generate",{"_index":1952,"title":{},"body":{"index.html":{}}}],["generated",{"_index":1936,"title":{},"body":{"index.html":{}}}],["genutzer",{"_index":1818,"title":{},"body":{"injectables/UserService.html":{}}}],["geschlossen",{"_index":353,"title":{},"body":{"components/AdminComponent.html":{}}}],["gesendet",{"_index":950,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["gespeicherte",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["get(geturl(this.model",{"_index":835,"title":{},"body":{"injectables/CategoryService.html":{}}}],["get(geturl(usedcontroller",{"_index":892,"title":{},"body":{"injectables/CourseService.html":{}}}],["get(geturlbyid('countflagged",{"_index":1684,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["get(geturlbyid('flaggedquestionsbycourse",{"_index":1683,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["get(geturlbyid('questionsbycourse",{"_index":1682,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["get(geturlbyid(this.model",{"_index":904,"title":{},"body":{"injectables/CourseService.html":{}}}],["get(geturlbyidid('answerunique",{"_index":468,"title":{},"body":{"injectables/AnswerService.html":{}}}],["getallopenedgames",{"_index":1575,"title":{},"body":{"injectables/LobbyService.html":{}}}],["getallopenedgames(loggedinuser",{"_index":1583,"title":{},"body":{"injectables/LobbyService.html":{}}}],["getalluser",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["getanswers",{"_index":1691,"title":{},"body":{"injectables/QuizService.html":{}}}],["getanswers(loggedinuser",{"_index":1701,"title":{},"body":{"injectables/QuizService.html":{}}}],["getbycourse",{"_index":1657,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["getbycourse(loggedinuser",{"_index":1673,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["getbycourseflagged",{"_index":1658,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["getbycourseflagged(loggedinuser",{"_index":1676,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["getgamebyplayer",{"_index":1692,"title":{},"body":{"injectables/QuizService.html":{}}}],["getgamebyplayer(loggedinuser",{"_index":1703,"title":{},"body":{"injectables/QuizService.html":{}}}],["getloading",{"_index":1446,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["getplayerhistory",{"_index":1693,"title":{},"body":{"injectables/QuizService.html":{}}}],["getplayerhistory(loggedinuser",{"_index":1705,"title":{},"body":{"injectables/QuizService.html":{}}}],["getquestions",{"_index":1694,"title":{},"body":{"injectables/QuizService.html":{}}}],["getquestions(loggedinuser",{"_index":1707,"title":{},"body":{"injectables/QuizService.html":{}}}],["getranking",{"_index":1752,"title":{},"body":{"injectables/RankingService.html":{}}}],["getranking(loggedinuser",{"_index":1754,"title":{},"body":{"injectables/RankingService.html":{}}}],["getting",{"_index":1932,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":1770,"title":{},"body":{"classes/User.html":{}}}],["geturl",{"_index":450,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["geturl('login",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["geturl('register",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["geturl(model",{"_index":1923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geturlbyid",{"_index":451,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["geturlbyid(model",{"_index":1926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["geturlbyidid",{"_index":453,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuizService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["geturlbyidid(model",{"_index":1928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getuser",{"_index":1789,"title":{},"body":{"injectables/UserService.html":{}}}],["getuser(loggedinuser",{"_index":1795,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers",{"_index":1790,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers(loggedinuser",{"_index":1797,"title":{},"body":{"injectables/UserService.html":{}}}],["gezählt",{"_index":1666,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["geöffneten",{"_index":1586,"title":{},"body":{"injectables/LobbyService.html":{}}}],["gibt",{"_index":830,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["go",{"_index":1978,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1990,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":1332,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["guard",{"_index":667,"title":{"guards/AuthGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{}}}],["gültige",{"_index":994,"title":{},"body":{"components/FaqComponent.html":{}}}],["handleauthentication",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleauthentication(token",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["handleerror",{"_index":452,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(errorres",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["hat",{"_index":886,"title":{},"body":{"injectables/CourseService.html":{},"injectables/UserService.html":{}}}],["header",{"_index":380,"title":{},"body":{"components/AdminComponent.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{}}}],["header'},{'name",{"_index":203,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["header.component.css",{"_index":1217,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":1218,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.component",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["headercomponent",{"_index":202,"title":{"components/HeaderComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headers",{"_index":376,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["height",{"_index":169,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["heißt",{"_index":1821,"title":{},"body":{"injectables/UserService.html":{}}}],["help",{"_index":1976,"title":{},"body":{"index.html":{}}}],["helpers",{"_index":454,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["helvetica",{"_index":1010,"title":{},"body":{"components/FaqComponent.html":{}}}],["hidden",{"_index":1320,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["hinzu",{"_index":1594,"title":{},"body":{"injectables/LobbyService.html":{}}}],["hinzufügen",{"_index":274,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{}}}],["hinzugefügt",{"_index":1596,"title":{},"body":{"injectables/LobbyService.html":{}}}],["hinzugefügten",{"_index":1595,"title":{},"body":{"injectables/LobbyService.html":{}}}],["historysub",{"_index":28,"title":{},"body":{"components/AccountComponent.html":{}}}],["home",{"_index":591,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":205,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["home.component.css",{"_index":1243,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1244,"title":{},"body":{"components/HomeComponent.html":{}}}],["home/home.component",{"_index":552,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["homecomponent",{"_index":204,"title":{"components/HomeComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["html",{"_index":171,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["http",{"_index":411,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":1945,"title":{},"body":{"index.html":{}}}],["http://localhost:8000",{"_index":2002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http_interceptors",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":409,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":504,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"miscellaneous/functions.html":{}}}],["httpevent",{"_index":1421,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["httphandler",{"_index":1414,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["httpheaders",{"_index":833,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["httpinterceptor",{"_index":1422,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["httprequest",{"_index":1412,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["https://codepen.io/eliortabeka/pen/exjypp",{"_index":1312,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["ich",{"_index":999,"title":{},"body":{"components/FaqComponent.html":{}}}],["icon",{"_index":1308,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["id",{"_index":330,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"miscellaneous/functions.html":{}}}],["id).subscribe(response",{"_index":360,"title":{},"body":{"components/AdminComponent.html":{}}}],["id2",{"_index":1929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["idanswers",{"_index":285,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"interfaces/Answer.html":{},"injectables/QuizService.html":{}}}],["idcategory",{"_index":1634,"title":{},"body":{"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["idcreator",{"_index":1118,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["idcreatoruser",{"_index":1626,"title":{},"body":{"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["identifier",{"_index":1833,"title":{},"body":{"coverage.html":{}}}],["idforplayer2",{"_index":1123,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["idforplayer2).subscribe(response",{"_index":1125,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["idjoiner",{"_index":1120,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["idjoineruser",{"_index":1591,"title":{},"body":{"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["idquestion",{"_index":301,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"components/GameComponent.html":{},"interfaces/Question.html":{},"injectables/QuizService.html":{}}}],["idquestion).subscribe(response",{"_index":1155,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["idquiz",{"_index":1590,"title":{},"body":{"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["idsubject",{"_index":1622,"title":{},"body":{"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["iduser",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"classes/User.html":{}}}],["im",{"_index":1002,"title":{},"body":{"components/FaqComponent.html":{},"components/GameComponent.html":{},"injectables/UserService.html":{}}}],["implementiert",{"_index":112,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"index.html":{}}}],["import",{"_index":98,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":1215,"title":{},"body":{"components/GameComponent.html":{}}}],["imports",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["infinite",{"_index":1335,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{}}}],["init",{"_index":1141,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["initanswersforquestion",{"_index":1046,"title":{},"body":{"components/GameComponent.html":{}}}],["initanswersforquestion(idquestion",{"_index":1057,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["initcategories",{"_index":1473,"title":{},"body":{"components/LobbyComponent.html":{}}}],["initcourses",{"_index":1474,"title":{},"body":{"components/LobbyComponent.html":{}}}],["initcurrentuser",{"_index":1475,"title":{},"body":{"components/LobbyComponent.html":{}}}],["initgame",{"_index":1047,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["initialisere",{"_index":1129,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["initialisiert",{"_index":60,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/UserEditComponent.html":{}}}],["initquestionsingame",{"_index":1048,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["inittable",{"_index":32,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["inject",{"_index":267,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["inject(mat_dialog_data",{"_index":264,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["injectable",{"_index":401,"title":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LoadingScreenService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":403,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LoadingScreenService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["input",{"_index":951,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["inputs",{"_index":940,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["integer",{"_index":1669,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["intercept",{"_index":1409,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["intercept(request",{"_index":1411,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["interceptor",{"_index":1404,"title":{"interceptors/LoadingScreenInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":1405,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["interface",{"_index":395,"title":{"interfaces/Answer.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DialogData.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"interfaces/QuestionList.html":{},"interfaces/Quiz.html":{},"interfaces/Ranking.html":{},"interfaces/Users.html":{}},"body":{"interfaces/Answer.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"interfaces/QuestionList.html":{},"interfaces/Quiz.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"interfaces/Users.html":{},"coverage.html":{}}}],["interfaces",{"_index":396,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/DialogData.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"interfaces/QuestionList.html":{},"interfaces/Quiz.html":{},"interfaces/Ranking.html":{},"interfaces/Users.html":{},"overview.html":{}}}],["invalid",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["isactive",{"_index":855,"title":{},"body":{"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{}}}],["isadmin",{"_index":1219,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["isauth",{"_index":690,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isauthenticated",{"_index":1220,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iscorrect",{"_index":1066,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["isloginmode",{"_index":594,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{}}}],["issignupfailed",{"_index":612,"title":{},"body":{"components/AuthComponent.html":{}}}],["issuccessful",{"_index":613,"title":{},"body":{"components/AuthComponent.html":{}}}],["ist",{"_index":424,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"components/DialogComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"interfaces/Player2.html":{},"classes/User.html":{}}}],["istutor",{"_index":1221,"title":{},"body":{"components/HeaderComponent.html":{},"classes/User.html":{}}}],["items",{"_index":389,"title":{},"body":{"components/AdminComponent.html":{}}}],["iu",{"_index":992,"title":{},"body":{"components/FaqComponent.html":{},"components/HomeComponent.html":{}}}],["iubh",{"_index":644,"title":{},"body":{"components/AuthComponent.html":{}}}],["joinedquiz",{"_index":1467,"title":{},"body":{"components/LobbyComponent.html":{}}}],["joiner_iduser1",{"_index":1640,"title":{},"body":{"injectables/LobbyService.html":{}}}],["joinquiz",{"_index":1576,"title":{},"body":{"injectables/LobbyService.html":{}}}],["joinquiz(loggedinuser",{"_index":1589,"title":{},"body":{"injectables/LobbyService.html":{}}}],["json.parse(localstorage.getitem('userdata",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.stringify(user",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["justify",{"_index":385,"title":{},"body":{"components/AdminComponent.html":{}}}],["kann",{"_index":998,"title":{},"body":{"components/FaqComponent.html":{},"index.html":{}}}],["karma",{"_index":1966,"title":{},"body":{"index.html":{}}}],["kategorie",{"_index":820,"title":{},"body":{"injectables/CategoryService.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{}}}],["kategorien",{"_index":811,"title":{},"body":{"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{}}}],["kein",{"_index":1185,"title":{},"body":{"components/GameComponent.html":{}}}],["keine",{"_index":884,"title":{},"body":{"injectables/CourseService.html":{},"injectables/UserService.html":{}}}],["keinen",{"_index":1560,"title":{},"body":{"components/LobbyComponent.html":{}}}],["kevin",{"_index":159,"title":{},"body":{"components/AccountComponent.html":{}}}],["keyframes",{"_index":1354,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["klasse",{"_index":271,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"classes/User.html":{},"interfaces/Users.html":{}}}],["klicke",{"_index":1001,"title":{},"body":{"components/FaqComponent.html":{}}}],["komponente",{"_index":111,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["konnte",{"_index":1194,"title":{},"body":{"components/GameComponent.html":{}}}],["konnten",{"_index":1135,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["kopfmen",{"_index":1230,"title":{},"body":{"components/HeaderComponent.html":{}}}],["kurs",{"_index":867,"title":{},"body":{"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{}}}],["kurse",{"_index":882,"title":{},"body":{"injectables/CourseService.html":{}}}],["kurse/module",{"_index":874,"title":{},"body":{"injectables/CourseService.html":{}}}],["kursen/modulen",{"_index":863,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["kurses",{"_index":822,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/QuestionsService.html":{}}}],["kurskategorie",{"_index":803,"title":{},"body":{"interfaces/Category.html":{}}}],["kurstabelle",{"_index":854,"title":{},"body":{"interfaces/Course.html":{}}}],["lastname",{"_index":338,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{}}}],["lastnamecreator",{"_index":1631,"title":{},"body":{"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["layout",{"_index":1905,"title":{},"body":{"dependencies.html":{}}}],["left",{"_index":393,"title":{},"body":{"components/AdminComponent.html":{},"components/LoadingScreenComponent.html":{}}}],["legend",{"_index":170,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["lernen",{"_index":1257,"title":{},"body":{"components/HomeComponent.html":{}}}],["lerneneducat",{"_index":1261,"title":{},"body":{"components/HomeComponent.html":{}}}],["level",{"_index":231,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"injectables/AuthService.html":{}}}],["level.pipe",{"_index":561,"title":{},"body":{"modules/AppModule.html":{}}}],["level.pipe.ts",{"_index":225,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"coverage.html":{}}}],["level.pipe.ts:17",{"_index":228,"title":{},"body":{"pipes/AccountLevelPipe.html":{}}}],["lightgray",{"_index":966,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["linear",{"_index":1333,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["link",{"_index":281,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["list",{"_index":535,"title":{},"body":{"modules/AppModule.html":{}}}],["literal",{"_index":1999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadeduser",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["loadeduser.token",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["loader",{"_index":1311,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["loadgame",{"_index":1036,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["loading",{"_index":207,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["loading(value",{"_index":1452,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["loadingscreencomponent",{"_index":206,"title":{"components/LoadingScreenComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loadingscreeninterceptor",{"_index":488,"title":{"interceptors/LoadingScreenInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/LoadingScreenInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["loadingscreenservice",{"_index":1272,"title":{"injectables/LoadingScreenService.html":{}},"body":{"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"coverage.html":{}}}],["loadingstatus",{"_index":1438,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["loadingsubscription",{"_index":1269,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["loadlobby",{"_index":1468,"title":{},"body":{"components/LobbyComponent.html":{}}}],["lobby",{"_index":597,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LobbyComponent.html":{}}}],["lobby'},{'name",{"_index":210,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["lobby.component.css",{"_index":1455,"title":{},"body":{"components/LobbyComponent.html":{}}}],["lobby.component.html",{"_index":1456,"title":{},"body":{"components/LobbyComponent.html":{}}}],["lobby/lobby.component",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["lobbycomponent",{"_index":209,"title":{"components/LobbyComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["lobbyservice",{"_index":1479,"title":{"injectables/LobbyService.html":{}},"body":{"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"coverage.html":{}}}],["localstorage.removeitem('userdata",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{}}}],["localstorage.setitem('userdata",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{}}}],["loggedinuser",{"_index":29,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["loggedinuser.accountlevel",{"_index":149,"title":{},"body":{"components/AccountComponent.html":{},"injectables/CourseService.html":{},"components/LobbyComponent.html":{},"injectables/UserService.html":{}}}],["loggedinuser.email",{"_index":151,"title":{},"body":{"components/AccountComponent.html":{}}}],["loggedinuser.firstname",{"_index":147,"title":{},"body":{"components/AccountComponent.html":{},"components/LobbyComponent.html":{}}}],["loggedinuser.iduser",{"_index":1722,"title":{},"body":{"injectables/QuizService.html":{}}}],["loggedinuser.lastname",{"_index":148,"title":{},"body":{"components/AccountComponent.html":{},"components/LobbyComponent.html":{}}}],["loggedinuser.token",{"_index":1615,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["login",{"_index":595,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{}}}],["login(email",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["löschen",{"_index":140,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"injectables/UserService.html":{}}}],["löscht",{"_index":439,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{}}}],["mail",{"_index":367,"title":{},"body":{"components/AdminComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["mail!{{error",{"_index":666,"title":{},"body":{"components/AuthComponent.html":{}}}],["map",{"_index":683,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["map((responsedata",{"_index":836,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{}}}],["map(responsedata",{"_index":1617,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["map(user",{"_index":688,"title":{},"body":{"guards/AuthGuard.html":{}}}],["margin",{"_index":392,"title":{},"body":{"components/AdminComponent.html":{},"components/GameComponent.html":{}}}],["markierte",{"_index":1678,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["markierten",{"_index":1665,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["markierter",{"_index":1663,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["mat",{"_index":165,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{}}}],["mat_dialog_data",{"_index":269,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["matbadgemodule",{"_index":548,"title":{},"body":{"modules/AppModule.html":{}}}],["matbuttonmodule",{"_index":518,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["matcheckboxmodule",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":221,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":42,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["matdialogmodule",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":252,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["matexpansionmodule",{"_index":520,"title":{},"body":{"modules/AppModule.html":{}}}],["matformfieldmodule",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["matgridlistmodule",{"_index":533,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":526,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":524,"title":{},"body":{"modules/AppModule.html":{}}}],["matlistmodule",{"_index":536,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":510,"title":{},"body":{"modules/AppModule.html":{}}}],["matprogressspinnermodule",{"_index":543,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":531,"title":{},"body":{"modules/AppModule.html":{}}}],["matsidenavmodule",{"_index":546,"title":{},"body":{"modules/AppModule.html":{}}}],["matslidetogglemodule",{"_index":538,"title":{},"body":{"modules/AppModule.html":{}}}],["matsortmodule",{"_index":512,"title":{},"body":{"modules/AppModule.html":{}}}],["mattablemodule",{"_index":508,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":514,"title":{},"body":{"modules/AppModule.html":{}}}],["mattooltipmodule",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":164,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{}}}],["melde",{"_index":1195,"title":{},"body":{"components/GameComponent.html":{}}}],["melden",{"_index":1202,"title":{},"body":{"components/GameComponent.html":{}}}],["meldet",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["men",{"_index":1003,"title":{},"body":{"components/FaqComponent.html":{}}}],["message",{"_index":605,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["methods",{"_index":31,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["mich",{"_index":1000,"title":{},"body":{"components/FaqComponent.html":{}}}],["min",{"_index":295,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["miscellaneous",{"_index":1920,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":81,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"miscellaneous/functions.html":{}}}],["model",{"_index":400,"title":{},"body":{"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/Question.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"classes/User.html":{},"interfaces/Users.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["model/answer.model",{"_index":447,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuizService.html":{}}}],["model/category.model",{"_index":834,"title":{},"body":{"injectables/CategoryService.html":{}}}],["model/course.model",{"_index":881,"title":{},"body":{"injectables/CourseService.html":{}}}],["model/question.model",{"_index":1680,"title":{},"body":{"injectables/QuestionsService.html":{},"injectables/QuizService.html":{}}}],["model/quiz.model",{"_index":1597,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["model/user.model",{"_index":446,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["model/users.model",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["modell",{"_index":431,"title":{},"body":{"injectables/AnswerService.html":{}}}],["modul",{"_index":1565,"title":{},"body":{"components/LobbyComponent.html":{},"injectables/LobbyService.html":{}}}],["module",{"_index":478,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{}}],["modules",{"_index":480,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moduls",{"_index":1582,"title":{},"body":{"injectables/LobbyService.html":{}}}],["more",{"_index":1977,"title":{},"body":{"index.html":{}}}],["moregamesexists",{"_index":1037,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["multi",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["muss",{"_index":355,"title":{},"body":{"components/AdminComponent.html":{}}}],["n",{"_index":1166,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["nach",{"_index":65,"title":{},"body":{"components/AccountComponent.html":{}}}],["nachdem",{"_index":1131,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["nachname",{"_index":364,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/RankingComponent.html":{}}}],["name",{"_index":48,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navigate",{"_index":1944,"title":{},"body":{"index.html":{}}}],["navigiert",{"_index":76,"title":{},"body":{"components/AccountComponent.html":{},"injectables/AuthService.html":{}}}],["nderung",{"_index":948,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["nderungen",{"_index":258,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["need",{"_index":1972,"title":{},"body":{"index.html":{}}}],["neue",{"_index":1011,"title":{},"body":{"components/FaqComponent.html":{}}}],["neues",{"_index":1562,"title":{},"body":{"components/LobbyComponent.html":{},"injectables/LobbyService.html":{}}}],["new",{"_index":635,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{}}}],["newaccountlevel",{"_index":930,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["newaccountlevel).subscribe(response",{"_index":936,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["next",{"_index":1413,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["next.handle(request",{"_index":1434,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["next.handle(request).pipe",{"_index":1432,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["nextquestion",{"_index":1049,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["ng",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":1270,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["ngmodule",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":33,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/UserEditComponent.html":{}}}],["ngoninit",{"_index":34,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["ngquiz",{"_index":1934,"title":{},"body":{"index.html":{}}}],["nicht",{"_index":682,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/GameComponent.html":{},"classes/User.html":{}}}],["nimmt",{"_index":1558,"title":{},"body":{"components/LobbyComponent.html":{}}}],["nogameexists",{"_index":1038,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["none",{"_index":1292,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["notwendig",{"_index":996,"title":{},"body":{"components/FaqComponent.html":{}}}],["null",{"_index":93,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"classes/User.html":{},"components/UserEditComponent.html":{}}}],["number",{"_index":307,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nutzen",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{}}}],["nutzer",{"_index":69,"title":{},"body":{"components/AccountComponent.html":{},"guards/AuthGuard.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["nutzeransicht",{"_index":114,"title":{},"body":{"components/AccountComponent.html":{}}}],["nutzerdaten",{"_index":82,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{}}}],["nächste",{"_index":1205,"title":{},"body":{"components/GameComponent.html":{}}}],["nötigen",{"_index":1599,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["ob",{"_index":417,"title":{},"body":{"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"classes/User.html":{}}}],["object",{"_index":2000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.assign(user",{"_index":1823,"title":{},"body":{"injectables/UserService.html":{}}}],["objekts",{"_index":1927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["observable",{"_index":629,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"interceptors/LoadingScreenInterceptor.html":{}}}],["occurred",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["oder",{"_index":435,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/GameComponent.html":{},"injectables/QuestionsService.html":{}}}],["offene",{"_index":1588,"title":{},"body":{"injectables/LobbyService.html":{}}}],["ohne",{"_index":257,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["oncancel",{"_index":927,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["oncreategame",{"_index":1476,"title":{},"body":{"components/LobbyComponent.html":{}}}],["ondelete",{"_index":321,"title":{},"body":{"components/AdminComponent.html":{}}}],["ondelete(id",{"_index":328,"title":{},"body":{"components/AdminComponent.html":{}}}],["ondeleteaccount",{"_index":35,"title":{},"body":{"components/AccountComponent.html":{}}}],["ondestroy",{"_index":13,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/LoadingScreenComponent.html":{},"components/UserEditComponent.html":{}}}],["onfocusout",{"_index":939,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["onfragemelden",{"_index":1050,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["onjoingame",{"_index":1477,"title":{},"body":{"components/LobbyComponent.html":{}}}],["onjoingame(quiz",{"_index":1488,"title":{},"body":{"components/LobbyComponent.html":{}}}],["online",{"_index":987,"title":{},"body":{"components/FaqComponent.html":{},"components/HomeComponent.html":{}}}],["onlogout",{"_index":1222,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onselectcourse",{"_index":1478,"title":{},"body":{"components/LobbyComponent.html":{}}}],["onselectcourse(course",{"_index":1490,"title":{},"body":{"components/LobbyComponent.html":{}}}],["onsubmit",{"_index":614,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["opacity",{"_index":1341,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["opendialog",{"_index":36,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/GameComponent.html":{}}}],["opendialog(element",{"_index":331,"title":{},"body":{"components/AdminComponent.html":{}}}],["opendialog(iscorrect",{"_index":1064,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["openedgamessub",{"_index":1469,"title":{},"body":{"components/LobbyComponent.html":{}}}],["optional",{"_index":50,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["organisator",{"_index":1553,"title":{},"body":{"components/LobbyComponent.html":{}}}],["origin",{"_index":1329,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["originalname",{"_index":858,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["out",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingScreenComponent.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":952,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["outputs",{"_index":941,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["outsourcen",{"_index":920,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["overflow",{"_index":1319,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["overview",{"_index":1980,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":1015,"title":{},"body":{"components/FaqComponent.html":{}}}],["package",{"_index":1897,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":373,"title":{},"body":{"components/AdminComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["page",{"_index":606,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ErrorPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":197,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["page.component",{"_index":554,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["page.component.css",{"_index":969,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.html",{"_index":970,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts",{"_index":968,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:15",{"_index":977,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:16",{"_index":973,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:23",{"_index":975,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page.component.ts:34",{"_index":974,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["page/error",{"_index":553,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["panel",{"_index":379,"title":{},"body":{"components/AdminComponent.html":{},"components/FaqComponent.html":{}}}],["panelopenstate",{"_index":985,"title":{},"body":{"components/FaqComponent.html":{}}}],["param",{"_index":238,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":46,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["password",{"_index":646,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{}}}],["passwort",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["path",{"_index":589,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["pathmatch",{"_index":592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pipe",{"_index":222,"title":{"pipes/AccountLevelPipe.html":{}},"body":{"pipes/AccountLevelPipe.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["pipe(catcherror(handleerror",{"_index":463,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["pipe(debouncetime(this.debouncetime",{"_index":1294,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["pipes",{"_index":223,"title":{},"body":{"pipes/AccountLevelPipe.html":{}}}],["pipetransform",{"_index":237,"title":{},"body":{"pipes/AccountLevelPipe.html":{}}}],["platform",{"_index":1969,"title":{},"body":{"index.html":{}}}],["playdate",{"_index":1624,"title":{},"body":{"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["player",{"_index":1610,"title":{},"body":{"injectables/LobbyService.html":{}}}],["player1",{"_index":89,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["player2",{"_index":91,"title":{"interfaces/Player2.html":{}},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"coverage.html":{}}}],["player2.firstname",{"_index":1199,"title":{},"body":{"components/GameComponent.html":{}}}],["player2.lastname",{"_index":1200,"title":{},"body":{"components/GameComponent.html":{}}}],["please",{"_index":663,"title":{},"body":{"components/AuthComponent.html":{}}}],["pointer",{"_index":964,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["points",{"_index":1727,"title":{},"body":{"injectables/QuizService.html":{}}}],["position",{"_index":1302,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["post",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["post(geturl(this.model",{"_index":461,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["preserve",{"_index":1324,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["private",{"_index":118,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["production",{"_index":2001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profil",{"_index":1241,"title":{},"body":{"components/HeaderComponent.html":{}}}],["project",{"_index":1935,"title":{},"body":{"index.html":{}}}],["promise",{"_index":679,"title":{},"body":{"guards/AuthGuard.html":{}}}],["properties",{"_index":23,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"interfaces/Users.html":{}}}],["provide",{"_index":580,"title":{},"body":{"modules/AppModule.html":{}}}],["providedin",{"_index":455,"title":{},"body":{"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LoadingScreenService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["providers",{"_index":494,"title":{},"body":{"modules/AppModule.html":{}}}],["prüfe",{"_index":1144,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["prüft",{"_index":416,"title":{},"body":{"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"classes/User.html":{}}}],["pts",{"_index":1699,"title":{},"body":{"injectables/QuizService.html":{}}}],["public",{"_index":25,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"classes/User.html":{},"components/UserEditComponent.html":{}}}],["punkte",{"_index":1201,"title":{},"body":{"components/GameComponent.html":{},"components/RankingComponent.html":{}}}],["put(geturlbyid(this.model",{"_index":464,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["question",{"_index":182,"title":{"interfaces/Question.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{}}}],["question.idquestion",{"_index":1686,"title":{},"body":{"injectables/QuestionsService.html":{},"injectables/QuizService.html":{}}}],["question.model",{"_index":1653,"title":{},"body":{"interfaces/QuestionList.html":{}}}],["question.questiondescription",{"_index":1714,"title":{},"body":{"injectables/QuizService.html":{}}}],["question_idquestion",{"_index":287,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"interfaces/Answer.html":{},"injectables/QuizService.html":{}}}],["questionarray",{"_index":1711,"title":{},"body":{"injectables/QuizService.html":{}}}],["questionarray.push",{"_index":1713,"title":{},"body":{"injectables/QuizService.html":{}}}],["questiondescription",{"_index":302,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"interfaces/Question.html":{},"injectables/QuizService.html":{}}}],["questiondialogcomponent",{"_index":211,"title":{"components/QuestionDialogComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionid",{"_index":413,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/QuestionsService.html":{}}}],["questionlist",{"_index":1650,"title":{"interfaces/QuestionList.html":{}},"body":{"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"coverage.html":{}}}],["questionnumber",{"_index":1039,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["questions",{"_index":601,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{}}}],["questions'},{'name",{"_index":213,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["questions/:id",{"_index":602,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["questions/add",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["questions/category",{"_index":577,"title":{},"body":{"modules/AppModule.html":{}}}],["questions/course",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["questions/edit",{"_index":570,"title":{},"body":{"modules/AppModule.html":{}}}],["questions/question",{"_index":565,"title":{},"body":{"modules/AppModule.html":{}}}],["questions/questions.component",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["questionscomponent",{"_index":212,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionservice",{"_index":1052,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["questionsservice",{"_index":1053,"title":{"injectables/QuestionsService.html":{}},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"coverage.html":{}}}],["questionsub",{"_index":1040,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["quiz",{"_index":476,"title":{"interfaces/Quiz.html":{}},"body":{"components/AppComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["quiz.categoryname",{"_index":1636,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz.creator_iduser",{"_index":1627,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz.firstname",{"_index":1630,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz.idcategory",{"_index":1635,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz.idjoineruser",{"_index":1526,"title":{},"body":{"components/LobbyComponent.html":{}}}],["quiz.idquiz",{"_index":1536,"title":{},"body":{"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz.idsubject",{"_index":1723,"title":{},"body":{"injectables/QuizService.html":{}}}],["quiz.joiner_iduser1",{"_index":1628,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz.lastname",{"_index":1632,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz.playdate",{"_index":1625,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz.subject_idsubject",{"_index":1623,"title":{},"body":{"injectables/LobbyService.html":{}}}],["quiz.subjectname",{"_index":1633,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["quiz_idquiz",{"_index":1726,"title":{},"body":{"injectables/QuizService.html":{}}}],["quizeswhere",{"_index":1607,"title":{},"body":{"injectables/LobbyService.html":{}}}],["quizservice",{"_index":43,"title":{"injectables/QuizService.html":{}},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"injectables/QuizService.html":{},"coverage.html":{}}}],["quizsystem",{"_index":1259,"title":{},"body":{"components/HomeComponent.html":{}}}],["radius",{"_index":1321,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["rangliste",{"_index":1239,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["ranking",{"_index":600,"title":{"interfaces/Ranking.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"coverage.html":{}}}],["ranking'},{'name",{"_index":215,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["ranking.component.css",{"_index":1737,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["ranking.component.html",{"_index":1736,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["ranking/ranking.component",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["rankingcomponent",{"_index":214,"title":{"components/RankingComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["rankings",{"_index":1756,"title":{},"body":{"injectables/RankingService.html":{}}}],["rankingservice",{"_index":1734,"title":{"injectables/RankingService.html":{}},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"coverage.html":{}}}],["reactiveformsmodule",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["redirectto",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":1981,"title":{},"body":{"index.html":{}}}],["regexp(skippurl).test(request.url",{"_index":1428,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["register",{"_index":593,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["registiert",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["registrieren",{"_index":662,"title":{},"body":{"components/AuthComponent.html":{},"components/FaqComponent.html":{},"components/HeaderComponent.html":{}}}],["registrierung",{"_index":630,"title":{},"body":{"components/AuthComponent.html":{},"components/FaqComponent.html":{}}}],["relative",{"_index":1318,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["reload",{"_index":1947,"title":{},"body":{"index.html":{}}}],["repräsentiert",{"_index":399,"title":{},"body":{"interfaces/Answer.html":{},"interfaces/Category.html":{},"interfaces/Course.html":{},"interfaces/Question.html":{},"interfaces/QuestionList.html":{},"interfaces/Quiz.html":{},"classes/User.html":{},"interfaces/Users.html":{}}}],["request",{"_index":1416,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["require",{"_index":1894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resdata",{"_index":657,"title":{},"body":{"components/AuthComponent.html":{}}}],["resdata.token",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["resdata.userdata.accountlevel_idaccountlevel",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["resdata.userdata.email",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["resdata.userdata.firstname",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["resdata.userdata.iduser",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["resdata.userdata.lastname",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["reset",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["response",{"_index":128,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["response.filter(course",{"_index":1531,"title":{},"body":{"components/LobbyComponent.html":{}}}],["response.filter(quiz",{"_index":1525,"title":{},"body":{"components/LobbyComponent.html":{}}}],["response.find(answer",{"_index":1157,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["responsedata",{"_index":837,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LobbyService.html":{},"injectables/QuizService.html":{},"injectables/UserService.html":{}}}],["responsedata.answers",{"_index":1716,"title":{},"body":{"injectables/QuizService.html":{}}}],["responsedata.answers.foreach((answer",{"_index":1718,"title":{},"body":{"injectables/QuizService.html":{}}}],["responsedata.category",{"_index":838,"title":{},"body":{"injectables/CategoryService.html":{}}}],["responsedata.category.foreach((category",{"_index":841,"title":{},"body":{"injectables/CategoryService.html":{}}}],["responsedata.questions",{"_index":1710,"title":{},"body":{"injectables/QuizService.html":{}}}],["responsedata.questions.foreach((question",{"_index":1712,"title":{},"body":{"injectables/QuizService.html":{}}}],["responsedata.quiz",{"_index":1618,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["responsedata.quiz.foreach((quiz",{"_index":1620,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/QuizService.html":{}}}],["responsedata.subject",{"_index":893,"title":{},"body":{"injectables/CourseService.html":{}}}],["responsedata.subject.foreach((subject",{"_index":895,"title":{},"body":{"injectables/CourseService.html":{}}}],["responsedata.user",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{}}}],["responsedata.user.foreach((user",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{}}}],["result",{"_index":90,"title":{},"body":{"components/AccountComponent.html":{}}}],["results",{"_index":220,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":240,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"injectables/AnswerService.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/GameComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":53,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["rgba(255",{"_index":1304,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["richtig",{"_index":422,"title":{},"body":{"injectables/AnswerService.html":{},"components/DialogComponent.html":{}}}],["richtigdeine",{"_index":916,"title":{},"body":{"components/DialogComponent.html":{}}}],["richtige",{"_index":1165,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["role",{"_index":603,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["root",{"_index":456,"title":{},"body":{"injectables/AnswerService.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/LoadingScreenService.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":186,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["route",{"_index":615,"title":{},"body":{"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"components/ErrorPageComponent.html":{}}}],["route.data.role",{"_index":693,"title":{},"body":{"guards/AuthGuard.html":{}}}],["router",{"_index":41,"title":{},"body":{"components/AccountComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["routermodule",{"_index":585,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":607,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":586,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":584,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1941,"title":{},"body":{"index.html":{}}}],["rungame",{"_index":1041,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["running",{"_index":1960,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":102,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":445,"title":{},"body":{"injectables/AnswerService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["s",{"_index":1985,"title":{},"body":{"index.html":{}}}],["saferesourceurl",{"_index":1253,"title":{},"body":{"components/HomeComponent.html":{}}}],["safesrc",{"_index":1245,"title":{},"body":{"components/HomeComponent.html":{}}}],["sanitizer",{"_index":1249,"title":{},"body":{"components/HomeComponent.html":{}}}],["sans",{"_index":1013,"title":{},"body":{"components/FaqComponent.html":{}}}],["save",{"_index":249,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["scaffolding",{"_index":1951,"title":{},"body":{"index.html":{}}}],["scale(0",{"_index":1355,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(0.9",{"_index":1330,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(1",{"_index":1365,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(1.2",{"_index":1369,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(1.3",{"_index":1373,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(1.4",{"_index":1377,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(1.5",{"_index":1380,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(1.6",{"_index":1392,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(1.7",{"_index":1383,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["scale(1.8",{"_index":1386,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["schliesst",{"_index":256,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["schließt",{"_index":926,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["schnittstelle",{"_index":888,"title":{},"body":{"injectables/CourseService.html":{},"injectables/UserService.html":{}}}],["screen",{"_index":1265,"title":{},"body":{"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{}}}],["screen'},{'name",{"_index":208,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["screen.component",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["screen.component.css",{"_index":1266,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.html",{"_index":1267,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.ts",{"_index":1263,"title":{},"body":{"components/LoadingScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:12",{"_index":1281,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.ts:13",{"_index":1282,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.ts:14",{"_index":1276,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.ts:22",{"_index":1279,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.ts:31",{"_index":1277,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.component.ts:42",{"_index":1278,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["screen.service",{"_index":1284,"title":{},"body":{"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{}}}],["screen.service.ts",{"_index":1436,"title":{},"body":{"injectables/LoadingScreenService.html":{},"coverage.html":{}}}],["screen.service.ts:11",{"_index":1447,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["screen.service.ts:15",{"_index":1449,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["screen.service.ts:20",{"_index":1442,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["screen.service.ts:24",{"_index":1443,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["screen.service.ts:8",{"_index":1444,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["screen.service.ts:9",{"_index":1445,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["screen/loading",{"_index":572,"title":{},"body":{"modules/AppModule.html":{},"components/LoadingScreenComponent.html":{},"coverage.html":{}}}],["second",{"_index":1609,"title":{},"body":{"injectables/LobbyService.html":{}}}],["selectanswer",{"_index":1051,"title":{},"body":{"components/GameComponent.html":{}}}],["selectanswer(answer",{"_index":1067,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["selectedcategoryid",{"_index":1470,"title":{},"body":{"components/LobbyComponent.html":{}}}],["selectedcategorysub",{"_index":1471,"title":{},"body":{"components/LobbyComponent.html":{}}}],["selectedcourse",{"_index":859,"title":{},"body":{"components/CourseDialogComponent.html":{},"components/LobbyComponent.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["sendet",{"_index":620,"title":{},"body":{"components/AuthComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["sentgame",{"_index":1042,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["serif",{"_index":1014,"title":{},"body":{"components/FaqComponent.html":{}}}],["serve",{"_index":1942,"title":{},"body":{"index.html":{}}}],["server",{"_index":949,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["service",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"injectables/LobbyService.html":{},"injectables/QuestionsService.html":{},"injectables/RankingService.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["services/auth.service",{"_index":685,"title":{},"body":{"guards/AuthGuard.html":{}}}],["services/loading",{"_index":1424,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["set",{"_index":1451,"title":{},"body":{"injectables/LoadingScreenService.html":{},"injectables/UserService.html":{}}}],["setauthheader",{"_index":449,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["setauthheader(loggedinuser.token",{"_index":462,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["setauthheader(token",{"_index":1930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setloading(value",{"_index":1448,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["settimeout",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{}}}],["setze",{"_index":1107,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["setzt",{"_index":1924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["shadow",{"_index":1337,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["shared/auth.guard",{"_index":588,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["shared/helpers/loading.interceptors",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/model",{"_index":1987,"title":{},"body":{"index.html":{}}}],["shared/model/answer.model",{"_index":1098,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["shared/model/category.model",{"_index":1515,"title":{},"body":{"components/LobbyComponent.html":{}}}],["shared/model/course.model",{"_index":1512,"title":{},"body":{"components/LobbyComponent.html":{}}}],["shared/model/question.model",{"_index":310,"title":{},"body":{"components/AddQuestionDialogComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{}}}],["shared/model/quiz.model",{"_index":1511,"title":{},"body":{"components/LobbyComponent.html":{}}}],["shared/model/user.model",{"_index":103,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["shared/model/users.model",{"_index":344,"title":{},"body":{"components/AdminComponent.html":{}}}],["shared/pipe/account",{"_index":560,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/services",{"_index":1986,"title":{},"body":{"index.html":{}}}],["shared/services/auth.service",{"_index":104,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["shared/services/category.service",{"_index":1516,"title":{},"body":{"components/LobbyComponent.html":{}}}],["shared/services/course.service",{"_index":1514,"title":{},"body":{"components/LobbyComponent.html":{}}}],["shared/services/loading",{"_index":1283,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["shared/services/lobby.service",{"_index":1513,"title":{},"body":{"components/LobbyComponent.html":{}}}],["shared/services/questions.service",{"_index":1100,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["shared/services/quiz.service",{"_index":105,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{}}}],["shared/services/ranking.service",{"_index":1735,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["shared/services/user.service",{"_index":106,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/UserEditComponent.html":{}}}],["shortname",{"_index":856,"title":{},"body":{"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{}}}],["sich",{"_index":990,"title":{},"body":{"components/FaqComponent.html":{}}}],["sicher",{"_index":139,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"components/LobbyComponent.html":{}}}],["siege",{"_index":1749,"title":{},"body":{"components/RankingComponent.html":{}}}],["signup",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["signup(firstname",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["sind",{"_index":1147,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["size",{"_index":1005,"title":{},"body":{"components/FaqComponent.html":{}}}],["skippurl",{"_index":1426,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["skippurls",{"_index":1408,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["sobald",{"_index":352,"title":{},"body":{"components/AdminComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["solid",{"_index":959,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["soll",{"_index":433,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{}}}],["sollen",{"_index":1668,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"index.html":{}}}],["spa",{"_index":1256,"title":{},"body":{"components/HomeComponent.html":{}}}],["space",{"_index":387,"title":{},"body":{"components/AdminComponent.html":{}}}],["spec.ts",{"_index":1984,"title":{},"body":{"index.html":{}}}],["spec\\.ts",{"_index":1998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speichern",{"_index":1786,"title":{},"body":{"components/UserEditComponent.html":{}}}],["speichert",{"_index":261,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"injectables/AuthService.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["spiel",{"_index":1186,"title":{},"body":{"components/GameComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{}}}],["spiele",{"_index":1587,"title":{},"body":{"injectables/LobbyService.html":{}}}],["spieler",{"_index":157,"title":{},"body":{"components/AccountComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["spiels",{"_index":1604,"title":{},"body":{"injectables/LobbyService.html":{}}}],["spielst",{"_index":1197,"title":{},"body":{"components/GameComponent.html":{}}}],["spinner",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["src/.../app",{"_index":1993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../helpers.ts",{"_index":1922,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/account/account.component.ts",{"_index":10,"title":{},"body":{"components/AccountComponent.html":{},"coverage.html":{}}}],["src/app/account/account.component.ts:22",{"_index":96,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:23",{"_index":97,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:25",{"_index":94,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:27",{"_index":83,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:28",{"_index":45,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:30",{"_index":84,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:36",{"_index":59,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:45",{"_index":52,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:58",{"_index":77,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:69",{"_index":64,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/account/account.component.ts:86",{"_index":55,"title":{},"body":{"components/AccountComponent.html":{}}}],["src/app/admin/admin.component.ts",{"_index":316,"title":{},"body":{"components/AdminComponent.html":{},"coverage.html":{}}}],["src/app/admin/admin.component.ts:20",{"_index":341,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:22",{"_index":342,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:23",{"_index":343,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:24",{"_index":334,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:26",{"_index":335,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:28",{"_index":322,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:31",{"_index":336,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:37",{"_index":325,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:45",{"_index":323,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:58",{"_index":333,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:73",{"_index":329,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/admin/admin.component.ts:88",{"_index":324,"title":{},"body":{"components/AdminComponent.html":{}}}],["src/app/app",{"_index":583,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":469,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:15",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":492,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/auth/auth.component.ts",{"_index":609,"title":{},"body":{"components/AuthComponent.html":{},"coverage.html":{}}}],["src/app/auth/auth.component.ts:18",{"_index":624,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:19",{"_index":623,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:20",{"_index":626,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:21",{"_index":625,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:22",{"_index":622,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:23",{"_index":617,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:30",{"_index":618,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/auth/auth.component.ts:50",{"_index":619,"title":{},"body":{"components/AuthComponent.html":{}}}],["src/app/autofocus.directive.ts",{"_index":796,"title":{},"body":{"directives/AutofocusDirective.html":{},"coverage.html":{}}}],["src/app/autofocus.directive.ts:6",{"_index":799,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["src/app/autofocus.directive.ts:9",{"_index":800,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["src/app/error",{"_index":967,"title":{},"body":{"components/ErrorPageComponent.html":{},"coverage.html":{}}}],["src/app/faq/faq.component.ts",{"_index":982,"title":{},"body":{"components/FaqComponent.html":{},"coverage.html":{}}}],["src/app/faq/faq.component.ts:13",{"_index":986,"title":{},"body":{"components/FaqComponent.html":{}}}],["src/app/game/dialog/dialog.component.ts",{"_index":907,"title":{},"body":{"components/DialogComponent.html":{},"coverage.html":{}}}],["src/app/game/dialog/dialog.component.ts:11",{"_index":911,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/game/dialog/dialog.component.ts:13",{"_index":910,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/game/dialog/dialog.component.ts:9",{"_index":909,"title":{},"body":{"components/DialogComponent.html":{}}}],["src/app/game/game.component.ts",{"_index":1018,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{},"coverage.html":{}}}],["src/app/game/game.component.ts:135",{"_index":1060,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:152",{"_index":1055,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:157",{"_index":1058,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:167",{"_index":1068,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:181",{"_index":1061,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:191",{"_index":1056,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:200",{"_index":1063,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:214",{"_index":1065,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:28",{"_index":1087,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:29",{"_index":1097,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:31",{"_index":1096,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:33",{"_index":1090,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:34",{"_index":1091,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:36",{"_index":1079,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:38",{"_index":1080,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:39",{"_index":1081,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:40",{"_index":1073,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:41",{"_index":1074,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:43",{"_index":1077,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:45",{"_index":1093,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:47",{"_index":1078,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:48",{"_index":1072,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:49",{"_index":1075,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:51",{"_index":1092,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:52",{"_index":1069,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:54",{"_index":1084,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:55",{"_index":1083,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:60",{"_index":1076,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:61",{"_index":1094,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:62",{"_index":1070,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:64",{"_index":1071,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:66",{"_index":1095,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:67",{"_index":1085,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:68",{"_index":1086,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:69",{"_index":1089,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:70",{"_index":1088,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:71",{"_index":1054,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:76",{"_index":1082,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:78",{"_index":1062,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/game/game.component.ts:87",{"_index":1059,"title":{},"body":{"components/GameComponent.html":{}}}],["src/app/header/header.component.ts",{"_index":1216,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/header/header.component.ts:15",{"_index":1228,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:16",{"_index":1227,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:17",{"_index":1229,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:18",{"_index":1223,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:25",{"_index":1225,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:36",{"_index":1226,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/header/header.component.ts:43",{"_index":1224,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/home/home.component.ts",{"_index":1242,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/home/home.component.ts:14",{"_index":1252,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/home/home.component.ts:15",{"_index":1248,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/loading",{"_index":1262,"title":{},"body":{"components/LoadingScreenComponent.html":{},"coverage.html":{}}}],["src/app/lobby/lobby.component.ts",{"_index":1454,"title":{},"body":{"components/LobbyComponent.html":{},"coverage.html":{}}}],["src/app/lobby/lobby.component.ts:107",{"_index":1491,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:112",{"_index":1482,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:121",{"_index":1487,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:138",{"_index":1481,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:22",{"_index":1503,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:24",{"_index":1510,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:25",{"_index":1494,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:27",{"_index":1505,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:29",{"_index":1509,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:30",{"_index":1507,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:32",{"_index":1496,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:33",{"_index":1495,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:35",{"_index":1502,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:36",{"_index":1501,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:38",{"_index":1500,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:39",{"_index":1493,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:41",{"_index":1498,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:43",{"_index":1499,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:44",{"_index":1506,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:45",{"_index":1492,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:46",{"_index":1504,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:47",{"_index":1497,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:48",{"_index":1508,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:50",{"_index":1480,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:54",{"_index":1486,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:64",{"_index":1484,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:73",{"_index":1485,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:84",{"_index":1483,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/lobby/lobby.component.ts:97",{"_index":1489,"title":{},"body":{"components/LobbyComponent.html":{}}}],["src/app/questions/add",{"_index":242,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"coverage.html":{}}}],["src/app/questions/category",{"_index":807,"title":{},"body":{"components/CategoryDialogComponent.html":{},"coverage.html":{}}}],["src/app/questions/course",{"_index":857,"title":{},"body":{"components/CourseDialogComponent.html":{},"coverage.html":{}}}],["src/app/questions/edit",{"_index":937,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"coverage.html":{}}}],["src/app/questions/question",{"_index":1644,"title":{},"body":{"components/QuestionDialogComponent.html":{},"coverage.html":{}}}],["src/app/questions/questions.component.ts",{"_index":1861,"title":{},"body":{"coverage.html":{}}}],["src/app/ranking/ranking.component.ts",{"_index":1731,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"coverage.html":{}}}],["src/app/ranking/ranking.component.ts:28",{"_index":1745,"title":{},"body":{"components/RankingComponent.html":{}}}],["src/app/ranking/ranking.component.ts:30",{"_index":1746,"title":{},"body":{"components/RankingComponent.html":{}}}],["src/app/ranking/ranking.component.ts:31",{"_index":1747,"title":{},"body":{"components/RankingComponent.html":{}}}],["src/app/ranking/ranking.component.ts:33",{"_index":1744,"title":{},"body":{"components/RankingComponent.html":{}}}],["src/app/ranking/ranking.component.ts:34",{"_index":1741,"title":{},"body":{"components/RankingComponent.html":{}}}],["src/app/ranking/ranking.component.ts:39",{"_index":1743,"title":{},"body":{"components/RankingComponent.html":{}}}],["src/app/ranking/ranking.component.ts:47",{"_index":1742,"title":{},"body":{"components/RankingComponent.html":{}}}],["src/app/shared/auth.guard.ts",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/shared/auth.guard.ts:18",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/shared/auth.guard.ts:27",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/shared/helpers.ts",{"_index":1867,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/helpers/loading.interceptors.ts",{"_index":1406,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{},"coverage.html":{}}}],["src/app/shared/helpers/loading.interceptors.ts:14",{"_index":1410,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["src/app/shared/helpers/loading.interceptors.ts:18",{"_index":1415,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["src/app/shared/helpers/loading.interceptors.ts:9",{"_index":1417,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["src/app/shared/model/answer.model",{"_index":270,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{}}}],["src/app/shared/model/answer.model.ts",{"_index":397,"title":{},"body":{"interfaces/Answer.html":{},"coverage.html":{}}}],["src/app/shared/model/category.model",{"_index":810,"title":{},"body":{"components/CategoryDialogComponent.html":{}}}],["src/app/shared/model/category.model.ts",{"_index":802,"title":{},"body":{"interfaces/Category.html":{},"coverage.html":{}}}],["src/app/shared/model/course.model",{"_index":862,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["src/app/shared/model/course.model.ts",{"_index":853,"title":{},"body":{"interfaces/Course.html":{},"coverage.html":{}}}],["src/app/shared/model/question.model.ts",{"_index":1641,"title":{},"body":{"interfaces/Question.html":{},"coverage.html":{}}}],["src/app/shared/model/questionlist.model.ts",{"_index":1651,"title":{},"body":{"interfaces/QuestionList.html":{},"coverage.html":{}}}],["src/app/shared/model/quiz.model.ts",{"_index":1687,"title":{},"body":{"interfaces/Quiz.html":{},"coverage.html":{}}}],["src/app/shared/model/user.model.ts",{"_index":1759,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/app/shared/model/user.model.ts:10",{"_index":1763,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:15",{"_index":1771,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:26",{"_index":1768,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:34",{"_index":1769,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:4",{"_index":1762,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:6",{"_index":1766,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:7",{"_index":1765,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:8",{"_index":1767,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/user.model.ts:9",{"_index":1764,"title":{},"body":{"classes/User.html":{}}}],["src/app/shared/model/users.model.ts",{"_index":1829,"title":{},"body":{"interfaces/Users.html":{},"coverage.html":{}}}],["src/app/shared/pipe/account",{"_index":224,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"coverage.html":{}}}],["src/app/shared/services/answer.service.ts",{"_index":404,"title":{},"body":{"injectables/AnswerService.html":{},"coverage.html":{}}}],["src/app/shared/services/answer.service.ts:25",{"_index":410,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/shared/services/answer.service.ts:36",{"_index":429,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/shared/services/answer.service.ts:51",{"_index":441,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/shared/services/answer.service.ts:66",{"_index":438,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/shared/services/answer.service.ts:82",{"_index":415,"title":{},"body":{"injectables/AnswerService.html":{}}}],["src/app/shared/services/auth.service.ts",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/shared/services/auth.service.ts:117",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:131",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:146",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:16",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:167",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:17",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:29",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:51",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/auth.service.ts:79",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/shared/services/category.service.ts",{"_index":816,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/app/shared/services/category.service.ts:102",{"_index":826,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/shared/services/category.service.ts:24",{"_index":818,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/shared/services/category.service.ts:35",{"_index":829,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/shared/services/category.service.ts:71",{"_index":819,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/shared/services/category.service.ts:87",{"_index":832,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/app/shared/services/course.service.ts",{"_index":870,"title":{},"body":{"injectables/CourseService.html":{},"coverage.html":{}}}],["src/app/shared/services/course.service.ts:101",{"_index":875,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/shared/services/course.service.ts:117",{"_index":879,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/shared/services/course.service.ts:23",{"_index":871,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/shared/services/course.service.ts:33",{"_index":873,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/shared/services/course.service.ts:71",{"_index":876,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/shared/services/course.service.ts:86",{"_index":877,"title":{},"body":{"injectables/CourseService.html":{}}}],["src/app/shared/services/loading",{"_index":1435,"title":{},"body":{"injectables/LoadingScreenService.html":{},"coverage.html":{}}}],["src/app/shared/services/lobby.service.ts",{"_index":1573,"title":{},"body":{"injectables/LobbyService.html":{},"coverage.html":{}}}],["src/app/shared/services/lobby.service.ts:17",{"_index":1577,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/app/shared/services/lobby.service.ts:26",{"_index":1584,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/app/shared/services/lobby.service.ts:68",{"_index":1581,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/app/shared/services/lobby.service.ts:86",{"_index":1592,"title":{},"body":{"injectables/LobbyService.html":{}}}],["src/app/shared/services/questions.service.ts",{"_index":1655,"title":{},"body":{"injectables/QuestionsService.html":{},"coverage.html":{}}}],["src/app/shared/services/questions.service.ts:108",{"_index":1679,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["src/app/shared/services/questions.service.ts:19",{"_index":1659,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["src/app/shared/services/questions.service.ts:30",{"_index":1674,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["src/app/shared/services/questions.service.ts:46",{"_index":1677,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["src/app/shared/services/questions.service.ts:62",{"_index":1661,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["src/app/shared/services/questions.service.ts:77",{"_index":1672,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["src/app/shared/services/questions.service.ts:92",{"_index":1670,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["src/app/shared/services/quiz.service.ts",{"_index":1688,"title":{},"body":{"injectables/QuizService.html":{},"coverage.html":{}}}],["src/app/shared/services/quiz.service.ts:112",{"_index":1700,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/services/quiz.service.ts:123",{"_index":1697,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/services/quiz.service.ts:13",{"_index":1695,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/services/quiz.service.ts:135",{"_index":1706,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/services/quiz.service.ts:16",{"_index":1708,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/services/quiz.service.ts:42",{"_index":1702,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/services/quiz.service.ts:74",{"_index":1704,"title":{},"body":{"injectables/QuizService.html":{}}}],["src/app/shared/services/ranking.service.ts",{"_index":1751,"title":{},"body":{"injectables/RankingService.html":{},"coverage.html":{}}}],["src/app/shared/services/ranking.service.ts:17",{"_index":1753,"title":{},"body":{"injectables/RankingService.html":{}}}],["src/app/shared/services/ranking.service.ts:26",{"_index":1755,"title":{},"body":{"injectables/RankingService.html":{}}}],["src/app/shared/services/user.service.ts",{"_index":1787,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/shared/services/user.service.ts:121",{"_index":1794,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:18",{"_index":1792,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:28",{"_index":1796,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:42",{"_index":1798,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/shared/services/user.service.ts:97",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/user",{"_index":918,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{},"coverage.html":{}}}],["src/environments/environment.prod.ts",{"_index":1889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":1891,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":1892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":1933,"title":{"index.html":{}},"body":{}}],["startloading",{"_index":1439,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["startseite",{"_index":75,"title":{},"body":{"components/AccountComponent.html":{},"components/HomeComponent.html":{}}}],["statements",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":232,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"components/LoadingScreenComponent.html":{},"components/UserEditComponent.html":{}}}],["stellt",{"_index":1598,"title":{},"body":{"injectables/LobbyService.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["still",{"_index":1608,"title":{},"body":{"injectables/LobbyService.html":{}}}],["stimmen",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["stoploading",{"_index":1440,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["stored",{"_index":1957,"title":{},"body":{"index.html":{}}}],["string",{"_index":85,"title":{},"body":{"components/AccountComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/Category.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"injectables/CourseService.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HomeComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"interfaces/Users.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["stroked",{"_index":1211,"title":{},"body":{"components/GameComponent.html":{}}}],["student",{"_index":236,"title":{},"body":{"pipes/AccountLevelPipe.html":{}}}],["studenten",{"_index":991,"title":{},"body":{"components/FaqComponent.html":{}}}],["students",{"_index":891,"title":{},"body":{"injectables/CourseService.html":{}}}],["studierende",{"_index":1260,"title":{},"body":{"components/HomeComponent.html":{}}}],["style",{"_index":1323,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["styleurls",{"_index":18,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["subject",{"_index":880,"title":{},"body":{"injectables/CourseService.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{}}}],["subject.active",{"_index":902,"title":{},"body":{"injectables/CourseService.html":{}}}],["subject.createdate",{"_index":900,"title":{},"body":{"injectables/CourseService.html":{}}}],["subject.creator_iduser",{"_index":899,"title":{},"body":{"injectables/CourseService.html":{}}}],["subject.idsubject",{"_index":897,"title":{},"body":{"injectables/CourseService.html":{}}}],["subject.name",{"_index":898,"title":{},"body":{"injectables/CourseService.html":{}}}],["subject.shortname",{"_index":901,"title":{},"body":{"injectables/CourseService.html":{}}}],["subject_idsubject",{"_index":806,"title":{},"body":{"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"injectables/LobbyService.html":{}}}],["subjectid",{"_index":1579,"title":{},"body":{"injectables/LobbyService.html":{}}}],["subscribe((status",{"_index":1295,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["subscribe((value",{"_index":1289,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["subscription",{"_index":92,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["subscriptions",{"_index":58,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/ErrorPageComponent.html":{},"components/HeaderComponent.html":{},"components/UserEditComponent.html":{}}}],["successmsg",{"_index":1043,"title":{},"body":{"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{}}}],["super",{"_index":1161,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["support",{"_index":1988,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1313,"title":{},"body":{"components/LoadingScreenComponent.html":{},"modules.html":{}}}],["system",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{}}}],["tabelle",{"_index":327,"title":{},"body":{"components/AdminComponent.html":{}}}],["table",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":684,"title":{},"body":{"guards/AuthGuard.html":{}}}],["take(1",{"_index":687,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tap",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["tap(resdata",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["teil",{"_index":1561,"title":{},"body":{"components/LobbyComponent.html":{}}}],["teilnehmen",{"_index":1572,"title":{},"body":{"components/LobbyComponent.html":{}}}],["teilnehmer",{"_index":1133,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["templateurl",{"_index":20,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["test",{"_index":1963,"title":{},"body":{"index.html":{}}}],["testing",{"_index":1973,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1962,"title":{},"body":{"index.html":{}}}],["this._changedetectorref.detectchanges",{"_index":1297,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["this._elmref.nativeelement.style.display",{"_index":1291,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["this._loading",{"_index":1450,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["this._token",{"_index":1773,"title":{},"body":{"classes/User.html":{}}}],["this._tokenexpirationdate",{"_index":1772,"title":{},"body":{"classes/User.html":{}}}],["this.accountlevel",{"_index":1774,"title":{},"body":{"classes/User.html":{}}}],["this.activerequests",{"_index":1430,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["this.allcoursessub",{"_index":1528,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.allquizes",{"_index":1524,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.allsearchusers",{"_index":1739,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["this.allusers",{"_index":346,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.allusers.unsubscribe",{"_index":361,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.answerednumber",{"_index":1170,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.answerssub",{"_index":1153,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.auth.logout",{"_index":144,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.auth.user.subscribe(user",{"_index":120,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["this.authservice.autologin",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authservice.login(email",{"_index":654,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.logout",{"_index":1237,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.authservice.signup(firstname",{"_index":655,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.authservice.user.pipe",{"_index":686,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.authservice.user.subscribe(user",{"_index":1231,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.autologout(expirationduration",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.autologout(expiresin",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cancelgamemsg",{"_index":1550,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.categoryservice.find(this.loggedinuser",{"_index":1540,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.checkalldata",{"_index":1149,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.closediasub",{"_index":358,"title":{},"body":{"components/AdminComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.courseservice.all(this.loggedinuser).subscribe(response",{"_index":1529,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.createdquiz",{"_index":1543,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.currentanswers",{"_index":1151,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentcategory",{"_index":1114,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentcategoryid",{"_index":1116,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentcategoryid).subscribe(response",{"_index":1139,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentcorrectanswer",{"_index":1156,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentcorrectanswer.description",{"_index":1167,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentplayerpoints",{"_index":1159,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentquestion",{"_index":1150,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentquestion).subscribe(response",{"_index":1177,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentquestion[\"flagged",{"_index":1175,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentquizid",{"_index":1108,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentsubject",{"_index":1110,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentsubjectid",{"_index":1112,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.currentusergame",{"_index":1519,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.currentusergame.idquiz).subscribe(response",{"_index":1549,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.currentusersub",{"_index":1517,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.data.accountlevel",{"_index":931,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["this.data.category_idcategory",{"_index":314,"title":{},"body":{"components/AddQuestionDialogComponent.html":{}}}],["this.data.description",{"_index":284,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["this.data.id",{"_index":813,"title":{},"body":{"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["this.data.idanswers",{"_index":286,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["this.data.idquestion",{"_index":313,"title":{},"body":{"components/AddQuestionDialogComponent.html":{}}}],["this.data.isactive",{"_index":865,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["this.data.name",{"_index":812,"title":{},"body":{"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["this.data.question_idquestion",{"_index":288,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["this.data.questiondescription",{"_index":312,"title":{},"body":{"components/AddQuestionDialogComponent.html":{}}}],["this.data.shortname",{"_index":864,"title":{},"body":{"components/CourseDialogComponent.html":{}}}],["this.data.subject_idsubject",{"_index":814,"title":{},"body":{"components/CategoryDialogComponent.html":{}}}],["this.data.truth",{"_index":290,"title":{},"body":{"components/AddAnswerDialogComponent.html":{}}}],["this.data.userid).subscribe(updateduser",{"_index":933,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["this.datasource",{"_index":348,"title":{},"body":{"components/AdminComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["this.datasourcecategories",{"_index":1542,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.datasourcecourses",{"_index":1533,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.datasub",{"_index":978,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["this.datasub.unsubscribe",{"_index":981,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["this.dialog.afterallclosed.subscribe(response",{"_index":359,"title":{},"body":{"components/AdminComponent.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.dialog.open(dialogcomponent",{"_index":1179,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.dialog.open(usereditcomponent",{"_index":131,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{}}}],["this.dialogref.close",{"_index":293,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["this.dialogref.close(this.form.value",{"_index":292,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["this.disableanswerbutton",{"_index":1169,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.disablenextquestionbutton",{"_index":1168,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.elementref.nativeelement.focus",{"_index":801,"title":{},"body":{"directives/AutofocusDirective.html":{}}}],["this.endgame",{"_index":1180,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.error",{"_index":659,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.errormessage",{"_index":979,"title":{},"body":{"components/ErrorPageComponent.html":{}}}],["this.fb.group",{"_index":283,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{}}}],["this.focusout.emit(this.data",{"_index":954,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["this.form",{"_index":282,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["this.form.reset",{"_index":660,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.form.valid",{"_index":648,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.form.value.userdata.accountlevel",{"_index":929,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["this.form.value.userdata.email",{"_index":649,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.form.value.userdata.firstname",{"_index":651,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.form.value.userdata.lastname",{"_index":652,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.form.value.userdata.password",{"_index":650,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.handleauthentication",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.historysub",{"_index":124,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.http",{"_index":460,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["this.http.delete(geturlbyid('quiz",{"_index":1729,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.delete(geturlbyid(usedcontroller",{"_index":1828,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(geturl('getranking",{"_index":1757,"title":{},"body":{"injectables/RankingService.html":{}}}],["this.http.get(geturl('quiz",{"_index":1616,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.http.get(geturl(usedcontroller",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(geturlbyid('getgamebyplayer",{"_index":1721,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(geturlbyid('getplayerhistory",{"_index":1730,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(geturlbyid('getuser",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.get(geturlbyid('showanswers",{"_index":1715,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.get(geturlbyidid('getquestions",{"_index":1709,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.patch(geturlbyid('quiz",{"_index":1639,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.http.post(geturl('postresult",{"_index":1724,"title":{},"body":{"injectables/QuizService.html":{}}}],["this.http.post(geturl('quiz",{"_index":1638,"title":{},"body":{"injectables/LobbyService.html":{}}}],["this.http.put(geturlbyid('user",{"_index":1827,"title":{},"body":{"injectables/UserService.html":{}}}],["this.initcategories",{"_index":1538,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.initcourses",{"_index":1518,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.initcurrentuser",{"_index":1527,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.initgame",{"_index":1101,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.initquestionsingame",{"_index":1136,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.inittable",{"_index":345,"title":{},"body":{"components/AdminComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["this.isadmin",{"_index":1233,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isauthenticated",{"_index":1232,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isloginmode",{"_index":633,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.istutor",{"_index":1235,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.joinedquiz",{"_index":1534,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.loadgame",{"_index":1105,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.loading",{"_index":1290,"title":{},"body":{"components/LoadingScreenComponent.html":{},"injectables/LoadingScreenService.html":{}}}],["this.loadingscreenservice.loadingstatus",{"_index":1293,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["this.loadingscreenservice.loadingstatus.pipe",{"_index":1287,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["this.loadingscreenservice.startloading",{"_index":1431,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["this.loadingscreenservice.stoploading",{"_index":1433,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["this.loadingstatus.next(value",{"_index":1453,"title":{},"body":{"injectables/LoadingScreenService.html":{}}}],["this.loadingsubscription",{"_index":1286,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["this.loadingsubscription.unsubscribe",{"_index":1298,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["this.loadlobby",{"_index":1521,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.lobbyservice.createquiz(this.loggedinuser",{"_index":1544,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.lobbyservice.getallopenedgames(this.loggedinuser).subscribe(response",{"_index":1523,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.lobbyservice.joinquiz(this.loggedinuser",{"_index":1535,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.loggedinuser",{"_index":121,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["this.loggedinuser.accountlevel",{"_index":136,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.loggedinuser.iduser",{"_index":1124,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.loggedinuser.iduser).subscribe(response",{"_index":142,"title":{},"body":{"components/AccountComponent.html":{},"components/LobbyComponent.html":{}}}],["this.logout",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.moregamesexists",{"_index":1104,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.nextquestion",{"_index":1143,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.nogameexists",{"_index":1106,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.opendialog(false",{"_index":1164,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.opendialog(true",{"_index":1160,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.openedgamessub",{"_index":1522,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.player1",{"_index":1122,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.player2",{"_index":1126,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.questionnumber",{"_index":1171,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.questions",{"_index":1140,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.questions.length",{"_index":1152,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.questionservice.update(this.loggedinuser",{"_index":1176,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.questionsub",{"_index":1137,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.quizservice.deletegame(this.loggedinuser",{"_index":1548,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.quizservice.getanswers(this.loggedinuser",{"_index":1154,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.quizservice.getgamebyplayer(this.loggedinuser).subscribe(game",{"_index":1102,"title":{},"body":{"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{}}}],["this.quizservice.getplayerhistory(this.loggedinuser).subscribe(response",{"_index":125,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.quizservice.getquestions(this.loggedinuser",{"_index":1138,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.rankingservice.getranking(this.loggedinuser).subscribe(response",{"_index":1740,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["this.route.data.subscribe",{"_index":632,"title":{},"body":{"components/AuthComponent.html":{},"components/ErrorPageComponent.html":{}}}],["this.router.createurltree(['/login",{"_index":689,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/account",{"_index":658,"title":{},"body":{"components/AuthComponent.html":{}}}],["this.router.navigate(['/home",{"_index":145,"title":{},"body":{"components/AccountComponent.html":{}}}],["this.router.navigate(['/login",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.router.navigate(['/ranking",{"_index":1173,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.rungame",{"_index":1148,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.safesrc",{"_index":1254,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.sanitizer.bypasssecuritytrustresourceurl(\"https://www.youtube.com/embed/htmkzdyrv4e",{"_index":1255,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.selectedcategoryid).subscribe(response",{"_index":1546,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.selectedcategorysub",{"_index":1539,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.selectedcourse",{"_index":1537,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.selectedcourse.id",{"_index":1545,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.selectedcourse.id).subscribe(response",{"_index":1541,"title":{},"body":{"components/LobbyComponent.html":{}}}],["this.sentgame",{"_index":1172,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.skippurls",{"_index":1427,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["this.successmsg",{"_index":1178,"title":{},"body":{"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{}}}],["this.tokenexpirationtimer",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.next(loadeduser",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.next(null",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.next(user",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.deleteuser(this.loggedinuser",{"_index":141,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{}}}],["this.userservice.getuse",{"_index":1128,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["this.userservice.getuser(this.loggedinuser",{"_index":932,"title":{},"body":{"interfaces/DialogData.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"components/UserEditComponent.html":{}}}],["this.userservice.getusers(this.loggedinuser).subscribe(response",{"_index":347,"title":{},"body":{"components/AdminComponent.html":{}}}],["this.userservice.updateuser(this.loggedinuser",{"_index":934,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["this.usersub",{"_index":119,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["this.usersub.unsubscribe",{"_index":146,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/HeaderComponent.html":{},"components/UserEditComponent.html":{}}}],["throwerror",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["throwerror(errormessage",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["throwerror(errorres",{"_index":850,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{}}}],["title",{"_index":381,"title":{},"body":{"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/FaqComponent.html":{}}}],["todo",{"_index":126,"title":{},"body":{"components/AccountComponent.html":{},"injectables/QuizService.html":{}}}],["toggle",{"_index":540,"title":{},"body":{"modules/AppModule.html":{}}}],["token",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["tokenexpirationtimer",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["top",{"_index":1309,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["totalpoints",{"_index":1732,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["totalwins",{"_index":1733,"title":{},"body":{"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["transform",{"_index":226,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"components/LoadingScreenComponent.html":{}}}],["transform(value",{"_index":227,"title":{},"body":{"pipes/AccountLevelPipe.html":{}}}],["transformiert",{"_index":229,"title":{},"body":{"pipes/AccountLevelPipe.html":{}}}],["translate",{"_index":1310,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["translate(calc",{"_index":1356,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["translate(calc(330px",{"_index":1361,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["transparent",{"_index":960,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["tritt",{"_index":1191,"title":{},"body":{"components/GameComponent.html":{}}}],["true",{"_index":426,"title":{},"body":{"injectables/AnswerService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/CourseService.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":289,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"interfaces/Answer.html":{},"injectables/QuizService.html":{}}}],["tslib",{"_index":1914,"title":{},"body":{"dependencies.html":{}}}],["tutor",{"_index":234,"title":{},"body":{"pipes/AccountLevelPipe.html":{},"classes/User.html":{}}}],["type",{"_index":49,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"interfaces/Answer.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"interfaces/Category.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"interfaces/Course.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"interfaces/Question.html":{},"components/QuestionDialogComponent.html":{},"interfaces/QuestionList.html":{},"injectables/QuestionsService.html":{},"interfaces/Quiz.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typedoc",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["und",{"_index":72,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{}}}],["unit",{"_index":1961,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["update",{"_index":407,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["update(loggedinuser",{"_index":440,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["updateduser",{"_index":935,"title":{},"body":{"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["updateuser",{"_index":1791,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuser(loggedinuser",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":1870,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["url(#goo",{"_index":1316,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["urls",{"_index":1419,"title":{},"body":{"interceptors/LoadingScreenInterceptor.html":{}}}],["urltree",{"_index":678,"title":{},"body":{"guards/AuthGuard.html":{}}}],["use",{"_index":1953,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":581,"title":{},"body":{"modules/AppModule.html":{}}}],["usedcontroller",{"_index":890,"title":{},"body":{"injectables/CourseService.html":{},"injectables/UserService.html":{}}}],["user",{"_index":95,"title":{"classes/User.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"injectables/RankingService.html":{},"classes/User.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user(iduser",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.accountlevel",{"_index":692,"title":{},"body":{"guards/AuthGuard.html":{}}}],["user.accountlevel_idaccountlevel",{"_index":1817,"title":{},"body":{"injectables/UserService.html":{}}}],["user.email",{"_index":1816,"title":{},"body":{"injectables/UserService.html":{}}}],["user.firstname",{"_index":1814,"title":{},"body":{"injectables/UserService.html":{}}}],["user.iduser",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{}}}],["user.isadmin",{"_index":1234,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.istutor",{"_index":1236,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.lastname",{"_index":1815,"title":{},"body":{"injectables/UserService.html":{}}}],["user[\"accountlevel",{"_index":1824,"title":{},"body":{"injectables/UserService.html":{}}}],["user[\"accountlevel_idaccountlevel",{"_index":1825,"title":{},"body":{"injectables/UserService.html":{}}}],["user_iduser",{"_index":1725,"title":{},"body":{"injectables/QuizService.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{}}}],["userdata",{"_index":636,"title":{},"body":{"components/AuthComponent.html":{},"injectables/AuthService.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{}}}],["userdata._token",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.accountlevel",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.email",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.firstname",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.iduser",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdata.lastname",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["usereditcomponent",{"_index":107,"title":{"components/UserEditComponent.html":{}},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":350,"title":{},"body":{"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{}}}],["username",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["userrole",{"_index":691,"title":{},"body":{"guards/AuthGuard.html":{}}}],["users",{"_index":332,"title":{"interfaces/Users.html":{}},"body":{"components/AdminComponent.html":{},"injectables/UserService.html":{},"interfaces/Users.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["usersarray",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{}}}],["usersarray.push",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":40,"title":{"injectables/UserService.html":{}},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/UserEditComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["usersub",{"_index":30,"title":{},"body":{"components/AccountComponent.html":{},"components/AdminComponent.html":{},"interfaces/DialogData.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Player2.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["valid",{"_index":665,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators",{"_index":628,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.email",{"_index":639,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.minlength(6",{"_index":647,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.pattern(\"^[a",{"_index":640,"title":{},"body":{"components/AuthComponent.html":{}}}],["validators.required",{"_index":638,"title":{},"body":{"components/AuthComponent.html":{}}}],["value",{"_index":87,"title":{},"body":{"components/AccountComponent.html":{},"pipes/AccountLevelPipe.html":{},"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"interceptors/LoadingScreenInterceptor.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":174,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/FaqComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["variable",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1992,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verlassen",{"_index":947,"title":{},"body":{"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["version",{"_index":1938,"title":{},"body":{"index.html":{}}}],["verwaltung",{"_index":458,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["via",{"_index":1965,"title":{},"body":{"index.html":{}}}],["void",{"_index":54,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/AdminComponent.html":{},"components/AppComponent.html":{},"components/AuthComponent.html":{},"injectables/AuthService.html":{},"directives/AutofocusDirective.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/DialogComponent.html":{},"interfaces/DialogData.html":{},"components/EditAnswerDialogComponent.html":{},"components/ErrorPageComponent.html":{},"components/GameComponent.html":{},"components/HeaderComponent.html":{},"components/LoadingScreenComponent.html":{},"injectables/LoadingScreenService.html":{},"components/LobbyComponent.html":{},"interfaces/Player2.html":{},"components/QuestionDialogComponent.html":{},"interfaces/Ranking.html":{},"components/RankingComponent.html":{},"components/UserEditComponent.html":{}}}],["vom",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["von",{"_index":275,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/GameComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/UserService.html":{}}}],["vorgang",{"_index":277,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"injectables/AnswerService.html":{},"components/CategoryDialogComponent.html":{},"injectables/CategoryService.html":{},"components/CourseDialogComponent.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{},"injectables/QuestionsService.html":{}}}],["vorhanden",{"_index":1146,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["vorname",{"_index":362,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AuthService.html":{},"components/RankingComponent.html":{}}}],["weiter",{"_index":1163,"title":{},"body":{"components/GameComponent.html":{},"interfaces/Player2.html":{}}}],["welche",{"_index":432,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/QuestionsService.html":{}}}],["welchen",{"_index":1664,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["welcher",{"_index":823,"title":{},"body":{"injectables/CategoryService.html":{}}}],["wenn",{"_index":680,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CourseService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["wer",{"_index":989,"title":{},"body":{"components/FaqComponent.html":{}}}],["werden",{"_index":357,"title":{},"body":{"components/AdminComponent.html":{},"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"components/GameComponent.html":{},"interfaces/Player2.html":{},"injectables/QuestionsService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["werdne",{"_index":1667,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["width",{"_index":132,"title":{},"body":{"components/AccountComponent.html":{},"components/AddAnswerDialogComponent.html":{},"components/AdminComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/LoadingScreenComponent.html":{},"components/LobbyComponent.html":{},"components/QuestionDialogComponent.html":{}}}],["wie",{"_index":997,"title":{},"body":{"components/FaqComponent.html":{}}}],["winner",{"_index":1728,"title":{},"body":{"injectables/QuizService.html":{}}}],["wird",{"_index":68,"title":{},"body":{"components/AccountComponent.html":{},"injectables/CourseService.html":{},"components/EditAnswerDialogComponent.html":{},"components/QuestionDialogComponent.html":{},"injectables/UserService.html":{}}}],["wrapper",{"_index":1299,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["wurde",{"_index":354,"title":{},"body":{"components/AdminComponent.html":{},"components/GameComponent.html":{},"injectables/LobbyService.html":{}}}],["wähle",{"_index":1564,"title":{},"body":{"components/LobbyComponent.html":{}}}],["xxxxxxx",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["xxxxxxxxx",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["xxxxxxxxxx",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{}}}],["xxxxxxxxxxx",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["z",{"_index":1300,"title":{},"body":{"components/LoadingScreenComponent.html":{}}}],["z0",{"_index":642,"title":{},"body":{"components/AuthComponent.html":{}}}],["za",{"_index":641,"title":{},"body":{"components/AuthComponent.html":{}}}],["zeigt",{"_index":878,"title":{},"body":{"injectables/CourseService.html":{}}}],["zeit",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["zone.js",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zu",{"_index":1675,"title":{},"body":{"injectables/QuestionsService.html":{}}}],["zum",{"_index":272,"title":{},"body":{"components/AddAnswerDialogComponent.html":{},"components/AddQuestionDialogComponent.html":{},"components/CategoryDialogComponent.html":{},"components/CourseDialogComponent.html":{},"components/EditAnswerDialogComponent.html":{},"components/FaqComponent.html":{},"components/LobbyComponent.html":{},"injectables/LobbyService.html":{},"components/QuestionDialogComponent.html":{},"injectables/RankingService.html":{},"injectables/UserService.html":{}}}],["zur",{"_index":457,"title":{},"body":{"injectables/AnswerService.html":{},"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["zurück",{"_index":831,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/CourseService.html":{},"injectables/QuestionsService.html":{}}}],["zurückgegeben",{"_index":824,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/QuestionsService.html":{}}}],["zusammen",{"_index":1925,"title":{},"body":{"miscellaneous/functions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AccountComponent.html":{"url":"components/AccountComponent.html","title":"component - AccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/account/account.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-account\n            \n\n            \n                styleUrls\n                ./account.component.css\n            \n\n\n\n            \n                templateUrl\n                ./account.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                historySub\n                            \n                            \n                                loggedInUser\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTable\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDeleteAccount\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, userService: UserService, router: Router, dialog: MatDialog, quizService: QuizService)\n                    \n                \n                        \n                            \n                                Defined in src/app/account/account.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initTable\n                        \n                    \n                \n            \n            \n                \ninitTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:86\n                \n            \n\n\n            \n                \n                    Beendet alle Subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:36\n                \n            \n\n\n            \n                \n                    Initialisiert den aktuellen Benutzer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeleteAccount\n                        \n                    \n                \n            \n            \n                \nonDeleteAccount()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:69\n                \n            \n\n\n            \n                \n                    Nach der Bestätigung wird der Nutzer gelöscht, ausgeloggt und auf die Startseite navigiert.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/account/account.component.ts:58\n                \n            \n\n\n            \n                \n                    Öffnet ein Dialogfenster mit den aktuellen Nutzerdaten.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                    \n                        \n                                Defined in src/app/account/account.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/account/account.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['date', 'player1', 'result', 'player2']\n                    \n                \n                    \n                        \n                                Defined in src/app/account/account.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        historySub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/account/account.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/account/account.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/account/account.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/model/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { QuizService } from '../shared/services/quiz.service';\nimport { UserService } from '../shared/services/user.service';\nimport { UserEditComponent } from '../user-edit/user-edit.component';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.css']\n})\n\n/**\n * Diese Komponente implementiert die aktuelle Nutzeransicht.\n */\nexport class AccountComponent implements OnInit, OnDestroy {\n\n  loggedInUser: User = null;\n  userSub: Subscription = null;\n\n  historySub: Subscription = null;\n\n  dataSource: [];\n  displayedColumns: string[] = ['date', 'player1', 'result', 'player2'];\n\n  constructor(private auth: AuthService, private userService: UserService, private router: Router, public dialog: MatDialog, private quizService: QuizService) { }\n\n\n  /**\n   * Initialisiert den aktuellen Benutzer.\n   */\n  ngOnInit(): void {\n    this.userSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      })\n  }\n\n  initTable() {\n    this.historySub = this.quizService.getPlayerHistory(this.loggedInUser).subscribe(response => {\n      // TODO: not done yet\n      // dataSource = response;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  /**\n   * Öffnet ein Dialogfenster mit den aktuellen Nutzerdaten.\n   */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(UserEditComponent, {\n      width: '350px',\n      data: { accountLevel: this.loggedInUser.accountLevel },\n    });\n  }\n\n\n  /**\n   * Nach der Bestätigung wird der Nutzer gelöscht, ausgeloggt und auf die Startseite navigiert.\n   */\n  onDeleteAccount() {\n    if (confirm('Möchtest du sicher den Account löschen?')) {\n      this.userService.deleteUser(this.loggedInUser, this.loggedInUser.idUser).subscribe(response => {\n        console.log(response);\n        this.auth.logout();\n        this.router.navigate(['/home']);\n      },\n        errorMessage => {\n          console.log(errorMessage);\n        });\n    }\n\n  }\n\n  /**\n  * Beendet alle Subscriptions.\n  */\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n  }\n\n\n\n\n}\n\n    \n\n    \n        \n    \n        {{loggedInUser.firstName}} {{loggedInUser.lastName}}\n        {{loggedInUser.accountLevel | accountLevelPipe}}\n    \n    \n          {{loggedInUser.email}}\n    \n    \n        \n            edit\n        \n        \n            delete\n        \n        Benutzerverwaltung\n    \n\n\n\n    \n         Datum \n         01.01.2022 \n    \n\n    \n         Spieler 1 \n         Kevin \n    \n\n    \n         Ergebnis\n         50 - 10 \n    \n\n    \n         Spieler 2 \n         Max \n    \n\n    \n    \n\n    \n\n    \n                \n                    ./account.component.css\n                \n                mat-card {\n    width: calc(100% - 10px);\n   height: calc(100% - 10px); \n }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{loggedInUser.firstName}} {{loggedInUser.lastName}}        {{loggedInUser.accountLevel | accountLevelPipe}}                  {{loggedInUser.email}}                            edit                            delete                Benutzerverwaltung                 Datum          01.01.2022                  Spieler 1          Kevin                  Ergebnis         50 - 10                  Spieler 2          Max             '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/AccountLevelPipe.html":{"url":"pipes/AccountLevelPipe.html","title":"pipe - AccountLevelPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  AccountLevelPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipe/account-level.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        accountLevelPipe\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/pipe/account-level.pipe.ts:17\n                \n            \n\n\n            \n                \n                    Transformiert das Account Level auf den Status\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account Level\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     \"Tutor\" | \"Admin\" | \"Student\"\n\n                    \n                    \n                        Status\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'accountLevelPipe'\n})\n\n/**\n * Diese Komponente implementiert die AccountLevelPipe.\n */\nexport class AccountLevelPipe implements PipeTransform {\n\n  /**\n   * Transformiert das Account Level auf den Status\n   * @param value Account Level\n   * @returns Status\n   */\n  transform(value: any) {\n    if (value == 4)\n      return 'Tutor';\n    if (value == 5)\n      return 'Admin';\n    return 'Student';\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddAnswerDialogComponent.html":{"url":"components/AddAnswerDialogComponent.html","title":"component - AddAnswerDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddAnswerDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/add-answer-dialog/add-answer-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-answer-dialog\n            \n\n            \n                styleUrls\n                ./add-answer-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-answer-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef, data: Answer)\n                    \n                \n                        \n                            \n                                Defined in src/app/questions/add-answer-dialog/add-answer-dialog.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Answer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/add-answer-dialog/add-answer-dialog.component.ts:50\n                \n            \n\n\n            \n                \n                    Schliesst den Dialog ohne Änderungen\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/add-answer-dialog/add-answer-dialog.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/add-answer-dialog/add-answer-dialog.component.ts:41\n                \n            \n\n\n            \n                \n                    Speichert das Formular und schliesst den Dialog\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/questions/add-answer-dialog/add-answer-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/add-answer-dialog/add-answer-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Answer } from 'src/app/shared/model/answer.model';\n\n@Component({\n  selector: 'app-add-answer-dialog',\n  templateUrl: './add-answer-dialog.component.html',\n  styleUrls: ['./add-answer-dialog.component.css'],\n})\n/**\n * Klasse zum editieren und Hinzufügen von Antworten\n *\n * @Vorgang: BI-016, BI-017\n *\n * {@link QuestionsComponent}\n */\nexport class AddAnswerDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: Answer\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      Description: [this.data.Description, []],\n      idAnswers: [this.data.idAnswers, []],\n      Question_idQuestion: [this.data.Question_idQuestion, []],\n      Truth: [this.data.Truth, []],\n    });\n  }\n\n  /**\n   * Speichert das Formular und schliesst den Dialog\n   * @Vorgang BI-015\n   * @returns null\n   */\n  save() {\n    this.dialogRef.close(this.form.value);\n  }\n\n  /**\n   * Schliesst den Dialog ohne Änderungen\n   * @Vorgang BI-015\n   * @returns null\n   */\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Antwort Hinzufügen\n\n\n  \n    \n  \n\n\n\n  Close\n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./add-answer-dialog.component.css\n                \n                .answer-form {\n  min-width: 500px;\n  max-width: 800px;\n  min-height: 500px;\n  max-height: 800px;\n  width: 100%;\n  height: 100%;\n}\n\n.answer-full-width {\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Antwort Hinzufügen          Close      Save  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddAnswerDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddQuestionDialogComponent.html":{"url":"components/AddQuestionDialogComponent.html","title":"component - AddQuestionDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddQuestionDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/add-question-dialog/add-question-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-add-question-dialog\n            \n\n            \n                styleUrls\n                ./add-question-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./add-question-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                category_idcategory\n                            \n                            \n                                    Public\n                                data\n                            \n                            \n                                form\n                            \n                            \n                                idQuestion\n                            \n                            \n                                QuestionDescription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef, data: Question)\n                    \n                \n                        \n                            \n                                Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Question\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:52\n                \n            \n\n\n            \n                \n                    Schliesst den Dialog ohne Änderungen\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:43\n                \n            \n\n\n            \n                \n                    Speichert das Formular und schliesst den Dialog\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        category_idcategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        QuestionDescription\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/add-question-dialog/add-question-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { Question } from '../../shared/model/question.model';\n\n@Component({\n  selector: 'app-add-question-dialog',\n  templateUrl: './add-question-dialog.component.html',\n  styleUrls: ['./add-question-dialog.component.css'],\n})\n/**\n * Klasse zum editieren und Hinzufügen von Fragen\n *\n * @Vorgang: BI-016, BI-017\n *\n * {@link QuestionsComponent}\n */\nexport class AddQuestionDialogComponent implements OnInit {\n  form: FormGroup;\n  QuestionDescription: string;\n  idQuestion: number;\n  category_idcategory: number;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: Question\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      QuestionDescription: [this.data.QuestionDescription, []],\n      idQuestion: [this.data.idQuestion, []],\n      category_idcategory: [this.data.category_idcategory, []],\n    });\n  }\n\n  /**\n   * Speichert das Formular und schliesst den Dialog\n   * @Vorgang BI-015\n   * @returns null\n   */\n  save() {\n    this.dialogRef.close(this.form.value);\n  }\n\n  /**\n   * Schliesst den Dialog ohne Änderungen\n   * @Vorgang BI-015\n   * @returns null\n   */\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        Frage Hinzufügen\n\n\n  \n    \n  \n\n\n\n  Close\n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./add-question-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Frage Hinzufügen          Close      Save  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddQuestionDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminComponent.html":{"url":"components/AdminComponent.html","title":"component - AdminComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/admin/admin.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin\n            \n\n            \n                styleUrls\n                ./admin.component.css\n            \n\n\n\n            \n                templateUrl\n                ./admin.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allUsers\n                            \n                            \n                                closeDiaSub\n                            \n                            \n                                dataSource\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                loggedInUser\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTable\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                openDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, userService: UserService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/admin/admin.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initTable\n                        \n                    \n                \n            \n            \n                \ninitTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:88\n                \n            \n\n\n            \n                \n                    Beendet alle Subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:37\n                \n            \n\n\n            \n                \n                    Initialisiert den aktuellen Benutzer.\nInitialisiert die Benutzerverwaltungs-Tabelle.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(element: Users)\n                \n            \n\n\n            \n                \n                    Defined in src/app/admin/admin.component.ts:58\n                \n            \n\n\n            \n                \n                    Öffnet ein Dialogfenster mit den aktuellen Nutzerdaten.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                                Users\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDiaSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Users[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['firstName', 'lastName', 'email', 'accountLevel', 'actions']\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/admin/admin.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/model/user.model';\nimport { Users } from '../shared/model/users.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UserService } from '../shared/services/user.service';\nimport { UserEditComponent } from '../user-edit/user-edit.component';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\n\n/**\n *  Diese Komponente implementiert die Benutzerverwaltung.\n */\nexport class AdminComponent implements OnInit, OnDestroy {\n  displayedColumns: string[] = ['firstName', 'lastName', 'email', 'accountLevel', 'actions'];\n\n  loggedInUser: User = null;\n  userSub: Subscription = null;\n  allUsers: Subscription = null;\n\n  closeDiaSub: Subscription = null;\n\n  dataSource: Users[] = [];\n\n\n  constructor(private auth: AuthService, private userService: UserService, public dialog: MatDialog) { }\n\n  /**\n   * Initialisiert den aktuellen Benutzer.\n   * Initialisiert die Benutzerverwaltungs-Tabelle.\n   */\n  ngOnInit(): void {\n    this.userSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    });\n\n    this.initTable();\n  }\n\n  initTable() {\n    this.allUsers = this.userService.getUsers(this.loggedInUser).subscribe(response => {\n      this.dataSource = response;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n\n  /**\n  * Öffnet ein Dialogfenster mit den aktuellen Nutzerdaten.\n  */\n  openDialog(element: Users): void {\n    const dialogRef = this.dialog.open(UserEditComponent, {\n      width: '350px',\n      data: { accountLevel: element.accountLevel, userId: element.id },\n    });\n\n    // Sobald der Dialog geschlossen wurde, muss die Tabelle aktualisert werden.\n    this.closeDiaSub = this.dialog.afterAllClosed.subscribe(response => {\n      this.initTable();\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  onDelete(id: number) {\n    if (confirm('Möchtest du sicher den Account löschen?')) {\n      this.userService.deleteUser(this.loggedInUser, id).subscribe(response => {\n        this.initTable();\n      },\n        errorMessage => {\n          console.log(errorMessage);\n        });\n    }\n\n  }\n\n  /**\n    * Beendet alle Subscriptions.\n    */\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n    this.allUsers.unsubscribe();\n  }\n\n\n\n}\n\n    \n\n    \n        \n    \n    \n         Vorname \n         {{element.firstName}} \n    \n\n    \n    \n         Nachname \n         {{element.lastName}} \n    \n\n    \n    \n         E-Mail \n         {{element.email}} \n    \n\n    \n    \n         Status \n         {{element.accountLevel | accountLevelPipe}} \n    \n\n\n    \n         Aktionen \n        \n            \n                edit\n            \n            \n                delete\n            \n        \n    \n\n    \n    \n\n    \n\n    \n                \n                    ./admin.component.css\n                \n                .example-action-buttons {\n    padding-bottom: 20px;\n  }\n  \n  .example-headers-align .mat-expansion-panel-header-title,\n  .example-headers-align .mat-expansion-panel-header-description {\n    flex-basis: 0;\n  }\n  \n  .example-headers-align .mat-expansion-panel-header-description {\n    justify-content: space-between;\n    align-items: center;\n  }\n  \n  .example-headers-align .mat-form-field + .mat-form-field {\n    margin-left: 8px;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 Vorname          {{element.firstName}}                      Nachname          {{element.lastName}}                      E-Mail          {{element.email}}                      Status          {{element.accountLevel | accountLevelPipe}}                  Aktionen                                     edit                                        delete                                '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Answer.html":{"url":"interfaces/Answer.html","title":"interface - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/answer.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Dieses Klasse repräsentiert das Model Frage.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Description\n                                        \n                                \n                                \n                                        \n                                            idAnswers\n                                        \n                                \n                                \n                                        \n                                            Question_idQuestion\n                                        \n                                \n                                \n                                        \n                                            Truth\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idAnswers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idAnswers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Question_idQuestion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Question_idQuestion:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Truth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Truth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Answer {\n  idAnswers: number;\n  Question_idQuestion: number;\n  Description: string;\n  Truth: number;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnswerService.html":{"url":"injectables/AnswerService.html","title":"injectable - AnswerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AnswerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/answer.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkUniqueAnswer\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/answer.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkUniqueAnswer\n                        \n                    \n                \n            \n            \n                \ncheckUniqueAnswer(loggedInUser: User, questionID: number, answerID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/answer.service.ts:82\n                \n            \n\n\n            \n                \n                    Prüft ob für die Frage breits eine Antwort als richtig deklariert ist.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    questionID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    answerID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        true or false\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(loggedInUser: User, answer: Answer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/answer.service.ts:36\n                \n            \n\n\n            \n                \n                    erstellt eine Antwort.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    answer\n                                    \n                                                Answer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Modell der Antwort welche erstellt werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(loggedInUser: User, answerId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/answer.service.ts:66\n                \n            \n\n\n            \n                \n                    Löscht eine Antwort.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    answerId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die Antwort welche gelöscht werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(loggedInUser: User, answer: Answer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/answer.service.ts:51\n                \n            \n\n\n            \n                \n                    aktualisiert eine Antwort.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    answer\n                                    \n                                                Answer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Modell der Antwort welche aktualisiert werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'answer'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/answer.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { User } from '../model/user.model';\nimport { Answer } from '../model/answer.model';\nimport { AuthService } from './auth.service';\nimport {\n  setAuthHeader,\n  getUrl,\n  getUrlById,\n  handleError,\n  getUrlByIdId,\n} from '../helpers';\n\n@Injectable({\n  providedIn: 'root',\n})\n\n/**\n * Klasse zur Verwaltung der Antworten\n *\n * @Vorgang: BI-016, BI-017, BI-018\n */\nexport class AnswerService {\n  private model = 'answer';\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  /**\n   * erstellt eine Antwort.\n   * @param loggedInUser eingeloggter User\n   * @param answer Modell der Antwort welche erstellt werden soll.\n   * @Vorgang BI-016, BI-017\n   * @returns Http 201 oder Http 400\n   */\n  create(loggedInUser: User, answer: Answer) {\n    return this.http\n      .post(getUrl(this.model), answer, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * aktualisiert eine Antwort.\n   * @param loggedInUser eingeloggter User\n   * @param answer Modell der Antwort welche aktualisiert werden soll.\n   * @Vorgang BI-016, BI-017\n   * @returns Http 201 oder Http 400\n   */\n  update(loggedInUser: User, answer: Answer) {\n    return this.http\n      .put(getUrlById(this.model, answer.idAnswers), answer, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Löscht eine Antwort.\n   * @param loggedInUser eingeloggter User\n   * @param answerId Die Antwort welche gelöscht werden soll.\n   * @Vorgang BI-016, BI-017\n   * @returns Http 201 oder Http 400\n   */\n  delete(loggedInUser: User, answerId: number) {\n    return this.http\n      .delete(getUrlById(this.model, answerId), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Prüft ob für die Frage breits eine Antwort als richtig deklariert ist.\n   * @param loggedInUser eingeloggter User\n   * @param questionId Die zur Antwort gehörende Frage.\n   * @param answerId Die Antwort welche gelöscht werden soll.\n   * @Vorgang BI-016, BI-017\n   * @returns true or false\n   */\n  checkUniqueAnswer(loggedInUser: User, questionID: number, answerID: number) {\n    return this.http\n      .get(getUrlByIdId('answerunique', questionID, answerID), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:22\n                \n            \n\n\n            \n                \n                    Initialisiert den Benutzer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ng-quiz'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './shared/services/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\n\n/**\n * Diese Komponente implementiert die App\n */\nexport class AppComponent implements OnInit {\n  title = 'ng-quiz';\n\n  constructor(private authService: AuthService) { }\n\n  /**\n   * Initialisiert den Benutzer.\n   */\n  ngOnInit() {\n    this.authService.autoLogin();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAccountLevelPipe\n\nAccountLevelPipe\n\nAppModule -->\n\nAccountLevelPipe->AppModule\n\n\n\n\n\nAddAnswerDialogComponent\n\nAddAnswerDialogComponent\n\nAppModule -->\n\nAddAnswerDialogComponent->AppModule\n\n\n\n\n\nAddQuestionDialogComponent\n\nAddQuestionDialogComponent\n\nAppModule -->\n\nAddQuestionDialogComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nAutofocusDirective\n\nAutofocusDirective\n\nAppModule -->\n\nAutofocusDirective->AppModule\n\n\n\n\n\nCategoryDialogComponent\n\nCategoryDialogComponent\n\nAppModule -->\n\nCategoryDialogComponent->AppModule\n\n\n\n\n\nCourseDialogComponent\n\nCourseDialogComponent\n\nAppModule -->\n\nCourseDialogComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nEditAnswerDialogComponent\n\nEditAnswerDialogComponent\n\nAppModule -->\n\nEditAnswerDialogComponent->AppModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nAppModule -->\n\nErrorPageComponent->AppModule\n\n\n\n\n\nFaqComponent\n\nFaqComponent\n\nAppModule -->\n\nFaqComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingScreenComponent\n\nLoadingScreenComponent\n\nAppModule -->\n\nLoadingScreenComponent->AppModule\n\n\n\n\n\nLobbyComponent\n\nLobbyComponent\n\nAppModule -->\n\nLobbyComponent->AppModule\n\n\n\n\n\nQuestionDialogComponent\n\nQuestionDialogComponent\n\nAppModule -->\n\nQuestionDialogComponent->AppModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nAppModule -->\n\nQuestionsComponent->AppModule\n\n\n\n\n\nRankingComponent\n\nRankingComponent\n\nAppModule -->\n\nRankingComponent->AppModule\n\n\n\n\n\nUserEditComponent\n\nUserEditComponent\n\nAppModule -->\n\nUserEditComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoadingScreenInterceptor\n\nLoadingScreenInterceptor\n\nAppModule -->\n\nLoadingScreenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccountComponent\n                        \n                        \n                            AccountLevelPipe\n                        \n                        \n                            AddAnswerDialogComponent\n                        \n                        \n                            AddQuestionDialogComponent\n                        \n                        \n                            AdminComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            AuthComponent\n                        \n                        \n                            AutofocusDirective\n                        \n                        \n                            CategoryDialogComponent\n                        \n                        \n                            CourseDialogComponent\n                        \n                        \n                            DialogComponent\n                        \n                        \n                            EditAnswerDialogComponent\n                        \n                        \n                            ErrorPageComponent\n                        \n                        \n                            FaqComponent\n                        \n                        \n                            GameComponent\n                        \n                        \n                            HeaderComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            LoadingScreenComponent\n                        \n                        \n                            LobbyComponent\n                        \n                        \n                            QuestionDialogComponent\n                        \n                        \n                            QuestionsComponent\n                        \n                        \n                            RankingComponent\n                        \n                        \n                            UserEditComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoadingScreenInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './app-routing.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatBadgeModule } from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { HomeComponent } from './home/home.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { FaqComponent } from './faq/faq.component';\nimport { RankingComponent } from './ranking/ranking.component';\nimport { AccountComponent } from './account/account.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { UserEditComponent } from './user-edit/user-edit.component';\nimport { AccountLevelPipe } from './shared/pipe/account-level.pipe';\nimport { LobbyComponent } from './lobby/lobby.component';\nimport { GameComponent } from './game/game.component';\n\nimport { QuestionsComponent } from './questions/questions.component';\nimport { QuestionDialogComponent } from './questions/question-dialog/question-dialog.component';\nimport { AutofocusDirective } from './autofocus.directive';\nimport { AddQuestionDialogComponent } from './questions/add-question-dialog/add-question-dialog.component';\nimport { AddAnswerDialogComponent } from './questions/add-answer-dialog/add-answer-dialog.component';\nimport { EditAnswerDialogComponent } from './questions/edit-answer-dialog/edit-answer-dialog.component';\nimport { LoadingScreenComponent } from './loading-screen/loading-screen.component';\n\nimport { LoadingScreenInterceptor } from './shared/helpers/loading.interceptors';\nimport { CourseDialogComponent } from './questions/course-dialog/course-dialog.component';\nimport { CategoryDialogComponent } from './questions/category-dialog/category-dialog.component';\nimport { DialogComponent } from './game/dialog/dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    HomeComponent,\n    ErrorPageComponent,\n    FaqComponent,\n    RankingComponent,\n    AccountComponent,\n    AuthComponent,\n    AdminComponent,\n    UserEditComponent,\n    AccountLevelPipe,\n    LobbyComponent,\n    GameComponent,\n    CategoryDialogComponent,\n    QuestionsComponent,\n    QuestionDialogComponent,\n    AutofocusDirective,\n    AddQuestionDialogComponent,\n    AddAnswerDialogComponent,\n    EditAnswerDialogComponent,\n    LoadingScreenComponent,\n    CourseDialogComponent,\n    DialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    MatListModule,\n    FormsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatTabsModule,\n    MatCardModule,\n    MatButtonModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatDialogModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatGridListModule,\n    MatSlideToggleModule,\n    MatTooltipModule,\n    MatProgressSpinnerModule,\n    MatSidenavModule,\n    MatBadgeModule,\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: LoadingScreenInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AccountComponent } from './account/account.component';\nimport { AdminComponent } from './admin/admin.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { ErrorPageComponent } from './error-page/error-page.component';\nimport { FaqComponent } from './faq/faq.component';\nimport { GameComponent } from './game/game.component';\nimport { HomeComponent } from './home/home.component';\nimport { LobbyComponent } from './lobby/lobby.component';\nimport { QuestionsComponent } from './questions/questions.component';\nimport { RankingComponent } from './ranking/ranking.component';\nimport { AuthGuard } from './shared/auth.guard';\n\nconst ADMIN = 5;\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: 'home', component: HomeComponent },\n  { path: 'register', component: AuthComponent, data: { isLoginMode: false } },\n  { path: 'login', component: AuthComponent, data: { isLoginMode: true } },\n  { path: 'faq', component: FaqComponent },\n  { path: 'lobby', component: LobbyComponent, canActivate: [AuthGuard] },\n  { path: 'game', component: GameComponent, canActivate: [AuthGuard] },\n  { path: 'ranking', component: RankingComponent, canActivate: [AuthGuard] },\n  { path: 'account', component: AccountComponent, canActivate: [AuthGuard] },\n  { path: 'questions', component: QuestionsComponent, canActivate: [AuthGuard] },\n  { path: 'questions/:id', component: QuestionsComponent, canActivate: [AuthGuard] },\n  { path: 'admin', component: AdminComponent, canActivate: [AuthGuard], data: { role: ADMIN } },\n  { path: 'not-found', component: ErrorPageComponent, data: { message: 'Page not found!' } },\n  { path: '**', redirectTo: '/not-found' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AuthComponent.html":{"url":"components/AuthComponent.html","title":"component - AuthComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AuthComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/auth/auth.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-auth\n            \n\n            \n                styleUrls\n                ./auth.component.css\n            \n\n\n\n            \n                templateUrl\n                ./auth.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                errorMessage\n                            \n                            \n                                form\n                            \n                            \n                                isLoginMode\n                            \n                            \n                                isSignUpFailed\n                            \n                            \n                                isSuccessful\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/auth/auth.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:30\n                \n            \n\n\n            \n                \n                    Initialisiert das Formular.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/auth/auth.component.ts:50\n                \n            \n\n\n            \n                \n                    Sendet Formulardaten an den AuthService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoginMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSignUpFailed\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSuccessful\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/auth/auth.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Data, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\n\n/**\n * Diese Komponente implementiert Registrierung und Anmeldung.\n */\nexport class AuthComponent implements OnInit {\n\n  isLoginMode = false;\n  form: FormGroup;\n  isSuccessful = false;\n  isSignUpFailed = false;\n  errorMessage = '';\n  error: string = null;\n\n  constructor(private authService: AuthService, private router: Router, private route: ActivatedRoute) { }\n\n  /**\n  * Initialisiert das Formular.\n  */\n  ngOnInit(): void {\n    this.route.data.subscribe(\n      (data: Data) => {\n        this.isLoginMode = data['isLoginMode'];\n      }\n    );\n\n    this.form = new FormGroup({\n      'userData': new FormGroup({\n        'firstname': new FormControl(null),\n        'lastname': new FormControl(null),\n        'email': new FormControl(null, [Validators.required, Validators.email, Validators.pattern(\"^[A-Za-z0-9._%+-]+@iubh-fernstudium.de$\")]),\n        'password': new FormControl(null, [Validators.required, Validators.minLength(6)])\n      })\n    });\n  }\n\n  /**\n   * Sendet Formulardaten an den AuthService. \n   */\n  onSubmit() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    const email = this.form.value.userData.email;\n    const password = this.form.value.userData.password;\n    const firstname = this.form.value.userData.firstname;\n    const lastname = this.form.value.userData.lastname;\n\n    let authObs: Observable;\n\n    if (this.isLoginMode) {\n      authObs = this.authService.login(email, password);\n    } else {\n      authObs = this.authService.signup(firstname, lastname, email, password);\n    }\n\n    authObs.subscribe(\n      resData => {\n        this.isLoginMode = true;\n        this.router.navigate(['/account']);\n      },\n      errorMessage => {\n        console.log(errorMessage);\n        this.error = errorMessage;\n      }\n    );\n\n    this.form.reset();\n\n  }\n}\n\n    \n\n    \n        \n{{isLoginMode ? 'Anmeldung' : 'Registrierung'}}\n\n    \n        \n            \n        \n        \n            \n        \n        \n            \n        \n        \n            \n        \n    \n    {{isLoginMode ? 'Anmelden'\n        : 'Registrieren'}}\n    Please\n        enter a valid\n        E-Mail!\n\n\n{{error}}\n    \n\n    \n                \n                    ./auth.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{isLoginMode ? \\'Anmeldung\\' : \\'Registrierung\\'}}                                                                                                                            {{isLoginMode ? \\'Anmelden\\'        : \\'Registrieren\\'}}    Please        enter a valid        E-Mail!{{error}}'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'AuthComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/shared/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/auth.guard.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, router: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/auth.guard.ts:27\n                \n            \n\n\n            \n                \n                    Prüft ob der Nutzer diese Route nutzen darf.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ActivatedRouteSnapshot\n\n                                    \n                                \n                                \n                                    router\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        RouterStateSnapshot\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     boolean | UrlTree | Promise | Observable\n\n                    \n                    \n                        true: wenn Nutzer diese Route benutzen darf; false: wenn nicht\n\n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  Router,\n  UrlTree\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\n\nimport { AuthService } from './services/auth.service';\n\n@Injectable({ providedIn: 'root' })\n/**\n * Diese Komponente implementiert den AuthGuard. \n */\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router) { }\n\n  /**\n   * Prüft ob der Nutzer diese Route nutzen darf.\n   * @param route ActivatedRouteSnapshot\n   * @param router RouterStateSnapshot\n   * @returns true: wenn Nutzer diese Route benutzen darf; false: wenn nicht\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    router: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Promise\n    | Observable {\n    return this.authService.user.pipe(\n      take(1),\n      map(user => {\n\n        if (user == null)\n          return this.router.createUrlTree(['/login']);\n\n\n        const isAuth = !!user;\n        const userRole = user.accountLevel;\n\n        if (route.data.role && route.data.role != userRole) {\n          return false;\n        }\n\n        if (isAuth) {\n          return true;\n        }\n\n        return this.router.createUrlTree(['/login']);\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                tokenExpirationTimer\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                autoLogin\n                            \n                            \n                                autoLogout\n                            \n                            \n                                    Private\n                                handleAuthentication\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/auth.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        autoLogin\n                        \n                    \n                \n            \n            \n                \nautoLogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:79\n                \n            \n\n\n            \n                \n                    Aktualisiert den Login.\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        xxxxxxxxxx\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        autoLogout\n                        \n                    \n                \n            \n            \n                \nautoLogout(expirationDuration: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:131\n                \n            \n\n\n            \n                \n                    Meldet den Benutzer ab, wenn die Zeit abgelaufen ist.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    expirationDuration\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleAuthentication\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleAuthentication(token: string, idUser: number, firstName: string, lastName: string, email: string, accountLevel: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:146\n                \n            \n\n\n            \n                \n                    Speichert Login\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token\n\n                                    \n                                \n                                \n                                    idUser\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        User ID\n\n                                    \n                                \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Vorname\n\n                                    \n                                \n                                \n                                    lastName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nachname\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        E-Mail\n\n                                    \n                                \n                                \n                                    accountLevel\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Account Level\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(errorRes: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:167\n                \n            \n\n\n            \n                \n                    Behandelt Fehlermeldungen\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorRes\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        xxxxxxx\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:51\n                \n            \n\n\n            \n                \n                    Meldet einen Benutzer an.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        E-Mail\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Passwort\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        xxxxxxxxx\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:117\n                \n            \n\n\n            \n                \n                    Meldet den Benutzer ab.\nLöscht gespeicherte Daten.\nNavigiert auf Anmeldung.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signup\n                        \n                    \n                \n            \n            \n                \nsignup(firstname: string, lastname: string, email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/auth.service.ts:29\n                \n            \n\n\n            \n                \n                    Registiert einen Benutzer.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    firstname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Vorname\n\n                                    \n                                \n                                \n                                    lastname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Nachname\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        E-Mail\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Passwort\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        xxxxxxxxxxx\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        tokenExpirationTimer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/auth.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { catchError, tap } from 'rxjs/operators';\nimport { throwError, BehaviorSubject } from 'rxjs';\n\nimport { User } from '../model/user.model';\nimport { getUrl } from '../helpers';\n\n@Injectable({ providedIn: 'root' })\n\n/**\n * Diese Komponente implementiert den Auth Service.\n */\nexport class AuthService {\n  user = new BehaviorSubject(null);\n  private tokenExpirationTimer: any;\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  /**\n   * Registiert einen Benutzer.\n   * @param firstname Vorname\n   * @param lastname Nachname\n   * @param email E-Mail\n   * @param password Passwort\n   * @returns xxxxxxxxxxx\n   */\n  signup(firstname: string, lastname: string, email: string, password: string) {\n    return this.http\n      .post(\n        getUrl('register'),\n        {\n          firstname: firstname,\n          lastname: lastname,\n          email: email,\n          password: password\n        }\n      )\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  /**\n   * Meldet einen Benutzer an.\n   * @param email E-Mail\n   * @param password Passwort\n   * @returns xxxxxxxxx\n   */\n  login(email: string, password: string) {\n    return this.http\n      .post(\n        getUrl('login'),\n        {\n          email: email,\n          password: password\n        }\n      )\n      .pipe(\n        catchError(this.handleError),\n        tap(resData => {\n          this.handleAuthentication(\n            resData.token,\n            +resData.Userdata.idUser,\n            resData.Userdata.FirstName,\n            resData.Userdata.LastName,\n            resData.Userdata.Email,\n            +resData.Userdata.AccountLevel_idAccountLevel\n          );\n        })\n      );\n  }\n\n  /**\n   * Aktualisiert den Login.\n   * @returns xxxxxxxxxx\n   */\n  autoLogin() {\n    const userData: {\n      idUser: number,\n      firstName: string,\n      lastName: string,\n      email: string,\n      accountLevel: number,\n      _token: string,\n      _tokenExpirationDate: Date\n    } = JSON.parse(localStorage.getItem('userData'));\n    if (!userData) {\n      return;\n    }\n\n    const loadedUser = new User(\n      userData.idUser,\n      userData.firstName,\n      userData.lastName,\n      userData.email,\n      userData.accountLevel,\n      userData._token,\n      new Date(userData._tokenExpirationDate)\n    );\n\n    if (loadedUser.token) {\n      this.user.next(loadedUser);\n      const expirationDuration =\n        new Date(userData._tokenExpirationDate).getTime() -\n        new Date().getTime();\n      this.autoLogout(expirationDuration);\n    }\n  }\n\n  /**\n * Meldet den Benutzer ab.\n * Löscht gespeicherte Daten.\n * Navigiert auf Anmeldung.\n */\n  logout() {\n    this.user.next(null);\n    this.router.navigate(['/login']);\n    localStorage.removeItem('userData');\n    if (this.tokenExpirationTimer) {\n      clearTimeout(this.tokenExpirationTimer);\n    }\n    this.tokenExpirationTimer = null;\n  }\n\n  /**\n   * Meldet den Benutzer ab, wenn die Zeit abgelaufen ist.\n   * @param expirationDuration \n   */\n  autoLogout(expirationDuration: number) {\n    this.tokenExpirationTimer = setTimeout(() => {\n      this.logout();\n    }, expirationDuration);\n  }\n\n  /**\n   * Speichert Login\n   * @param token Token\n   * @param idUser User ID\n   * @param firstName Vorname\n   * @param lastName Nachname\n   * @param email E-Mail\n   * @param accountLevel Account Level \n   */\n  private handleAuthentication(\n    token: string,\n    idUser: number,\n    firstName: string,\n    lastName: string,\n    email: string,\n    accountLevel: number\n  ) {\n    const expiresIn = 3600;\n    const expirationDate = new Date(new Date().getTime() + expiresIn * 1000);\n    const user = new User(idUser, firstName, lastName, email, accountLevel, token, expirationDate);\n    this.user.next(user);\n    this.autoLogout(expiresIn * 1000);\n    localStorage.setItem('userData', JSON.stringify(user));\n  }\n\n  /**\n   * Behandelt Fehlermeldungen\n   * @param errorRes Error\n   * @returns xxxxxxx\n   */\n  private handleError(errorRes: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occurred!';\n    if (errorRes.error.error == 'Email exists.') {\n      errorMessage = 'E-Mail exisitert bereits.'\n    }\n    if (errorRes.error.error == 'Invalid username or password.') {\n      errorMessage = 'E-Mail und Passwort stimmen nicht überein.'\n    }\n    return throwError(errorMessage);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AutofocusDirective.html":{"url":"directives/AutofocusDirective.html","title":"directive - AutofocusDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  AutofocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/autofocus.directive.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appAutofocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/autofocus.directive.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/autofocus.directive.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[appAutofocus]',\n})\nexport class AutofocusDirective implements OnInit {\n  constructor(private elementRef: ElementRef) {}\n\n  ngOnInit(): void {\n    this.elementRef.nativeElement.focus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Category.html":{"url":"interfaces/Category.html","title":"interface - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/category.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Dieses Klasse repräsentiert das Model Kurskategorie.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CreateDate\n                                        \n                                \n                                \n                                        \n                                            Creator\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            Subject_idSubject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CreateDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreateDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Creator:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Subject_idSubject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Subject_idSubject:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Category {\n  id: number;\n  Subject_idSubject: number;\n  Name: string;\n  Creator: number;\n  CreateDate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoryDialogComponent.html":{"url":"components/CategoryDialogComponent.html","title":"component - CategoryDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoryDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/category-dialog/category-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-category-dialog\n            \n\n            \n                styleUrls\n                ./category-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./category-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef, data: Category)\n                    \n                \n                        \n                            \n                                Defined in src/app/questions/category-dialog/category-dialog.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Category\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/category-dialog/category-dialog.component.ts:49\n                \n            \n\n\n            \n                \n                    Schliesst den Dialog ohne Änderungen\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/category-dialog/category-dialog.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/category-dialog/category-dialog.component.ts:40\n                \n            \n\n\n            \n                \n                    Speichert das Formular und schliesst den Dialog\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/questions/category-dialog/category-dialog.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/category-dialog/category-dialog.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Category } from 'src/app/shared/model/category.model';\n\n@Component({\n  selector: 'app-category-dialog',\n  templateUrl: './category-dialog.component.html',\n  styleUrls: ['./category-dialog.component.css'],\n})\n/**\n * Klasse zum editieren und Hinzufügen von Kategorien\n *\n * @Vorgang: BI-015\n *\n * {@link QuestionsComponent}\n */\nexport class CategoryDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: Category\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      Name: [this.data.Name, []],\n      id: [this.data.id, []],\n      Subject_idSubject: [this.data.Subject_idSubject, []],\n    });\n  }\n\n  /**\n   * Speichert das Formular und schliesst den Dialog\n   * @Vorgang BI-015\n   * @returns null\n   */\n  save() {\n    this.dialogRef.close(this.form.value);\n  }\n\n  /**\n   * Schliesst den Dialog ohne Änderungen\n   * @Vorgang BI-015\n   * @returns null\n   */\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n\n\n  Close\n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./category-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Close      Save  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CategoryDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                find\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/category.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(loggedInUser: User, category)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/category.service.ts:71\n                \n            \n\n\n            \n                \n                    Erstellt eine Kategorie.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    category\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die ID des Kurses welcher zurückgegeben werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(loggedInUser: User, categorieId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/category.service.ts:102\n                \n            \n\n\n            \n                \n                    Löscht eine Kategorie.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    categorieId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die Kategorie welche gelöscht werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(loggedInUser: User, courseID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/category.service.ts:35\n                \n            \n\n\n            \n                \n                    Gibt eine Kategorie zurück.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    courseID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die ID des Kurses welcher zurückgegeben werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(loggedInUser: User, category)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/category.service.ts:87\n                \n            \n\n\n            \n                \n                    Aktualisiert eine Kategorie.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    category\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die ID des Kurses welcher aktualisiert werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'category'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/category.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { User } from '../model/user.model';\nimport { Category } from '../model/category.model';\nimport { AuthService } from './auth.service';\nimport { setAuthHeader, getUrl, getUrlById, handleError } from '../helpers';\n\n@Injectable({\n  providedIn: 'root',\n})\n\n/**\n * Klasse zur Verwaltung der Kategorien\n *\n * @Vorgang: BI-015\n */\nexport class CategoryService {\n  private model = 'category';\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  /**\n   * Gibt eine Kategorie zurück.\n   * @param loggedInUser eingeloggter User\n   * @param courseID Die ID des Kurses welcher zurückgegeben werden soll.\n   * @Vorgang BI-015\n   * @returns Category\n   */\n  find(loggedInUser: User, courseID: number) {\n    return this.http\n      .get(getUrl(this.model) + '/course/' + courseID, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(\n        map((responseData) => {\n          if (!responseData || !responseData.Category) return [];\n\n          const categoryArray: Category[] = [];\n          console.log(responseData);\n          responseData.Category.forEach((category) => {\n            categoryArray.push({\n              id: category.idcategory,\n              Subject_idSubject: category.Subject_idSubject,\n              Name: category.Name,\n              Creator: category.Creator_idUser,\n              CreateDate: category.CreateDate,\n            });\n          });\n          console.log(categoryArray);\n          return categoryArray;\n        }),\n        catchError((errorRes) => {\n          return throwError(errorRes);\n        })\n      );\n  }\n\n  /**\n   * Erstellt eine Kategorie.\n   * @param loggedInUser eingeloggter User\n   * @param category Die ID des Kurses welcher zurückgegeben werden soll.\n   * @Vorgang BI-015\n   * @returns Http 201 oder Http 400\n   */\n  create(loggedInUser: User, category) {\n    console.log(category);\n    return this.http\n      .post(getUrl(this.model), category, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Aktualisiert eine Kategorie.\n   * @param loggedInUser eingeloggter User\n   * @param category Die ID des Kurses welcher aktualisiert werden soll.\n   * @Vorgang BI-015\n   * @returns Http 201 oder Http 400\n   */\n  update(loggedInUser: User, category) {\n    return this.http\n      .put(getUrlById(this.model, category.id), category, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Löscht eine Kategorie.\n   * @param loggedInUser eingeloggter User\n   * @param categorieId Die Kategorie welche gelöscht werden soll.\n   * @Vorgang BI-015\n   * @returns Http 201 oder Http 400\n   */\n  delete(loggedInUser: User, categorieId: number) {\n    return this.http\n      .delete(getUrlById(this.model, categorieId), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Course.html":{"url":"interfaces/Course.html","title":"interface - Course","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Course\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/course.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Dieses Klasse repräsentiert das Model Kurstabelle.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            CreateDate\n                                        \n                                \n                                \n                                        \n                                            Creator\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            isActive\n                                        \n                                \n                                \n                                        \n                                            Name\n                                        \n                                \n                                \n                                        \n                                            ShortName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        CreateDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreateDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Creator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Creator:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isActive\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isActive:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ShortName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ShortName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Course {\n  id: number;\n  Name: string;\n  Creator: number;\n  CreateDate: string;\n  ShortName: string;\n  isActive: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CourseDialogComponent.html":{"url":"components/CourseDialogComponent.html","title":"component - CourseDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CourseDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/course-dialog/course-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-course-dialog\n            \n\n            \n                styleUrls\n                ./course-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./course-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                form\n                            \n                            \n                                originalName\n                            \n                            \n                                selectedCourse\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dialogRef: MatDialogRef, data: Course)\n                    \n                \n                        \n                            \n                                Defined in src/app/questions/course-dialog/course-dialog.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        Course\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/course-dialog/course-dialog.component.ts:54\n                \n            \n\n\n            \n                \n                    Schliesst den Dialog ohne Änderungen\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/course-dialog/course-dialog.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/course-dialog/course-dialog.component.ts:44\n                \n            \n\n\n            \n                \n                    Speichert das Formular und schliesst den Dialog\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/questions/course-dialog/course-dialog.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/course-dialog/course-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalName\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/questions/course-dialog/course-dialog.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCourse\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/questions/course-dialog/course-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Course } from 'src/app/shared/model/course.model';\n\n@Component({\n  selector: 'app-course-dialog',\n  templateUrl: './course-dialog.component.html',\n  styleUrls: ['./course-dialog.component.css'],\n})\n\n/**\n * Klasse zum editieren und Hinzufügen von Kursen/Modulen\n *\n * @Vorgang: BI-015\n *\n * {@link QuestionsComponent}\n */\nexport class CourseDialogComponent implements OnInit {\n  form: FormGroup;\n  selectedCourse;\n  originalName;\n\n  constructor(\n    private fb: FormBuilder,\n    private dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: Course\n  ) {}\n\n  ngOnInit(): void {\n    this.form = this.fb.group({\n      Name: [this.data.Name, []],\n      id: [this.data.id, []],\n      ShortName: [this.data.ShortName, []],\n      isActive: [this.data.isActive, []],\n    });\n  }\n\n  /**\n   * Speichert das Formular und schliesst den Dialog\n   * @Vorgang BI-015\n   * @returns null\n   */\n  save() {\n    console.log(this.form.value);\n    this.dialogRef.close(this.form.value);\n  }\n\n  /**\n   * Schliesst den Dialog ohne Änderungen\n   * @Vorgang BI-015\n   * @returns null\n   */\n  close() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  \n    Kurs\n    \n  \n\n  \n    Abkürzung\n    \n  \n\n\n\n  Close\n  \n    Save\n  \n\n\n    \n\n    \n                \n                    ./course-dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Kurs            Abkürzung        Close      Save  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'CourseDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CourseService.html":{"url":"injectables/CourseService.html","title":"injectable - CourseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CourseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/course.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                all\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                find\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/course.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        all\n                        \n                    \n                \n            \n            \n                \nall(loggedInUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/course.service.ts:33\n                \n            \n\n\n            \n                \n                    Gibt alle Kurse/Module zurück.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(loggedInUser: User, course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/course.service.ts:101\n                \n            \n\n\n            \n                \n                    erstellt einen Kurs.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Der Kurs der erstellt werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(loggedInUser: User, courseId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/course.service.ts:71\n                \n            \n\n\n            \n                \n                    Löscht einen Kurs.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    courseId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Der Kurs der gelöscht werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        find\n                        \n                    \n                \n            \n            \n                \nfind(loggedInUser: User, courseID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/course.service.ts:86\n                \n            \n\n\n            \n                \n                    Zeigt einen Kurs an.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    courseID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Course\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(loggedInUser: User, course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/course.service.ts:117\n                \n            \n\n\n            \n                \n                    Aktualisiert einen Kurs.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    course\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Http 201 oder Http 400\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'subject'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/course.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { User } from '../model/user.model';\nimport { Course } from '../model/course.model';\nimport { AuthService } from './auth.service';\nimport { setAuthHeader, getUrl, getUrlById, handleError } from '../helpers';\n\n@Injectable({\n  providedIn: 'root',\n})\n/**\n * Klasse zur Verwaltung der Kurse\n *\n * @Vorgang: BI-016\n */\nexport class CourseService {\n  private model = 'subject';\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  /**\n   * Gibt alle Kurse/Module zurück.\n   * @param loggedInUser eingeloggter User\n   * @Vorgang BI-015\n   * @returns Course\n   */\n  all(loggedInUser: User) {\n    // Wenn der eingeloggte User keine Adminrechte hat, wird eine andere Schnittstelle angesprochen.\n    let usedController =\n      loggedInUser.accountLevel === 5 ? 'subject' : 'Students';\n\n    return this.http\n      .get(getUrl(usedController), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(\n        map((responseData) => {\n          if (!responseData || !responseData.Subject) return [];\n          const courseArray: Course[] = [];\n          responseData.Subject.forEach((subject) => {\n            courseArray.push({\n              id: subject.idSubject,\n              Name: subject.Name,\n              Creator: subject.Creator_idUser,\n              CreateDate: subject.CreateDate,\n              ShortName: subject.ShortName,\n              isActive: subject.Active === '1' ? true : false,\n            });\n          });\n          return courseArray;\n        }),\n        catchError((errorRes) => {\n          return throwError(errorRes);\n        })\n      );\n  }\n\n  /**\n   * Löscht einen Kurs.\n   * @param loggedInUser eingeloggter User\n   * @param courseId Der Kurs der gelöscht werden soll.\n   * @Vorgang BI-015\n   * @returns Http 201 oder Http 400\n   */\n  delete(loggedInUser: User, courseId: number) {\n    return this.http\n      .delete(getUrlById(this.model, courseId), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Zeigt einen Kurs an.\n   * @param loggedInUser eingeloggter User\n   * @param courseId Der Kurs der angezeigt werden soll.\n   * @Vorgang BI-015\n   * @returns Course\n   */\n  find(loggedInUser: User, courseID: number) {\n    return this.http\n      .get(getUrlById(this.model, courseID), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * erstellt einen Kurs.\n   * @param loggedInUser eingeloggter User\n   * @param course Der Kurs der erstellt werden soll.\n   * @Vorgang BI-015\n   * @returns Http 201 oder Http 400\n   */\n  create(loggedInUser: User, course) {\n    console.log(course);\n    return this.http\n      .post(getUrl(this.model), course, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Aktualisiert einen Kurs.\n   * @param loggedInUser eingeloggter User\n   * @param courseId Der Kurs der aktualisiert werden soll.\n   * @Vorgang BI-015\n   * @returns Http 201 oder Http 400\n   */\n  update(loggedInUser: User, course) {\n    return this.http\n      .put(getUrlById(this.model, course.id), course, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DialogComponent.html":{"url":"components/DialogComponent.html","title":"component - DialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/dialog/dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dialog\n            \n\n            \n                styleUrls\n                ./dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/dialog/dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/dialog/dialog.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/game/dialog/dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css']\n})\nexport class DialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        Deine Antwort ist richtig\nDeine Antwort ist falsch\n\n    {{data.answer}}\n\n    \n\n    \n                \n                    ./dialog.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Deine Antwort ist richtigDeine Antwort ist falsch    {{data.answer}}'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'DialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/user-edit/user-edit.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountLevel\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountLevel:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/model/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UserService } from '../shared/services/user.service';\n\n\n//outsourcen\nexport interface DialogData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  accountLevel: number;\n  userId: number\n}\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\n\n/**\n * Diese Komponente implementiert das Benutzer Formular. \n */\nexport class UserEditComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n\n  userSub: Subscription = null;\n  loggedInUser: User;\n\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private auth: AuthService, private userService: UserService\n  ) { }\n\n\n  /**\n  * Initialisiert den aktuellen Benutzer.\n  * Initialisiert das Formular.\n  */\n  ngOnInit(): void {\n    this.userSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    });\n\n\n    this.form = new FormGroup({\n      'userData': new FormGroup({\n        'accountlevel': new FormControl(this.data.accountLevel)\n      })\n    });\n  }\n\n  /**\n   * Abrechen der Eingabe. Schließt den Dialog.\n   */\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Sendet Daten an Service.\n   */\n  onSubmit(): void {\n\n    let formAccountLevel = this.form.value.userData.accountlevel;\n    let newAccountLevel = formAccountLevel != null ? formAccountLevel : this.data.accountLevel;\n\n    this.userService.getUser(this.loggedInUser, this.data.userId).subscribe(updatedUser => {\n      this.userService.updateUser(this.loggedInUser, updatedUser, newAccountLevel).subscribe(response => {\n        this.dialogRef.close();\n      });\n    });\n\n\n\n  }\n\n  /**\n  * Beendet alle Subscriptions.\n  */\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditAnswerDialogComponent.html":{"url":"components/EditAnswerDialogComponent.html","title":"component - EditAnswerDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditAnswerDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/edit-answer-dialog/edit-answer-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-answer-dialog\n            \n\n            \n                styleUrls\n                ./edit-answer-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./edit-answer-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFocusOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusOut\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/questions/edit-answer-dialog/edit-answer-dialog.component.ts:21\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Answer\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/questions/edit-answer-dialog/edit-answer-dialog.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        focusOut\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/questions/edit-answer-dialog/edit-answer-dialog.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/edit-answer-dialog/edit-answer-dialog.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocusOut\n                        \n                    \n                \n            \n            \n                \nonFocusOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/edit-answer-dialog/edit-answer-dialog.component.ts:33\n                \n            \n\n\n            \n                \n                    Sobald das Form verlassen wird, wird die Änderung an den Server gesendet\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/edit-answer-dialog/edit-answer-dialog.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Answer } from 'src/app/shared/model/answer.model';\n\n@Component({\n  selector: 'app-edit-answer-dialog',\n  templateUrl: './edit-answer-dialog.component.html',\n  styleUrls: ['./edit-answer-dialog.component.css']\n})\n/**\n * Klasse zum editieren und Hinzufügen von Antworten\n *\n * @Vorgang: BI-016, BI-017\n * \n * {@link QuestionsComponent}\n */\nexport class EditAnswerDialogComponent implements OnInit {\n\n  @Input() data: Answer;\n  @Output() focusOut: EventEmitter = new EventEmitter();\n\n  editMode = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Sobald das Form verlassen wird, wird die Änderung an den Server gesendet\n   * @Vorgang BI-015\n   * @returns null\n   */\n  onFocusOut() {\n    console.log(this.data);\n    this.focusOut.emit(this.data);\n  }\n\n}\n\n    \n\n    \n        {{ data.Description }}\n\n\n\n    \n\n    \n                \n                    ./edit-answer-dialog.component.css\n                \n                .cellInput {\n  border: 2px solid transparent;\n\n  width: 100%;\n  height: 100%;\n}\n\n.cell {\n  border: 2px solid transparent;\n  width: 100%;\n  height: 100%;\n}\n\n.cell:hover {\n  cursor: pointer;\n  border: 2px dashed lightgray;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ data.Description }}'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditAnswerDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorPageComponent.html":{"url":"components/ErrorPageComponent.html","title":"component - ErrorPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ErrorPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/error-page/error-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-error-page\n            \n\n            \n                styleUrls\n                ./error-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./error-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                dataSub\n                            \n                            \n                                errorMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/error-page/error-page.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error-page/error-page.component.ts:34\n                \n            \n\n\n            \n                \n                    Beendet alle Subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/error-page/error-page.component.ts:23\n                \n            \n\n\n            \n                \n                    Initialisiert die Fehlermeldung.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        dataSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/error-page/error-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/error-page/error-page.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ActivatedRoute, Data } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-error-page',\n  templateUrl: './error-page.component.html',\n  styleUrls: ['./error-page.component.css']\n})\n\n/**\n * Diese Komponente implementiert die Fehlermeldung.\n */\nexport class ErrorPageComponent implements OnInit, OnDestroy {\n  errorMessage: string;\n  dataSub: Subscription = null;\n\n  constructor(private route: ActivatedRoute) { }\n\n  /**\n   * Initialisiert die Fehlermeldung.\n   */\n  ngOnInit(): void {\n    this.dataSub = this.route.data.subscribe(\n      (data: Data) => {\n        this.errorMessage = data['message'];\n      }\n    );\n  }\n\n  /**\n  * Beendet alle Subscriptions.\n  */\n  ngOnDestroy(): void {\n    this.dataSub.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        {{errorMessage}}\n    \n\n    \n                \n                    ./error-page.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{errorMessage}}'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FaqComponent.html":{"url":"components/FaqComponent.html","title":"component - FaqComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FaqComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/faq/faq.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-faq\n            \n\n            \n                styleUrls\n                ./faq.component.css\n            \n\n\n\n            \n                templateUrl\n                ./faq.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                panelOpenState\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        panelOpenState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/faq/faq.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-faq',\n  templateUrl: './faq.component.html',\n  styleUrls: ['./faq.component.css']\n})\n\n/**\n * Diese Komponente implementiert die FAQ.\n */\nexport class FaqComponent {\n  panelOpenState = false;\n}\n\n    \n\n    \n        Fragen und Antworten zum Online-Quiz educat.\n\n\n    \n        \n            \n                Wer darf sich registrieren?\n            \n        \n        Alle Studenten der IU. Bei der Registrierung ist eine gültige Email-Adresse der IU notwendig.\n    \n    \n        \n            \n                Wie kann ich mich registrieren?\n            \n        \n        Klicke im Menü auf\n            Registrieren\n        \n    \n\n    \n\n    \n                \n                    ./faq.component.css\n                \n                mat-panel-title{\n    font-size: 16px;\n    color: #232f3e;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n\nmat-expansion-panel p{\n    font-size: 14px;\n    color: #666;\n    font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Fragen und Antworten zum Online-Quiz educat.                                        Wer darf sich registrieren?                            Alle Studenten der IU. Bei der Registrierung ist eine gültige Email-Adresse der IU notwendig.                                            Wie kann ich mich registrieren?                            Klicke im Menü auf            Registrieren            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'FaqComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GameComponent.html":{"url":"components/GameComponent.html","title":"component - GameComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GameComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/game/game.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-game\n            \n\n            \n                styleUrls\n                ./game.component.css\n            \n\n\n\n            \n                templateUrl\n                ./game.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answeredNumber\n                            \n                            \n                                answersSub\n                            \n                            \n                                closeDiaSub\n                            \n                            \n                                currentAnswers\n                            \n                            \n                                currentCategory\n                            \n                            \n                                currentCategoryId\n                            \n                            \n                                currentCorrectAnswer\n                            \n                            \n                                currentGameSub\n                            \n                            \n                                currentPlayerPoints\n                            \n                            \n                                currentQuestion\n                            \n                            \n                                currentQuizId\n                            \n                            \n                                currentSubject\n                            \n                            \n                                currentSubjectId\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                disableAnswerButton\n                            \n                            \n                                disableNextQuestionButton\n                            \n                            \n                                endGame\n                            \n                            \n                                loadGame\n                            \n                            \n                                loggedInUser\n                            \n                            \n                                moreGamesExists\n                            \n                            \n                                noGameExists\n                            \n                            \n                                player1\n                            \n                            \n                                player2\n                            \n                            \n                                questionNumber\n                            \n                            \n                                questions\n                            \n                            \n                                questionSub\n                            \n                            \n                                runGame\n                            \n                            \n                                sentGame\n                            \n                            \n                                successMsg\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkAllData\n                            \n                            \n                                finishGame\n                            \n                            \n                                initAnswersForQuestion\n                            \n                            \n                                initGame\n                            \n                            \n                                initQuestionsInGame\n                            \n                            \n                                nextQuestion\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFrageMelden\n                            \n                            \n                                openDialog\n                            \n                            \n                                selectAnswer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, userService: UserService, dialog: MatDialog, quizService: QuizService, questionService: QuestionsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/game/game.component.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                        QuestionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkAllData\n                        \n                    \n                \n            \n            \n                \ncheckAllData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finishGame\n                        \n                    \n                \n            \n            \n                \nfinishGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:191\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initAnswersForQuestion\n                        \n                    \n                \n            \n            \n                \ninitAnswersForQuestion(idQuestion: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    idQuestion\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initGame\n                        \n                    \n                \n            \n            \n                \ninitGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initQuestionsInGame\n                        \n                    \n                \n            \n            \n                \ninitQuestionsInGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextQuestion\n                        \n                    \n                \n            \n            \n                \nnextQuestion()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFrageMelden\n                        \n                    \n                \n            \n            \n                \nonFrageMelden()\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(isCorrect: boolean, answer: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:214\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isCorrect\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    answer\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectAnswer\n                        \n                    \n                \n            \n            \n                \nselectAnswer(answer: Answer)\n                \n            \n\n\n            \n                \n                    Defined in src/app/game/game.component.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    answer\n                                    \n                                                Answer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        answeredNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        answersSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDiaSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentAnswers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCategory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentCorrectAnswer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Answer\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentGameSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPlayerPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentQuestion\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentQuizId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSubject\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentSubjectId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disableAnswerButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disableNextQuestionButton\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endGame\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:67\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadGame\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:68\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        moreGamesExists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noGameExists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:69\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        player2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Player2\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Question[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        questionSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        runGame\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sentGame\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMsg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/game/game.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Question } from '../shared/model/question.model';\nimport { Answer } from '../shared/model/answer.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { QuizService } from '../shared/services/quiz.service';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UserService } from '../shared/services/user.service';\nimport { User } from '../shared/model/user.model';\nimport { Subscription, throwError } from 'rxjs';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { QuestionsService } from '../shared/services/questions.service';\nimport { Router } from '@angular/router';\n\ninterface Player2 {\n  Email: string,\n  FirstName: string,\n  LastName: string,\n  idUser: number;\n}\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  loggedInUser: User = null;\n  userSub: Subscription = null;\n\n  successMsg = false;\n\n  player1: User = null;\n  player2: Player2 = null;\n\n  currentQuizId = null\n\n  currentSubject = null;\n  currentSubjectId = null;\n  currentCategory = null;\n  currentCategoryId = null;\n\n  currentPlayerPoints = 0;\n\n  questions: Question[] = [];\n\n  currentQuestion: Question = null;\n  currentAnswers: Answer[] = [];\n  currentCorrectAnswer: Answer = null;\n\n  questionNumber = 0;\n  answeredNumber = 0;\n\n  disableNextQuestionButton = true;\n  disableAnswerButton = false;\n\n\n\n\n  currentGameSub: Subscription = null;\n  questionSub: Subscription = null;\n  answersSub: Subscription = null;\n\n  closeDiaSub: Subscription = null;\n\n  runGame = false;\n  endGame = false;\n  loadGame = true;\n  noGameExists = false;\n  moreGamesExists = false;\n  sentGame = false;\n\n\n\n\n  constructor(private auth: AuthService, private router: Router, private userService: UserService, public dialog: MatDialog, private quizService: QuizService, private questionService: QuestionsService) { }\n\n  ngOnInit(): void {\n    this.userSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    });\n    this.initGame();\n\n  }\n\n\n  initGame() {\n\n    this.quizService.getGameByPlayer(this.loggedInUser).subscribe(game => {\n\n      if (game.length > 1) {\n        this.moreGamesExists = true;\n        this.loadGame = false;\n        return;\n      }\n      else if (game.length == 0) {\n        this.noGameExists = true;\n        this.loadGame = false;\n        return;\n      }\n\n      // Setze Quiz\n      this.currentQuizId = game[0].idQuiz;\n\n      // Setze Kurs und Kategorie\n      this.currentSubject = game[0].subject;\n      this.currentSubjectId = game[0].idSubject;\n      this.currentCategory = game[0].category;\n      this.currentCategoryId = game[0].idCategory;\n\n      // Setze Spieler 1 und Spieler 2\n      const idCreator = game[0].idCreatorUser;\n      const idJoiner = game[0].idJoinerUser\n\n      this.player1 = this.loggedInUser;\n      const idForPlayer2 = this.loggedInUser.idUser == idCreator ? idJoiner : idCreator;\n\n      this.userService.getUser(this.loggedInUser, idForPlayer2).subscribe(response => {\n        this.player2 = response;\n\n\n        console.log('inside  this.userService.getUse');\n        console.log(response);\n\n        // Initialisere alle Fragen, erst nachdem beide Teilnehmer geladen werden konnten.\n        this.initQuestionsInGame();\n\n      });\n\n\n    });\n\n  }\n\n  initQuestionsInGame() {\n    this.questionSub = this.quizService.getQuestions(this.loggedInUser, this.currentSubjectId, this.currentCategoryId).subscribe(response => {\n      this.questions = response;\n\n      // init first question\n      this.nextQuestion();\n\n      // Prüfe ob alle benötigten Daten vorhanden sind\n      this.runGame = this.checkAllData();\n      this.loadGame = !this.checkAllData();\n\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  checkAllData() {\n    return this.currentQuestion != null && this.currentAnswers != null && this.questions.length >= 10 && this.player1 != null && this.player2 != null;\n  }\n\n\n  initAnswersForQuestion(idQuestion: number) {\n    this.answersSub = this.quizService.getAnswers(this.loggedInUser, idQuestion).subscribe(response => {\n      this.currentCorrectAnswer = response.find(answer => answer.Truth == 1);\n      this.currentAnswers = response;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  selectAnswer(answer: Answer) {\n    if (answer.Truth == 1) {\n      this.currentPlayerPoints += 10;\n      this.openDialog(true, 'Super gemacht, weiter so.');\n    } else {\n      this.openDialog(false, 'Die richtige Antwort ist: \\n' + this.currentCorrectAnswer.Description);\n    }\n    this.disableNextQuestionButton = false;\n    this.disableAnswerButton = true;\n    this.answeredNumber++;\n  }\n\n\n\n  nextQuestion() {\n    if (this.questionNumber  {\n      this.sentGame = true;\n      setTimeout(() => {\n        this.router.navigate(['/ranking']);\n      }, 5000)\n    });\n  }\n\n  onFrageMelden() {\n    this.currentQuestion[\"Flagged\"] = 1;\n    this.questionService.update(this.loggedInUser, this.currentQuestion).subscribe(response => {\n\n      this.successMsg = true;\n      setTimeout(() => {\n        this.successMsg = false;\n      }, 5000)\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  openDialog(isCorrect: boolean, answer: string) {\n    this.dialog.open(DialogComponent, {\n      data: {\n        isCorrect: isCorrect,\n        answer: answer,\n      },\n    });\n\n\n    this.closeDiaSub = this.dialog.afterAllClosed.subscribe(response => {\n      if (this.answeredNumber == 10) {\n        this.runGame = false;\n        this.endGame = true;\n      }\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n\n}\n\n    \n\n    \n        \n    Frage wurde gemeldet\n\n\n\n    Ergebnis wurde übermittelt.\n\n\n\n\n    \n        Es exisiert kein Spiel für dich.  Bitte gehe in die Lobby und erstelle ein Spiel oder tritt einem\n            bereits erstellten Spiel bei.\n    \n\n\n\n    \n        Das Spiel konnte nicht initialisiert werden. Bitte melde dich an die Administratoren.\n    \n\n\n\n    \n        \n            \n                Du  spielst gegen\n                {{player2.FirstName}} {{player2.LastName}}\n            \n            Kategorie: {{currentCategory}}\n            Kurs: {{currentSubject}}\n            Punkte: {{currentPlayerPoints}}\n        \n    \n\n\n\n    \n        \n            \n                Frage {{questionNumber}} von 10\n                Frage\n                    melden\n            \n        \n        \n            {{currentQuestion.QuestionDescription}}\n        \n    \n\n    \n        \n            Antwort\n        \n        \n            \n                \n                    {{answer.Description}}\n                \n            \n        \n    \n    Nächste\n        Frage\n\n\n\n    \n        \n            Alle Fragen beantwortet.\n        \n        \n            Dein Ergebnis im Kurs {{currentSubject}} und der Kategorie {{currentCategory}} sind\n            {{currentPlayerPoints}} Punkte.\n        \n    \n    Spiel\n        beenden\n\n\n\n\n    \n\n    \n\n    \n                \n                    ./game.component.css\n                \n                mat-card {\n   margin-bottom: 10px;\n }\n\n.cdk-focused.mat-stroked-button{\n   background-color: #4fc3f7 !important;\n }\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Frage wurde gemeldet    Ergebnis wurde übermittelt.            Es exisiert kein Spiel für dich.  Bitte gehe in die Lobby und erstelle ein Spiel oder tritt einem            bereits erstellten Spiel bei.                Das Spiel konnte nicht initialisiert werden. Bitte melde dich an die Administratoren.                                            Du  spielst gegen                {{player2.FirstName}} {{player2.LastName}}                        Kategorie: {{currentCategory}}            Kurs: {{currentSubject}}            Punkte: {{currentPlayerPoints}}                                                    Frage {{questionNumber}} von 10                Frage                    melden                                        {{currentQuestion.QuestionDescription}}                                    Antwort                                                                {{answer.Description}}                                            Nächste        Frage                        Alle Fragen beantwortet.                            Dein Ergebnis im Kurs {{currentSubject}} und der Kategorie {{currentCategory}} sind            {{currentPlayerPoints}} Punkte.                Spiel        beenden    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'GameComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                isAuthenticated\n                            \n                            \n                                isTutor\n                            \n                            \n                                    Private\n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/header/header.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:43\n                \n            \n\n\n            \n                \n                    Beendet alle Subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:25\n                \n            \n\n\n            \n                \n                    Initialisiert den aktuellen Benutzer.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLogout\n                        \n                    \n                \n            \n            \n                \nonLogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/header/header.component.ts:36\n                \n            \n\n\n            \n                \n                    Meldet den aktuellen Benutzer ab.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAuthenticated\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isTutor\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/header/header.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../shared/services/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\n\n/**\n * Diese Komponente implementiert das Kopfmenü.\n */\nexport class HeaderComponent implements OnInit {\n  isAuthenticated = false;\n  isAdmin = false;\n  isTutor = false;\n  private userSub: Subscription;\n\n  constructor(private authService: AuthService) { }\n\n  /**\n   * Initialisiert den aktuellen Benutzer.\n   */\n  ngOnInit(): void {\n    this.userSub = this.authService.user.subscribe(user => {\n      this.isAuthenticated = !user ? false : true;\n      this.isAdmin = user && user.isAdmin();\n      this.isTutor = user && user.isTutor();\n    });\n  }\n\n  /**\n   * Meldet den aktuellen Benutzer ab.\n   */\n  onLogout() {\n    this.authService.logout();\n  }\n\n  /**\n  * Beendet alle Subscriptions.\n  */\n  ngOnDestroy() {\n    this.userSub.unsubscribe();\n  }\n\n\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    \n                        educat.\n                    \n                    \n                        Home\n                        Lobby\n                        Game\n                        Fragenpool\n                        \n                        Rangliste\n                        \n                        \n                    \n                    \n                         FAQ\n                         Anmelden\n                         Abmelden\n                         Registrieren\n                         Profil\n                    \n                \n            \n        \n    \n\n    \n\n    \n                \n                    ./header.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                    educat.                                                                Home                        Lobby                        Game                        Fragenpool                                                Rangliste                                                                                                                 FAQ                         Anmelden                         Abmelden                         Registrieren                         Profil                                                            '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                safeSrc\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in src/app/home/home.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Angular 6'\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safeSrc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SafeResourceUrl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/home/home.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\n/**\n * Diese Komponente implementiert die Startseite.\n */\nexport class HomeComponent {\n  name = 'Angular 6';\n  safeSrc: SafeResourceUrl;\n\n  constructor(private sanitizer: DomSanitizer) {\n    this.safeSrc = this.sanitizer.bypassSecurityTrustResourceUrl(\"https://www.youtube.com/embed/HtmKZdyrV4E\");\n  }\n\n}\n\n    \n\n    \n        \nSpaß am Lernen\neducat. ist ein browserbasiertes Online-Quizsystem für Studierende der IU.\n\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Spaß am Lerneneducat. ist ein browserbasiertes Online-Quizsystem für Studierende der IU.'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoadingScreenComponent.html":{"url":"components/LoadingScreenComponent.html","title":"component - LoadingScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoadingScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/loading-screen/loading-screen.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loading-screen\n            \n\n            \n                styleUrls\n                ./loading-screen.component.css\n            \n\n\n\n            \n                templateUrl\n                ./loading-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debounceTime\n                            \n                            \n                                loading\n                            \n                            \n                                loadingSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingScreenService: LoadingScreenService, _elmRef: ElementRef, _changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/loading-screen/loading-screen.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingScreenService\n                                                  \n                                                        \n                                                                        LoadingScreenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _changeDetectorRef\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/loading-screen/loading-screen.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/loading-screen/loading-screen.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/loading-screen/loading-screen.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        debounceTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                    \n                        \n                                Defined in src/app/loading-screen/loading-screen.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/loading-screen/loading-screen.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/loading-screen/loading-screen.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { LoadingScreenService } from '../shared/services/loading-screen.service';\n\n@Component({\n  selector: 'app-loading-screen',\n  templateUrl: './loading-screen.component.html',\n  styleUrls: ['./loading-screen.component.css'],\n})\nexport class LoadingScreenComponent implements AfterViewInit, OnDestroy {\n  debounceTime = 200;\n  loading = false;\n  loadingSubscription: Subscription;\n\n  constructor(\n    private loadingScreenService: LoadingScreenService,\n    private _elmRef: ElementRef,\n    private _changeDetectorRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    console.log('hallo')\n    this.loadingSubscription = this.loadingScreenService.loadingStatus.pipe(\n      debounceTime(200)\n    ).subscribe((value) => {\n      this.loading = value;\n    });\n  }\n\n  ngAfterViewInit(): void {\n   \n    this._elmRef.nativeElement.style.display = 'none';\n    this.loadingSubscription = this.loadingScreenService.loadingStatus\n      .pipe(debounceTime(this.debounceTime))\n      .subscribe((status: boolean) => {\n        this._elmRef.nativeElement.style.display = status ? 'block' : 'none';\n        this._changeDetectorRef.detectChanges();\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.loadingSubscription.unsubscribe();\n  }\n}\n    \n\n    \n        \n    \n      \n        \n        \n        \n        \n        \n        \n        \n      \n      \n        \n          \n            \n            \n            \n          \n        \n      \n    \n  \n    \n\n    \n                \n                    ./loading-screen.component.css\n                \n                .loading-screen-wrapper {\n    z-index: 100000;\n    position: absolute;\n    background-color: rgba(255, 255, 255, 0.6);\n    width: 100%;\n    height: 100%;\n    display: block;\n}\n.loading-screen-icon {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n}\n/** Loader: https://codepen.io/eliortabeka/pen/EXJyPP */\nsvg {\n    display: none;\n}\n.blobs {\n    filter: url(#goo);\n    width: 300px;\n    height: 300px;\n    position: relative;\n    overflow: hidden;\n    border-radius: 70px;\n    transform-style: preserve-3d;\n}\n.blobs .blob-center {\n    transform-style: preserve-3d;\n    position: absolute;\n    background: #475158;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 30px;\n    transform-origin: left top;\n    transform: scale(0.9) translate(-50%, -50%);\n    animation: blob-grow linear 3.4s infinite;\n    border-radius: 50%;\n    box-shadow: 0 -10px 40px -5px #475158;\n}\n.blob {\n    position: absolute;\n    background: #475158;\n    top: 50%;\n    left: 50%;\n    width: 30px;\n    height: 30px;\n    border-radius: 50%;\n    animation: blobs ease-out 3.4s infinite;\n    transform: scale(0.9) translate(-50%, -50%);\n    transform-origin: center top;\n    opacity: 0;\n}\n.blob:nth-child(1) {\n    animation-delay: 0.2s;\n}\n.blob:nth-child(2) {\n    animation-delay: 0.4s;\n}\n.blob:nth-child(3) {\n    animation-delay: 0.6s;\n}\n.blob:nth-child(4) {\n    animation-delay: 0.8s;\n}\n.blob:nth-child(5) {\n    animation-delay: 1s;\n}\n@keyframes blobs {\n    0% {\n        opacity: 0;\n        transform: scale(0) translate(calc(-330px - 50%), -50%);\n   }\n    1% {\n        opacity: 1;\n   }\n    35%, 65% {\n        opacity: 1;\n        transform: scale(0.9) translate(-50%, -50%);\n   }\n    99% {\n        opacity: 1;\n   }\n    100% {\n        opacity: 0;\n        transform: scale(0) translate(calc(330px - 50%), -50%);\n   }\n}\n@keyframes blob-grow {\n    0%, 39% {\n        transform: scale(0) translate(-50%, -50%);\n   }\n    40%, 42% {\n        transform: scale(1, 0.9) translate(-50%, -50%);\n   }\n    43%, 44% {\n        transform: scale(1.2, 1.1) translate(-50%, -50%);\n   }\n    45%, 46% {\n        transform: scale(1.3, 1.2) translate(-50%, -50%);\n   }\n    47%, 48% {\n        transform: scale(1.4, 1.3) translate(-50%, -50%);\n   }\n    52% {\n        transform: scale(1.5, 1.4) translate(-50%, -50%);\n   }\n    54% {\n        transform: scale(1.7, 1.6) translate(-50%, -50%);\n   }\n    58% {\n        transform: scale(1.8, 1.7) translate(-50%, -50%);\n   }\n    68%, 70% {\n        transform: scale(1.7, 1.5) translate(-50%, -50%);\n   }\n    78% {\n        transform: scale(1.6, 1.4) translate(-50%, -50%);\n   }\n    80%, 81% {\n        transform: scale(1.5, 1.4) translate(-50%, -50%);\n   }\n    82%, 83% {\n        transform: scale(1.4, 1.3) translate(-50%, -50%);\n   }\n    84%, 85% {\n        transform: scale(1.3, 1.2) translate(-50%, -50%);\n   }\n    86%, 87% {\n        transform: scale(1.2, 1.1) translate(-50%, -50%);\n   }\n    90%, 91% {\n        transform: scale(1, 0.9) translate(-50%, -50%);\n   }\n    92%, 100% {\n        transform: scale(0) translate(-50%, -50%);\n   }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoadingScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/LoadingScreenInterceptor.html":{"url":"interceptors/LoadingScreenInterceptor.html","title":"interceptor - LoadingScreenInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  LoadingScreenInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/helpers/loading.interceptors.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeRequests\n                            \n                            \n                                skippUrls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingScreenService: LoadingScreenService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/helpers/loading.interceptors.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingScreenService\n                                                  \n                                                        \n                                                                        LoadingScreenService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/helpers/loading.interceptors.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        activeRequests\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/helpers/loading.interceptors.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skippUrls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : ['/authrefresh']\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/helpers/loading.interceptors.ts:14\n                        \n                    \n\n            \n                \n                    URLs for which the loading screen should not be enabled\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { finalize } from 'rxjs/operators';\nimport { LoadingScreenService } from '../services/loading-screen.service';\n\n@Injectable()\nexport class LoadingScreenInterceptor implements HttpInterceptor {\n  activeRequests = 0;\n\n  /**\n   * URLs for which the loading screen should not be enabled\n   */\n  skippUrls = ['/authrefresh'];\n\n  constructor(private loadingScreenService: LoadingScreenService) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    let displayLoadingScreen = true;\n\n    for (const skippUrl of this.skippUrls) {\n      if (new RegExp(skippUrl).test(request.url)) {\n        displayLoadingScreen = false;\n        break;\n      }\n    }\n\n    if (displayLoadingScreen) {\n      if (this.activeRequests === 0) {\n        this.loadingScreenService.startLoading();\n      }\n      this.activeRequests++;\n\n      return next.handle(request).pipe(\n        finalize(() => {\n          this.activeRequests--;\n          if (this.activeRequests === 0) {\n            this.loadingScreenService.stopLoading();\n          }\n        })\n      );\n    } else {\n      return next.handle(request);\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoadingScreenService.html":{"url":"injectables/LoadingScreenService.html","title":"injectable - LoadingScreenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoadingScreenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/loading-screen.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _loading\n                            \n                            \n                                loadingStatus\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                startLoading\n                            \n                            \n                                stopLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    loading\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        startLoading\n                        \n                    \n                \n            \n            \n                \nstartLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading-screen.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopLoading\n                        \n                    \n                \n            \n            \n                \nstopLoading()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/loading-screen.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading-screen.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadingStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/loading-screen.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        loading\n                    \n                \n\n                \n                    \n                        getloading()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/loading-screen.service.ts:11\n                                \n                            \n\n                \n                    \n                        setloading(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/services/loading-screen.service.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingScreenService {\n  private _loading = false;\n  loadingStatus: Subject = new Subject();\n\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value: boolean) {\n    this._loading = value;\n    this.loadingStatus.next(value);\n  }\n\n  startLoading(): void {\n    this.loading = true;\n  }\n\n  stopLoading(): void {\n    this.loading = false;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LobbyComponent.html":{"url":"components/LobbyComponent.html","title":"component - LobbyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LobbyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/lobby/lobby.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-lobby\n            \n\n            \n                styleUrls\n                ./lobby.component.css\n            \n\n\n\n            \n                templateUrl\n                ./lobby.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allCoursesSub\n                            \n                            \n                                allQuizes\n                            \n                            \n                                cancelGameMsg\n                            \n                            \n                                categories\n                            \n                            \n                                courses\n                            \n                            \n                                createdQuiz\n                            \n                            \n                                currentUserGame\n                            \n                            \n                                currentUserSub\n                            \n                            \n                                dataSource\n                            \n                            \n                                dataSourceCategories\n                            \n                            \n                                dataSourceCourses\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                joinedQuiz\n                            \n                            \n                                loadLobby\n                            \n                            \n                                loggedInUser\n                            \n                            \n                                openedGamesSub\n                            \n                            \n                                selectedCategoryId\n                            \n                            \n                                selectedCategorySub\n                            \n                            \n                                selectedCourse\n                            \n                            \n                                successMsg\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelGame\n                            \n                            \n                                initCategories\n                            \n                            \n                                initCourses\n                            \n                            \n                                initCurrentUser\n                            \n                            \n                                initTable\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCreateGame\n                            \n                            \n                                onJoinGame\n                            \n                            \n                                onSelectCourse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, userService: UserService, lobbyService: LobbyService, courseService: CourseService, quizService: QuizService, categoryService: CategoryService)\n                    \n                \n                        \n                            \n                                Defined in src/app/lobby/lobby.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lobbyService\n                                                  \n                                                        \n                                                                        LobbyService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        courseService\n                                                  \n                                                        \n                                                                        CourseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        quizService\n                                                  \n                                                        \n                                                                        QuizService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelGame\n                        \n                    \n                \n            \n            \n                \ncancelGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCategories\n                        \n                    \n                \n            \n            \n                \ninitCategories()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCourses\n                        \n                    \n                \n            \n            \n                \ninitCourses()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initCurrentUser\n                        \n                    \n                \n            \n            \n                \ninitCurrentUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initTable\n                        \n                    \n                \n            \n            \n                \ninitTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCreateGame\n                        \n                    \n                \n            \n            \n                \nonCreateGame()\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onJoinGame\n                        \n                    \n                \n            \n            \n                \nonJoinGame(quiz: Quiz)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    quiz\n                                    \n                                                Quiz\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectCourse\n                        \n                    \n                \n            \n            \n                \nonSelectCourse(course: Course)\n                \n            \n\n\n            \n                \n                    Defined in src/app/lobby/lobby.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    course\n                                    \n                                                Course\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allCoursesSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        allQuizes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cancelGameMsg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        courses\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdQuiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserGame\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentUserSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Quiz[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourceCategories\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSourceCourses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['name', 'subject', 'category', 'action']\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinedQuiz\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadLobby\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openedGamesSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategoryId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCategorySub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedCourse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Course\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMsg\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/lobby/lobby.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\nimport { Quiz } from '../shared/model/quiz.model';\nimport { User } from '../shared/model/user.model';\nimport { Course } from '../shared/model/course.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { LobbyService } from '../shared/services/lobby.service';\nimport { UserService } from '../shared/services/user.service';\nimport { CourseService } from '../shared/services/course.service';\nimport { FormControl } from '@angular/forms';\nimport { Category } from '../shared/model/category.model';\nimport { CategoryService } from '../shared/services/category.service';\nimport { QuizService } from '../shared/services/quiz.service';\n\n\n@Component({\n  selector: 'app-lobby',\n  templateUrl: './lobby.component.html',\n  styleUrls: ['./lobby.component.css']\n})\nexport class LobbyComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'subject', 'category', 'action'];\n\n  successMsg = false;\n  cancelGameMsg = false;\n\n  loggedInUser: User = null;\n\n  selectedCourse: Course = null;\n  selectedCategoryId: number = null;\n\n  courses = new FormControl();\n  categories = new FormControl();\n\n  dataSourceCourses: Course[] = [];\n  dataSourceCategories: Category[] = [];\n\n  dataSource: Quiz[] = [];\n  allQuizes: Quiz[] = [];\n\n  currentUserGame: Quiz = null;\n\n  currentUserSub: Subscription = null;\n  openedGamesSub: Subscription = null;\n  allCoursesSub: Subscription = null;\n  joinedQuiz: Subscription = null;\n  createdQuiz: Subscription = null;\n  selectedCategorySub: Subscription = null;\n\n  loadLobby = true;\n\n  constructor(private auth: AuthService, private userService: UserService, private lobbyService: LobbyService, private courseService: CourseService, private quizService: QuizService, private categoryService: CategoryService) { }\n\n  ngOnInit(): void {\n    this.currentUserSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    });\n\n    this.initTable();\n\n    this.initCourses();\n  }\n\n  initCurrentUser() {\n    this.quizService.getGameByPlayer(this.loggedInUser).subscribe(game => {\n      if (game.length == 1) {\n        this.currentUserGame = game[0];\n      }\n      this.loadLobby = false;\n    })\n  }\n\n  initTable() {\n    this.openedGamesSub = this.lobbyService.getAllOpenedGames(this.loggedInUser).subscribe(response => {\n      this.allQuizes = response;\n      this.dataSource = response.filter(quiz => quiz.idJoinerUser === null);\n      this.initCurrentUser();\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  initCourses() {\n    this.allCoursesSub = this.courseService.all(this.loggedInUser).subscribe(response => {\n      const filteredResponse = response.filter(course => course.isActive === true);\n      this.dataSourceCourses = filteredResponse;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n\n\n\n  onJoinGame(quiz: Quiz): void {\n    this.joinedQuiz = this.lobbyService.joinQuiz(this.loggedInUser, quiz.idQuiz, this.loggedInUser.idUser).subscribe(response => {\n      this.initTable();\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n\n  }\n\n  onSelectCourse(course: Course) {\n    this.selectedCourse = course;\n    this.initCategories();\n  }\n\n  initCategories() {\n    this.selectedCategorySub = this.categoryService.find(this.loggedInUser, this.selectedCourse.id).subscribe(response => {\n      this.dataSourceCategories = response;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  onCreateGame() {\n    this.createdQuiz = this.lobbyService.createQuiz(this.loggedInUser, this.selectedCourse.id, this.selectedCategoryId).subscribe(response => {\n      this.initTable();\n\n\n      this.successMsg = true;\n      setTimeout(() => {\n        this.successMsg = false;\n      }, 5000)\n\n\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  cancelGame() {\n\n    if (confirm('Möchtest du sicher das Spiel abbrechen?')) {\n      this.quizService.deleteGame(this.loggedInUser, this.currentUserGame.idQuiz).subscribe(response => {\n        this.cancelGameMsg = true;\n        setTimeout(() => {\n          this.cancelGameMsg = false;\n        }, 5000)\n      },\n        errorMessage => {\n          console.log(errorMessage);\n        });\n    }\n\n\n  }\n\n\n}\n\n\n\n\n\n    \n\n    \n        \n    Spiel erfolgreich erstellt\n\n\n    Spiel abgebrochen\n\n\n    \n        \n            \n                {{loggedInUser.firstName}} {{loggedInUser.lastName}}\n                {{loggedInUser.accountLevel | accountLevelPipe}}\n            \n            \n                \n                    Organisator: {{currentUserGame.firstNameCreator}} {{currentUserGame.lastNameCreator}}\n                    \n                    Spiel: {{currentUserGame.subject}}\n                    \n                    Kategorie: {{currentUserGame.category}}\n                    \n                    Spiel abbrechen\n                    zum Spiel\n                \n                Nimmt aktuell an keinen Spiel teil.\n            \n        \n    \n    \n        \n            \n                Neues Spiel erstellen\n                Organisator {{loggedInUser.firstName}} {{loggedInUser.lastName}}\n            \n            \n                \n                    Wähle ein Modul\n                    \n                        \n                            {{course.Name}}\n                        \n                    \n                \n                \n                \n                    Wähle eine Kategorie\n                    \n                        \n                            {{category.Name}}\n                        \n                    \n                \n                \n                erstellen\n            \n        \n    \n    \n        \n\n            \n                 Organisator \n                 {{element.firstNameCreator}} {{element.lastNameCreator}}\n            \n\n            \n                 Modul \n                 {{element.subject}} \n            \n\n            \n                 Kategorie \n                 {{element.category}} \n            \n\n            \n                 Aktion \n                \n                    teilnehmen\n                \n            \n\n            \n            \n        \n    \n\n\n\n    \n\n    \n\n    \n                \n                    ./lobby.component.css\n                \n                mat-card {\n     width: calc(100% - 10px);\n    height: calc(100% - 10px); \n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Spiel erfolgreich erstellt    Spiel abgebrochen                                        {{loggedInUser.firstName}} {{loggedInUser.lastName}}                {{loggedInUser.accountLevel | accountLevelPipe}}                                                            Organisator: {{currentUserGame.firstNameCreator}} {{currentUserGame.lastNameCreator}}                                        Spiel: {{currentUserGame.subject}}                                        Kategorie: {{currentUserGame.category}}                                        Spiel abbrechen                    zum Spiel                                Nimmt aktuell an keinen Spiel teil.                                                                Neues Spiel erstellen                Organisator {{loggedInUser.firstName}} {{loggedInUser.lastName}}                                                            Wähle ein Modul                                                                        {{course.Name}}                                                                                                                Wähle eine Kategorie                                                                        {{category.Name}}                                                                                            erstellen                                                                 Organisator                  {{element.firstNameCreator}} {{element.lastNameCreator}}                                         Modul                  {{element.subject}}                                          Kategorie                  {{element.category}}                                          Aktion                                     teilnehmen                                                                    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'LobbyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LobbyService.html":{"url":"injectables/LobbyService.html","title":"injectable - LobbyService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LobbyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/lobby.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createQuiz\n                            \n                            \n                                getAllOpenedGames\n                            \n                            \n                                joinQuiz\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/lobby.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createQuiz\n                        \n                    \n                \n            \n            \n                \ncreateQuiz(loggedInUser: User, subjectId: number, categoryId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/lobby.service.ts:68\n                \n            \n\n\n            \n                \n                    Erstellt ein neues Quiz für ein Benutzer, ein Modul und eine Kategorie\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter Benutzer\n\n                                    \n                                \n                                \n                                    subjectId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID des Moduls\n\n                                    \n                                \n                                \n                                    categoryId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID der Kategorie\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Quiz wurde erstellt\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllOpenedGames\n                        \n                    \n                \n            \n            \n                \ngetAllOpenedGames(loggedInUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/lobby.service.ts:26\n                \n            \n\n\n            \n                \n                    Ermittelt alle aktuell geöffneten Spiele\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        aktuell eingeloggter Benutzer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        alle offene Spiele\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        joinQuiz\n                        \n                    \n                \n            \n            \n                \njoinQuiz(loggedInUser: User, idQuiz: number, idJoinerUser: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/lobby.service.ts:86\n                \n            \n\n\n            \n                \n                    Fügt einen Benutzer einem Spiel hinzu.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter Benutzer\n\n                                    \n                                \n                                \n                                    idQuiz\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID des Quiz\n\n                                    \n                                \n                                \n                                    idJoinerUser\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID des hinzugefügten Benutzer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Benutzer wurde hinzugefügt\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map } from 'rxjs/operators';\nimport { getUrl, getUrlById, handleError } from '../helpers';\nimport { Quiz } from '../model/quiz.model';\nimport { User } from '../model/user.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Diese Komponente implementiert den LobbyService. \n * Der Service stellt alle nötigen HTTP-Funktionen zum Abrufen, Erstellen und Hinzufügen von Benutzern eines Spiels bereit.\n */\nexport class LobbyService {\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  /**\n   * Ermittelt alle aktuell geöffneten Spiele\n   * @param loggedInUser aktuell eingeloggter Benutzer\n   * @returns alle offene Spiele\n   */\n  getAllOpenedGames(loggedInUser: User) {\n    // get all created Quizeswhere is still no second player\n    // return from server: alles aus Quiz + created User data\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n    return this.http.get(getUrl('quiz'), { headers: headers }).pipe(\n      map(responseData => {\n\n        if (!responseData || !responseData.Quiz)\n          return [];\n\n        const gamesArray: Quiz[] = [];\n\n        responseData.Quiz.forEach((quiz) => {\n          gamesArray.push({\n            idQuiz: quiz.idQuiz,\n            idSubject: quiz.Subject_idSubject,\n            playDate: quiz.PlayDate,\n            idCreatorUser: quiz.Creator_idUser,\n            idJoinerUser: quiz.Joiner_idUser1,\n            firstNameCreator: quiz.FirstName,\n            lastNameCreator: quiz.LastName,\n            subject: quiz.SubjectName,\n            idCategory: quiz.idcategory,\n            category: quiz.CategoryName\n          });\n        });\n\n        return gamesArray;\n      }),\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Erstellt ein neues Quiz für ein Benutzer, ein Modul und eine Kategorie\n   * @param loggedInUser eingeloggter Benutzer\n   * @param subjectId  ID des Moduls\n   * @param categoryId  ID der Kategorie\n   * @returns Quiz wurde erstellt\n   */\n  createQuiz(loggedInUser: User, subjectId: number, categoryId: number) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    return this.http.post(getUrl('quiz'), { Subject_idSubject: subjectId, category_idcategory: categoryId }, { headers: headers })\n      .pipe(\n        catchError(handleError)\n      );\n  }\n\n  /**\n   * Fügt einen Benutzer einem Spiel hinzu.\n   * @param loggedInUser eingeloggter Benutzer\n   * @param idQuiz ID des Quiz\n   * @param idJoinerUser ID des hinzugefügten Benutzer\n   * @returns Benutzer wurde hinzugefügt\n   */\n  joinQuiz(loggedInUser: User, idQuiz: number, idJoinerUser: number) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    return this.http.patch(getUrlById('quiz', idQuiz), { Joiner_idUser1: idJoinerUser }, { headers: headers })\n      .pipe(\n        catchError(handleError)\n      );\n  }\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Player2.html":{"url":"interfaces/Player2.html","title":"interface - Player2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Player2\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/game/game.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Email\n                                        \n                                \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            idUser\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Question } from '../shared/model/question.model';\nimport { Answer } from '../shared/model/answer.model';\nimport { MatDialog } from '@angular/material/dialog';\nimport { QuizService } from '../shared/services/quiz.service';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UserService } from '../shared/services/user.service';\nimport { User } from '../shared/model/user.model';\nimport { Subscription, throwError } from 'rxjs';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { QuestionsService } from '../shared/services/questions.service';\nimport { Router } from '@angular/router';\n\ninterface Player2 {\n  Email: string,\n  FirstName: string,\n  LastName: string,\n  idUser: number;\n}\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  loggedInUser: User = null;\n  userSub: Subscription = null;\n\n  successMsg = false;\n\n  player1: User = null;\n  player2: Player2 = null;\n\n  currentQuizId = null\n\n  currentSubject = null;\n  currentSubjectId = null;\n  currentCategory = null;\n  currentCategoryId = null;\n\n  currentPlayerPoints = 0;\n\n  questions: Question[] = [];\n\n  currentQuestion: Question = null;\n  currentAnswers: Answer[] = [];\n  currentCorrectAnswer: Answer = null;\n\n  questionNumber = 0;\n  answeredNumber = 0;\n\n  disableNextQuestionButton = true;\n  disableAnswerButton = false;\n\n\n\n\n  currentGameSub: Subscription = null;\n  questionSub: Subscription = null;\n  answersSub: Subscription = null;\n\n  closeDiaSub: Subscription = null;\n\n  runGame = false;\n  endGame = false;\n  loadGame = true;\n  noGameExists = false;\n  moreGamesExists = false;\n  sentGame = false;\n\n\n\n\n  constructor(private auth: AuthService, private router: Router, private userService: UserService, public dialog: MatDialog, private quizService: QuizService, private questionService: QuestionsService) { }\n\n  ngOnInit(): void {\n    this.userSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    });\n    this.initGame();\n\n  }\n\n\n  initGame() {\n\n    this.quizService.getGameByPlayer(this.loggedInUser).subscribe(game => {\n\n      if (game.length > 1) {\n        this.moreGamesExists = true;\n        this.loadGame = false;\n        return;\n      }\n      else if (game.length == 0) {\n        this.noGameExists = true;\n        this.loadGame = false;\n        return;\n      }\n\n      // Setze Quiz\n      this.currentQuizId = game[0].idQuiz;\n\n      // Setze Kurs und Kategorie\n      this.currentSubject = game[0].subject;\n      this.currentSubjectId = game[0].idSubject;\n      this.currentCategory = game[0].category;\n      this.currentCategoryId = game[0].idCategory;\n\n      // Setze Spieler 1 und Spieler 2\n      const idCreator = game[0].idCreatorUser;\n      const idJoiner = game[0].idJoinerUser\n\n      this.player1 = this.loggedInUser;\n      const idForPlayer2 = this.loggedInUser.idUser == idCreator ? idJoiner : idCreator;\n\n      this.userService.getUser(this.loggedInUser, idForPlayer2).subscribe(response => {\n        this.player2 = response;\n\n\n        console.log('inside  this.userService.getUse');\n        console.log(response);\n\n        // Initialisere alle Fragen, erst nachdem beide Teilnehmer geladen werden konnten.\n        this.initQuestionsInGame();\n\n      });\n\n\n    });\n\n  }\n\n  initQuestionsInGame() {\n    this.questionSub = this.quizService.getQuestions(this.loggedInUser, this.currentSubjectId, this.currentCategoryId).subscribe(response => {\n      this.questions = response;\n\n      // init first question\n      this.nextQuestion();\n\n      // Prüfe ob alle benötigten Daten vorhanden sind\n      this.runGame = this.checkAllData();\n      this.loadGame = !this.checkAllData();\n\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  checkAllData() {\n    return this.currentQuestion != null && this.currentAnswers != null && this.questions.length >= 10 && this.player1 != null && this.player2 != null;\n  }\n\n\n  initAnswersForQuestion(idQuestion: number) {\n    this.answersSub = this.quizService.getAnswers(this.loggedInUser, idQuestion).subscribe(response => {\n      this.currentCorrectAnswer = response.find(answer => answer.Truth == 1);\n      this.currentAnswers = response;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  selectAnswer(answer: Answer) {\n    if (answer.Truth == 1) {\n      this.currentPlayerPoints += 10;\n      this.openDialog(true, 'Super gemacht, weiter so.');\n    } else {\n      this.openDialog(false, 'Die richtige Antwort ist: \\n' + this.currentCorrectAnswer.Description);\n    }\n    this.disableNextQuestionButton = false;\n    this.disableAnswerButton = true;\n    this.answeredNumber++;\n  }\n\n\n\n  nextQuestion() {\n    if (this.questionNumber  {\n      this.sentGame = true;\n      setTimeout(() => {\n        this.router.navigate(['/ranking']);\n      }, 5000)\n    });\n  }\n\n  onFrageMelden() {\n    this.currentQuestion[\"Flagged\"] = 1;\n    this.questionService.update(this.loggedInUser, this.currentQuestion).subscribe(response => {\n\n      this.successMsg = true;\n      setTimeout(() => {\n        this.successMsg = false;\n      }, 5000)\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n  openDialog(isCorrect: boolean, answer: string) {\n    this.dialog.open(DialogComponent, {\n      data: {\n        isCorrect: isCorrect,\n        answer: answer,\n      },\n    });\n\n\n    this.closeDiaSub = this.dialog.afterAllClosed.subscribe(response => {\n      if (this.answeredNumber == 10) {\n        this.runGame = false;\n        this.endGame = true;\n      }\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Question.html":{"url":"interfaces/Question.html","title":"interface - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/question.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Dieses Klasse repräsentiert das Model Frage.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Approved\n                                        \n                                \n                                \n                                        \n                                            category_idcategory\n                                        \n                                \n                                \n                                        \n                                            CreateDate\n                                        \n                                \n                                \n                                        \n                                            Flagged\n                                        \n                                \n                                \n                                        \n                                            idQuestion\n                                        \n                                \n                                \n                                        \n                                            QuestionDescription\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Approved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Approved:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        category_idcategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category_idcategory:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        CreateDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        CreateDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Flagged\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Flagged:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idQuestion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idQuestion:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        QuestionDescription\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        QuestionDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Question {\n  idQuestion: number;\n  category_idcategory: number;\n  QuestionDescription: string;\n  Approved: number;\n  Flagged: number;\n  CreateDate: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionDialogComponent.html":{"url":"components/QuestionDialogComponent.html","title":"component - QuestionDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  QuestionDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/questions/question-dialog/question-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-dialog\n            \n\n            \n                styleUrls\n                ./question-dialog.component.css\n            \n\n\n\n            \n                templateUrl\n                ./question-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                editMode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onFocusOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusOut\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/questions/question-dialog/question-dialog.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :         Question\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/questions/question-dialog/question-dialog.component.ts:17\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        focusOut\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/questions/question-dialog/question-dialog.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/question-dialog/question-dialog.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFocusOut\n                        \n                    \n                \n            \n            \n                \nonFocusOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/questions/question-dialog/question-dialog.component.ts:30\n                \n            \n\n\n            \n                \n                    Sobald das Form verlassen wird, wird die Änderung an den Server gesendet\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        null\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        editMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/questions/question-dialog/question-dialog.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Question } from '../../shared/model/question.model';\n\n@Component({\n  selector: 'app-question-dialog',\n  templateUrl: './question-dialog.component.html',\n  styleUrls: ['./question-dialog.component.css'],\n})\n/**\n * Klasse zum editieren und Hinzufügen von Fragen\n *\n * @Vorgang: BI-016, BI-017\n * \n * {@link QuestionsComponent}\n */\nexport class QuestionDialogComponent implements OnInit {\n  @Input() data: Question;\n  @Output() focusOut: EventEmitter = new EventEmitter();\n\n  editMode = false;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Sobald das Form verlassen wird, wird die Änderung an den Server gesendet\n   * @Vorgang BI-015\n   * @returns null\n   */\n  onFocusOut() {\n    this.focusOut.emit(this.data);\n  }\n}\n\n    \n\n    \n        \n  {{ data.QuestionDescription }}\n\n\n\n\n    \n\n    \n                \n                    ./question-dialog.component.css\n                \n                .cellInputText {\n  border: 2px solid transparent;\n  /* padding: 11px 20px; */\n  width: 100%;\n  height: 100%;\n}\n\n.cell {\n  border: 2px solid transparent;\n  /* padding: 11px 20px; */\n  width: 100%;\n  height: 100%;\n}\n\n.cell:hover {\n  cursor: pointer;\n  border: 2px dashed lightgray;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ data.QuestionDescription }}'\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'QuestionDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QuestionList.html":{"url":"interfaces/QuestionList.html","title":"interface - QuestionList","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QuestionList\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/questionlist.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Dieses Klasse repräsentiert das Model Frage.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            Answer\n                                        \n                                \n                                \n                                        \n                                            Category\n                                        \n                                \n                                \n                                        \n                                            Question\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        Answer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Answer:         Answer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Answer[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Category:         Category[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Category[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Question\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        Question:         Question[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Question[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Category } from './category.model';\nimport { Question } from './question.model';\nimport { Answer } from './answer.model';\n/**\n * Dieses Klasse repräsentiert das Model Frage.\n */\nexport interface QuestionList {\n  Category: Category[];\n  Question: Question[];\n  Answer: Answer[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuestionsService.html":{"url":"injectables/QuestionsService.html","title":"injectable - QuestionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuestionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/questions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                countFlagged\n                            \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                getByCourse\n                            \n                            \n                                getByCourseFlagged\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/questions.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        countFlagged\n                        \n                    \n                \n            \n            \n                \ncountFlagged(loggedInUser: User, courseID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/questions.service.ts:62\n                \n            \n\n\n            \n                \n                    Gibt anzahl markierter Fragen zurück.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    courseID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die ID des Kurses für welchen die markierten Fragen gezählt werdne sollen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        integer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(loggedInUser: User, question: Question)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/questions.service.ts:92\n                \n            \n\n\n            \n                \n                    Erstellt eine Frage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    question\n                                    \n                                                Question\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die Frage welche erstellt werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        HTTP 201 oder HTTP 500\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(loggedInUser: User, questionId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/questions.service.ts:77\n                \n            \n\n\n            \n                \n                    Löscht eine Frage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    questionId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die ID der Frage welche gelöscht werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        HTTP 201 oder HTTP 500\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByCourse\n                        \n                    \n                \n            \n            \n                \ngetByCourse(loggedInUser: User, courseID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/questions.service.ts:30\n                \n            \n\n\n            \n                \n                    Gibt alle Fragen und Antworten zu einem Kurs zurück.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    courseID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die ID des Kurses für welchen alle Fragen und Antworten zurückgegeben werden sollen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        QuestionList\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByCourseFlagged\n                        \n                    \n                \n            \n            \n                \ngetByCourseFlagged(loggedInUser: User, courseID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/questions.service.ts:46\n                \n            \n\n\n            \n                \n                    Gibt markierte Fragen und Antworten zu einem Kurs zurück.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    courseID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die ID des Kurses für welchen die markierten Fragen und Antworten zurückgegeben werden sollen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        QuestionList\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(loggedInUser: User, question: Question)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/questions.service.ts:108\n                \n            \n\n\n            \n                \n                    Aktualisiert eine Frage.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    question\n                                    \n                                                Question\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Die Frage und Daten welche aktualisiert werden sollen.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        HTTP 201 oder HTTP 500\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'question'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/services/questions.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { User } from '../model/user.model';\nimport { Question } from '../model/question.model';\nimport { AuthService } from './auth.service';\nimport { setAuthHeader, getUrl, getUrlById, handleError } from '../helpers';\n\n@Injectable({\n  providedIn: 'root',\n})\n\n/**\n * Service Klasse zur Verwaltung der Fragen und Antworten\n *\n * @Vorgang: BI-016, BI-017, BI-018 \n */\nexport class QuestionsService {\n  private model = 'question';\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  /**\n   * Gibt alle Fragen und Antworten zu einem Kurs zurück.\n   * @param loggedInUser eingeloggter User\n   * @param courseID Die ID des Kurses für welchen alle Fragen und Antworten zurückgegeben werden sollen.\n   * @Vorgang BI-016 \n   * @returns QuestionList\n   */\n  getByCourse(loggedInUser: User, courseID: number) {\n    console.log('all questions of course ' + courseID);\n    return this.http\n      .get(getUrlById('questionsbycourse', courseID), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Gibt markierte Fragen und Antworten zu einem Kurs zurück.\n   * @param loggedInUser eingeloggter User\n   * @param courseID Die ID des Kurses für welchen die markierten Fragen und Antworten zurückgegeben werden sollen.\n   * @Vorgang BI-018 \n   * @returns QuestionList\n   */\n  getByCourseFlagged(loggedInUser: User, courseID: number) {\n    console.log('all flagged questions of course ' + courseID);\n    return this.http\n      .get(getUrlById('flaggedquestionsbycourse', courseID), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Gibt anzahl markierter Fragen zurück.\n   * @param loggedInUser eingeloggter User\n   * @param courseID Die ID des Kurses für welchen die markierten Fragen gezählt werdne sollen.\n   * @Vorgang BI-018 \n   * @returns integer\n   */\n  countFlagged(loggedInUser: User, courseID: number) {\n    return this.http\n      .get(getUrlById('countflagged', courseID), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Löscht eine Frage.\n   * @param loggedInUser eingeloggter User\n   * @param questionId Die ID der Frage welche gelöscht werden soll.\n   * @Vorgang BI-016 \n   * @returns HTTP 201 oder HTTP 500\n   */\n  delete(loggedInUser: User, questionId: number) {\n    return this.http\n      .delete(getUrlById(this.model, questionId), {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Erstellt eine Frage.\n   * @param loggedInUser eingeloggter User\n   * @param question Die Frage welche erstellt werden soll.\n   * @Vorgang BI-016 \n   * @returns HTTP 201 oder HTTP 500\n   */\n  create(loggedInUser: User, question: Question) {\n    console.log(question);\n    return this.http\n      .post(getUrl(this.model), question, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n\n  /**\n   * Aktualisiert eine Frage.\n   * @param loggedInUser eingeloggter User\n   * @param question Die Frage und Daten welche aktualisiert werden sollen.\n   * @Vorgang BI-016 \n   * @returns HTTP 201 oder HTTP 500\n   */\n  update(loggedInUser: User, question: Question) {\n    console.log(question);\n    return this.http\n      .put(getUrlById(this.model, question.idQuestion), question, {\n        headers: setAuthHeader(loggedInUser.token),\n      })\n      .pipe(catchError(handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Quiz.html":{"url":"interfaces/Quiz.html","title":"interface - Quiz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Quiz\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/quiz.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Dieses Klasse repräsentiert das Model Quiz.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            category\n                                        \n                                \n                                \n                                        \n                                            firstNameCreator\n                                        \n                                \n                                \n                                        \n                                            idCategory\n                                        \n                                \n                                \n                                        \n                                            idCreatorUser\n                                        \n                                \n                                \n                                        \n                                            idJoinerUser\n                                        \n                                \n                                \n                                        \n                                            idQuiz\n                                        \n                                \n                                \n                                        \n                                            idSubject\n                                        \n                                \n                                \n                                        \n                                            lastNameCreator\n                                        \n                                \n                                \n                                        \n                                            playDate\n                                        \n                                \n                                \n                                        \n                                            subject\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        category\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        category:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstNameCreator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstNameCreator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCategory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCategory:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idCreatorUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idCreatorUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idJoinerUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idJoinerUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idQuiz\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idQuiz:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idSubject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idSubject:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastNameCreator\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastNameCreator:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Quiz {\n    idQuiz: number,\n    idSubject: number,\n    playDate: Date,\n    idCreatorUser: number,\n    idJoinerUser: number,\n    firstNameCreator: string,\n    lastNameCreator: string,\n    subject: string,\n    idCategory: number,\n    category: string\n}\n\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/QuizService.html":{"url":"injectables/QuizService.html","title":"injectable - QuizService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  QuizService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/quiz.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteGame\n                            \n                            \n                                finishQuiz\n                            \n                            \n                                getAnswers\n                            \n                            \n                                getGameByPlayer\n                            \n                            \n                                getPlayerHistory\n                            \n                            \n                                getQuestions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/quiz.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGame\n                        \n                    \n                \n            \n            \n                \ndeleteGame(loggedInUser: User, idQuiz: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/quiz.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idQuiz\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finishQuiz\n                        \n                    \n                \n            \n            \n                \nfinishQuiz(loggedInUser: User, idQuiz: number, pts: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/quiz.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idQuiz\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pts\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAnswers\n                        \n                    \n                \n            \n            \n                \ngetAnswers(loggedInUser: User, idQuestion: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/quiz.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idQuestion\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getGameByPlayer\n                        \n                    \n                \n            \n            \n                \ngetGameByPlayer(loggedInUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/quiz.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerHistory\n                        \n                    \n                \n            \n            \n                \ngetPlayerHistory(loggedInUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/quiz.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getQuestions\n                        \n                    \n                \n            \n            \n                \ngetQuestions(loggedInUser: User, idSubject: number, idCategory: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/quiz.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idSubject\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    idCategory\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map } from 'rxjs/operators';\nimport { getUrl, getUrlById, getUrlByIdId, handleError } from '../helpers';\nimport { Answer } from '../model/answer.model';\nimport { Question } from '../model/question.model';\nimport { Quiz } from '../model/quiz.model';\nimport { User } from '../model/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuizService {\n  constructor(private http: HttpClient) { }\n\n  getQuestions(loggedInUser: User, idSubject: number, idCategory: number) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n    return this.http.get(getUrlByIdId('getquestions', idSubject, idCategory), { headers: headers }).pipe(\n      map(responseData => {\n        if (!responseData || !responseData.questions)\n          return [];\n        const questionArray: Question[] = [];\n        responseData.questions.forEach((question) => {\n          questionArray.push({\n            idQuestion: question.idQuestion,\n            category_idcategory: idCategory,\n            QuestionDescription: question.QuestionDescription,\n            Approved: 1,\n            CreateDate: \"\",\n            Flagged: 0\n          });\n        });\n        return questionArray;\n      }),\n      catchError(handleError)\n    );\n  }\n\n\n  getAnswers(loggedInUser: User, idQuestion: number) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    return this.http.get(getUrlById('showanswers', idQuestion), { headers: headers }).pipe(\n\n      map(responseData => {\n\n        if (!responseData || !responseData.Answers)\n          return [];\n\n        const answerArray: Answer[] = [];\n        responseData.Answers.forEach((answer) => {\n          answerArray.push({\n            idAnswers: answer.idAnswers,\n            Question_idQuestion: answer.Question_idQuestion,\n            Description: answer.Description,\n            Truth: answer.Truth\n          });\n        });\n        return answerArray;\n\n\n\n      }),\n      catchError(handleError)\n    );\n  }\n\n\n\n  getGameByPlayer(loggedInUser: User) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    return this.http.get(getUrlById('getGameByPlayer', loggedInUser.idUser), { headers: headers }).pipe(\n\n      map(responseData => {\n\n        if (!responseData || !responseData.Quiz)\n          return [];\n\n        const gamesArray: Quiz[] = [];\n\n        responseData.Quiz.forEach((quiz) => {\n          gamesArray.push({\n            idQuiz: quiz.idQuiz,\n            idSubject: quiz.idSubject,\n            playDate: quiz.PlayDate,\n            idCreatorUser: quiz.Creator_idUser,\n            idJoinerUser: quiz.Joiner_idUser1,\n            firstNameCreator: quiz.FirstName,\n            lastNameCreator: quiz.LastName,\n            subject: quiz.SubjectName,\n            idCategory: quiz.idcategory,\n            category: quiz.CategoryName\n          });\n        });\n\n        return gamesArray;\n\n\n      }),\n      catchError(handleError)\n    );\n  }\n\n\n  finishQuiz(loggedInUser: User, idQuiz: number, pts: number,) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    return this.http.post(getUrl('postResult'), { User_idUser: loggedInUser.idUser, Quiz_idQuiz: idQuiz, Points: pts, Winner: null }, { headers: headers })\n      .pipe(\n        catchError(handleError)\n      );\n  }\n\n  deleteGame(loggedInUser: User, idQuiz: number) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    return this.http.delete(getUrlById('quiz', idQuiz), { headers: headers })\n      .pipe(\n        catchError(handleError)\n      );\n  }\n\n\n  getPlayerHistory(loggedInUser: User) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n\n    // TODO: not done yet\n\n    return this.http.get(getUrlById('getPlayerHistory', loggedInUser.idUser), { headers: headers }).pipe(\n      catchError(handleError)\n    );\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ranking.html":{"url":"interfaces/Ranking.html","title":"interface - Ranking","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Ranking\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/ranking/ranking.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            FirstName\n                                        \n                                \n                                \n                                        \n                                            LastName\n                                        \n                                \n                                \n                                        \n                                            TotalPoints\n                                        \n                                \n                                \n                                        \n                                            TotalWins\n                                        \n                                \n                                \n                                        \n                                            User_idUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        FirstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        LastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TotalPoints\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TotalPoints:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TotalWins\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        TotalWins:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        User_idUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        User_idUser:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/model/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { RankingService } from '../shared/services/ranking.service';\n\n\ninterface Ranking {\n  FirstName: string,\n  LastName: string,\n  TotalPoints: number,\n  TotalWins: number,\n  User_idUser: number\n}\n\n@Component({\n  selector: 'app-ranking',\n  templateUrl: './ranking.component.html',\n  styleUrls: ['./ranking.component.css']\n})\n\n\n/**\n * Diese Komponente implementiert die Rangliste.\n */\nexport class RankingComponent implements OnInit {\n\n  displayedColumns: string[] = ['FirstName', 'LastName', 'TotalPoints', 'TotalWins'];\n\n  loggedInUser: User = null;\n  userSub: Subscription = null;\n\n  allSearchUsers: Subscription = null;\n  dataSource: Ranking[] = [];\n\n  constructor(private auth: AuthService, private rankingService: RankingService) { }\n\n\n  ngOnInit(): void {\n    this.userSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    });\n\n    this.initTable();\n  }\n\n  initTable() {\n    this.allSearchUsers = this.rankingService.getRanking(this.loggedInUser).subscribe(response => {\n      this.dataSource = response;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RankingComponent.html":{"url":"components/RankingComponent.html","title":"component - RankingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RankingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/ranking/ranking.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-ranking\n            \n\n            \n                styleUrls\n                ./ranking.component.css\n            \n\n\n\n            \n                templateUrl\n                ./ranking.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allSearchUsers\n                            \n                            \n                                dataSource\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                loggedInUser\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTable\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, rankingService: RankingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/ranking/ranking.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rankingService\n                                                  \n                                                        \n                                                                        RankingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initTable\n                        \n                    \n                \n            \n            \n                \ninitTable()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ranking/ranking.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/ranking/ranking.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allSearchUsers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/ranking/ranking.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Ranking[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/ranking/ranking.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['FirstName', 'LastName', 'TotalPoints', 'TotalWins']\n                    \n                \n                    \n                        \n                                Defined in src/app/ranking/ranking.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/ranking/ranking.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/ranking/ranking.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/model/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { RankingService } from '../shared/services/ranking.service';\n\n\ninterface Ranking {\n  FirstName: string,\n  LastName: string,\n  TotalPoints: number,\n  TotalWins: number,\n  User_idUser: number\n}\n\n@Component({\n  selector: 'app-ranking',\n  templateUrl: './ranking.component.html',\n  styleUrls: ['./ranking.component.css']\n})\n\n\n/**\n * Diese Komponente implementiert die Rangliste.\n */\nexport class RankingComponent implements OnInit {\n\n  displayedColumns: string[] = ['FirstName', 'LastName', 'TotalPoints', 'TotalWins'];\n\n  loggedInUser: User = null;\n  userSub: Subscription = null;\n\n  allSearchUsers: Subscription = null;\n  dataSource: Ranking[] = [];\n\n  constructor(private auth: AuthService, private rankingService: RankingService) { }\n\n\n  ngOnInit(): void {\n    this.userSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    });\n\n    this.initTable();\n  }\n\n  initTable() {\n    this.allSearchUsers = this.rankingService.getRanking(this.loggedInUser).subscribe(response => {\n      this.dataSource = response;\n    },\n      errorMessage => {\n        console.log(errorMessage);\n      });\n  }\n\n\n}\n\n    \n\n    \n        \n\n    \n         Vorname\n        \n         {{element.FirstName}} \n    \n\n    \n         Nachname \n         {{element.LastName}} \n    \n\n    \n         Punkte \n         {{element.TotalPoints}} \n    \n\n    \n         Siege \n         {{element.TotalWins}} \n    \n\n    \n    \n\n\n    \n\n    \n                \n                    ./ranking.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Vorname                 {{element.FirstName}}                  Nachname          {{element.LastName}}                  Punkte          {{element.TotalPoints}}                  Siege          {{element.TotalWins}}             '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'RankingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RankingService.html":{"url":"injectables/RankingService.html","title":"injectable - RankingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RankingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/ranking.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRanking\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/ranking.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRanking\n                        \n                    \n                \n            \n            \n                \ngetRanking(loggedInUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/ranking.service.ts:26\n                \n            \n\n\n            \n                \n                    Ermittelt das Ranking\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter Benutzer\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Ranking\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError } from 'rxjs/operators';\nimport { getUrl, handleError } from '../helpers';\nimport { User } from '../model/user.model';\nimport { AuthService } from './auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n/**\n * Diese Komponente implementiert den RankingService. \n * Der Service stellt alle nötigen HTTP-Funktionen zum Abrufen des Rankings bereit.\n */\nexport class RankingService {\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  /**\n   * Ermittelt das Ranking\n   * @param loggedInUser eingeloggter Benutzer\n   * @returns Ranking\n   */\n  getRanking(loggedInUser: User) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n    return this.http.get(getUrl('getRanking'), { headers: headers }).pipe(\n      catchError(handleError)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/user.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Dieses Klasse repräsentiert das Model eines Benutzers.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accountLevel\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                firstName\n                            \n                            \n                                    Public\n                                idUser\n                            \n                            \n                                    Public\n                                lastName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAdmin\n                            \n                            \n                                    Public\n                                isTutor\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    token\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(idUser: number, firstName: string, lastName: string, email: string, accountLevel: number, _token: string, _tokenExpirationDate: Date)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/model/user.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        idUser\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        accountLevel\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _token\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _tokenExpirationDate\n                                                  \n                                                        \n                                                                        Date\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accountLevel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model/user.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model/user.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model/user.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        idUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model/user.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/model/user.model.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isAdmin\n                        \n                    \n                \n            \n            \n                \n                    \n                    isAdmin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.model.ts:26\n                \n            \n\n\n            \n                \n                    Prüft ob der Nutzer ein Admin ist\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true: wenn Admin; false: wenn nicht\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isTutor\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTutor()\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/model/user.model.ts:34\n                \n            \n\n\n            \n                \n                    Prüft ob der Nutzer ein Tutor ist\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true: wenn Tutor; false: wenn nicht\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        token\n                    \n                \n\n                \n                    \n                        gettoken()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/model/user.model.ts:15\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export class User {\n    constructor(\n        public idUser: number,\n        public firstName: string,\n        public lastName: string,\n        public email: string,\n        public accountLevel: number,\n        private _token: string,\n        private _tokenExpirationDate: Date\n    ) { }\n\n    get token() {\n        if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\n            return null;\n        }\n        return this._token;\n    }\n\n    /**\n     * Prüft ob der Nutzer ein Admin ist\n     * @returns true: wenn Admin; false: wenn nicht\n     */\n    public isAdmin() {\n        return this.accountLevel === 5;\n    }\n\n    /**\n    * Prüft ob der Nutzer ein Tutor ist\n    * @returns true: wenn Tutor; false: wenn nicht\n    */\n    public isTutor() {\n        return this.accountLevel === 4;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserEditComponent.html":{"url":"components/UserEditComponent.html","title":"component - UserEditComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserEditComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-edit/user-edit.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-edit\n            \n\n            \n                styleUrls\n                ./user-edit.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-edit.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                form\n                            \n                            \n                                loggedInUser\n                            \n                            \n                                userSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData, auth: AuthService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-edit/user-edit.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-edit/user-edit.component.ts:87\n                \n            \n\n\n            \n                \n                    Beendet alle Subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-edit/user-edit.component.ts:46\n                \n            \n\n\n            \n                \n                    Initialisiert den aktuellen Benutzer.\nInitialisiert das Formular.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-edit/user-edit.component.ts:62\n                \n            \n\n\n            \n                \n                    Abrechen der Eingabe. Schließt den Dialog.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/user-edit/user-edit.component.ts:69\n                \n            \n\n\n            \n                \n                    Sendet Daten an Service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/user-edit/user-edit.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-edit/user-edit.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-edit/user-edit.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedInUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-edit/user-edit.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/user-edit/user-edit.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnDestroy, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\nimport { User } from '../shared/model/user.model';\nimport { AuthService } from '../shared/services/auth.service';\nimport { UserService } from '../shared/services/user.service';\n\n\n//outsourcen\nexport interface DialogData {\n  firstName: string;\n  lastName: string;\n  email: string;\n  accountLevel: number;\n  userId: number\n}\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\n\n/**\n * Diese Komponente implementiert das Benutzer Formular. \n */\nexport class UserEditComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n\n  userSub: Subscription = null;\n  loggedInUser: User;\n\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    private auth: AuthService, private userService: UserService\n  ) { }\n\n\n  /**\n  * Initialisiert den aktuellen Benutzer.\n  * Initialisiert das Formular.\n  */\n  ngOnInit(): void {\n    this.userSub = this.auth.user.subscribe(user => {\n      this.loggedInUser = user;\n    });\n\n\n    this.form = new FormGroup({\n      'userData': new FormGroup({\n        'accountlevel': new FormControl(this.data.accountLevel)\n      })\n    });\n  }\n\n  /**\n   * Abrechen der Eingabe. Schließt den Dialog.\n   */\n  onCancel(): void {\n    this.dialogRef.close();\n  }\n\n  /**\n   * Sendet Daten an Service.\n   */\n  onSubmit(): void {\n\n    let formAccountLevel = this.form.value.userData.accountlevel;\n    let newAccountLevel = formAccountLevel != null ? formAccountLevel : this.data.accountLevel;\n\n    this.userService.getUser(this.loggedInUser, this.data.userId).subscribe(updatedUser => {\n      this.userService.updateUser(this.loggedInUser, updatedUser, newAccountLevel).subscribe(response => {\n        this.dialogRef.close();\n      });\n    });\n\n\n\n  }\n\n  /**\n  * Beendet alle Subscriptions.\n  */\n  ngOnDestroy(): void {\n    this.userSub.unsubscribe();\n  }\n\n}\n\n    \n\n    \n        Benutzer-Status bearbeiten\n\n    \n        \n            \n                Account Status\n                \n            \n        \n    \n    \n        Abbrechen\n        Speichern\n    \n\n    \n\n    \n                \n                    ./user-edit.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Benutzer-Status bearbeiten                                        Account Status                                                    Abbrechen        Speichern    '\n    var COMPONENTS = [{'name': 'AccountComponent', 'selector': 'app-account'},{'name': 'AddAnswerDialogComponent', 'selector': 'app-add-answer-dialog'},{'name': 'AddQuestionDialogComponent', 'selector': 'app-add-question-dialog'},{'name': 'AdminComponent', 'selector': 'app-admin'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'AuthComponent', 'selector': 'app-auth'},{'name': 'CategoryDialogComponent', 'selector': 'app-category-dialog'},{'name': 'CourseDialogComponent', 'selector': 'app-course-dialog'},{'name': 'DialogComponent', 'selector': 'app-dialog'},{'name': 'EditAnswerDialogComponent', 'selector': 'app-edit-answer-dialog'},{'name': 'ErrorPageComponent', 'selector': 'app-error-page'},{'name': 'FaqComponent', 'selector': 'app-faq'},{'name': 'GameComponent', 'selector': 'app-game'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoadingScreenComponent', 'selector': 'app-loading-screen'},{'name': 'LobbyComponent', 'selector': 'app-lobby'},{'name': 'QuestionDialogComponent', 'selector': 'app-question-dialog'},{'name': 'QuestionsComponent', 'selector': 'app-questions'},{'name': 'RankingComponent', 'selector': 'app-ranking'},{'name': 'UserEditComponent', 'selector': 'app-user-edit'}];\n    var DIRECTIVES = [{'name': 'AutofocusDirective', 'selector': '[appAutofocus]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserEditComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                getUser\n                            \n                            \n                                getUsers\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/services/user.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(loggedInUser: User, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:121\n                \n            \n\n\n            \n                \n                    Löscht einen Benutzer.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Der Benutzer der gelöscht werden soll.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        xxxxxxxxx\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser(loggedInUser: User, userId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:28\n                \n            \n\n\n            \n                \n                    Ermittelt einen Benutzer.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        aktuell eingeloggter Benutzer\n\n                                    \n                                \n                                \n                                    userId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Benutzer ID\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Benutzer\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers(loggedInUser: User)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:42\n                \n            \n\n\n            \n                \n                    Ermittelt aller Nutzer im System.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        alle Nutzer aus dem System\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(loggedInUser: User, user: User, newAccountLevel: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/services/user.service.ts:97\n                \n            \n\n\n            \n                \n                    Aktualisiert einen Benutzer.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    loggedInUser\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        eingeloggter User\n\n                                    \n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Der Benutzer der aktualisiert werden soll.\n\n                                    \n                                \n                                \n                                    newAccountLevel\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        xxxxxxxxx\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { catchError, map } from 'rxjs/operators';\nimport { getUrl, getUrlById, handleError } from '../helpers';\nimport { User } from '../model/user.model';\nimport { Users } from '../model/users.model';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\n/**\n * Diese Komponente implementiert den UserService. \n * Der Service stellt alle nötigen HTTP-Funktionen zum Abrufen, Bearbeiten und Löschen von Benutzern bereit.\n */\nexport class UserService {\n\n  constructor(private http: HttpClient, private auth: AuthService) { }\n\n  /**\n   * Ermittelt einen Benutzer.\n   * @param loggedInUser aktuell eingeloggter Benutzer\n   * @param userId Benutzer ID\n   * @returns Benutzer\n   */\n  getUser(loggedInUser: User, userId: number) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n    return this.http.get(getUrlById('getuser', userId), { headers: headers }).pipe(\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Ermittelt aller Nutzer im System.\n   * @param token Der Token vom aktuellen Nutzer.\n   * @returns alle Nutzer aus dem System\n   */\n  getUsers(loggedInUser: User) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    // Wenn der eingeloggte User keine Adminrechte hat, wird eine andere Schnittstelle angesprochen. \n    let usedController = loggedInUser.accountLevel === 5 ? 'user' : 'getalluser'\n\n    return this.http.get(getUrl(usedController), { headers: headers }).pipe(\n\n      map(responseData => {\n\n        if (usedController === 'user') {\n          if (!responseData || !responseData.User)\n            return [];\n          const usersArray: Users[] = [];\n          responseData.User.forEach((user) => {\n            usersArray.push({\n              id: user.idUser,\n              firstName: user.FirstName,\n              lastName: user.LastName,\n              email: user.Email,\n              accountLevel: user.AccountLevel_idAccountLevel\n            });\n          });\n          return usersArray;\n        } else {\n          if (!responseData || !responseData.user)\n            return [];\n          const usersArray: Users[] = [];\n          responseData.user.forEach((user) => {\n            usersArray.push({\n              id: user.idUser,\n              firstName: user.FirstName,\n              lastName: user.LastName,\n              email: user.Email,\n              accountLevel: user.AccountLevel_idAccountLevel\n            });\n          });\n          return usersArray;\n        }\n\n\n      }),\n      catchError(handleError)\n    );\n  }\n\n  /**\n   * Aktualisiert einen Benutzer.\n   * @param loggedInUser eingeloggter User\n   * @param user Der Benutzer der aktualisiert werden soll.\n   * @param usedController genutzer Controller\n   * @returns xxxxxxxxx\n   */\n  updateUser(loggedInUser: User, user: User, newAccountLevel: number) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    // Attribut accountLevel heißt auf dem Server AccountLevel_idAccountLevel\n    delete Object.assign(user, { [\"AccountLevel_idAccountLevel\"]: user[\"accountLevel\"] })[\"accountLevel\"];\n    // set newAccountLevel\n    user[\"AccountLevel_idAccountLevel\"] = newAccountLevel;\n    console.log(user);\n    return this.http.put(getUrlById('user', user.idUser), user, { headers: headers }\n    ).pipe(\n      catchError(handleError)\n    );\n  }\n\n\n\n  /**\n   * Löscht einen Benutzer.\n   * @param loggedInUser eingeloggter User\n   * @param userId Der Benutzer der gelöscht werden soll.\n   * @returns xxxxxxxxx\n   */\n  deleteUser(loggedInUser: User, userId: number) {\n    const headers = new HttpHeaders({\n      'Authorization': 'Bearer ' + loggedInUser.token\n    });\n\n    // Wenn der eingeloggte User keine Adminrechte hat, wird eine andere Schnittstelle angesprochen. \n    let usedController = loggedInUser.accountLevel === 5 ? 'user' : 'me'\n\n    return this.http.delete(getUrlById(usedController, userId), { headers: headers }).pipe(\n      catchError(handleError)\n    );\n  }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Users.html":{"url":"interfaces/Users.html","title":"interface - Users","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Users\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/model/users.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Dieses Klasse repräsentiert das Model Benutzertabelle.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accountLevel\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accountLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accountLevel:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Users {\n    id: number,\n    firstName: string,\n    lastName: string,\n    email: string,\n    accountLevel: number\n}\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/account/account.component.ts\n            \n            component\n            AccountComponent\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/app/admin/admin.component.ts\n            \n            component\n            AdminComponent\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/app/app-routing.module.ts\n            \n            variable\n            ADMIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/auth/auth.component.ts\n            \n            component\n            AuthComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/autofocus.directive.ts\n            \n            directive\n            AutofocusDirective\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/error-page/error-page.component.ts\n            \n            component\n            ErrorPageComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/faq/faq.component.ts\n            \n            component\n            FaqComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/game/dialog/dialog.component.ts\n            \n            component\n            DialogComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/game/game.component.ts\n            \n            component\n            GameComponent\n            \n                0 %\n                (0/42)\n            \n        \n        \n            \n                \n                src/app/game/game.component.ts\n            \n            interface\n            Player2\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/loading-screen/loading-screen.component.ts\n            \n            component\n            LoadingScreenComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/lobby/lobby.component.ts\n            \n            component\n            LobbyComponent\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/questions/add-answer-dialog/add-answer-dialog.component.ts\n            \n            component\n            AddAnswerDialogComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/questions/add-question-dialog/add-question-dialog.component.ts\n            \n            component\n            AddQuestionDialogComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                src/app/questions/category-dialog/category-dialog.component.ts\n            \n            component\n            CategoryDialogComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/questions/course-dialog/course-dialog.component.ts\n            \n            component\n            CourseDialogComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/questions/edit-answer-dialog/edit-answer-dialog.component.ts\n            \n            component\n            EditAnswerDialogComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/questions/question-dialog/question-dialog.component.ts\n            \n            component\n            QuestionDialogComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/questions/questions.component.ts\n            \n            component\n            QuestionsComponent\n            \n                53 %\n                (24/45)\n            \n        \n        \n            \n                \n                src/app/ranking/ranking.component.ts\n            \n            component\n            RankingComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/ranking/ranking.component.ts\n            \n            interface\n            Ranking\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/shared/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/helpers.ts\n            \n            function\n            getUrl\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/helpers.ts\n            \n            function\n            getUrlById\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/helpers.ts\n            \n            function\n            getUrlByIdId\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/helpers.ts\n            \n            function\n            handleError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/helpers.ts\n            \n            function\n            setAuthHeader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/shared/helpers.ts\n            \n            variable\n            URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/helpers/loading.interceptors.ts\n            \n            interceptor\n            LoadingScreenInterceptor\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/model/answer.model.ts\n            \n            interface\n            Answer\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/shared/model/category.model.ts\n            \n            interface\n            Category\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/model/course.model.ts\n            \n            interface\n            Course\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/shared/model/question.model.ts\n            \n            interface\n            Question\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/shared/model/questionlist.model.ts\n            \n            interface\n            QuestionList\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/shared/model/quiz.model.ts\n            \n            interface\n            Quiz\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/shared/model/user.model.ts\n            \n            class\n            User\n            \n                33 %\n                (3/9)\n            \n        \n        \n            \n                \n                src/app/shared/model/users.model.ts\n            \n            interface\n            Users\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/shared/pipe/account-level.pipe.ts\n            \n            pipe\n            AccountLevelPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/services/answer.service.ts\n            \n            injectable\n            AnswerService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/shared/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/shared/services/course.service.ts\n            \n            injectable\n            CourseService\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/loading-screen.service.ts\n            \n            injectable\n            LoadingScreenService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/lobby.service.ts\n            \n            injectable\n            LobbyService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/shared/services/questions.service.ts\n            \n            injectable\n            QuestionsService\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/shared/services/quiz.service.ts\n            \n            injectable\n            QuizService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/shared/services/ranking.service.ts\n            \n            injectable\n            RankingService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/shared/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/user-edit/user-edit.component.ts\n            \n            component\n            UserEditComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/user-edit/user-edit.component.ts\n            \n            interface\n            DialogData\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/cdk : ~12.2.13\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/flex-layout : ^12.0.0-beta.35\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/material : ~12.2.13\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            @angular/router : ~12.2.0\n        \n            @compodoc/compodoc : ^1.1.18\n        \n            bootstrap : ^3.4.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            typedoc : ^0.22.11\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            getUrl   (src/.../helpers.ts)\n                        \n                        \n                            getUrlById   (src/.../helpers.ts)\n                        \n                        \n                            getUrlByIdId   (src/.../helpers.ts)\n                        \n                        \n                            handleError   (src/.../helpers.ts)\n                        \n                        \n                            setAuthHeader   (src/.../helpers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/shared/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getUrl\n                        \n                    \n                \n            \n            \n                \ngetUrl(model: string)\n                \n            \n\n\n\n\n            \n                \n                    Setzt die URL  zusammen.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUrlById\n                        \n                    \n                \n            \n            \n                \ngetUrlById(model: string, id: number)\n                \n            \n\n\n\n\n            \n                \n                    Setzt die URL mit ID zusammen.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID des Objekts\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUrlByIdId\n                        \n                    \n                \n            \n            \n                \ngetUrlByIdId(model: string, id: number, id2: number)\n                \n            \n\n\n\n\n            \n                \n                    Setzt die URL mit ID zusammen.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    model\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ID des Objekts\n\n                                    \n                                \n                                \n                                    id2\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(errorRes: HttpErrorResponse)\n                \n            \n\n\n\n\n            \n                \n                    Behandelt Fehlermeldungen\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    errorRes\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAuthHeader\n                        \n                    \n                \n            \n            \n                \nsetAuthHeader(token)\n                \n            \n\n\n\n\n            \n                \n                    Setzt den Auth Header.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Token des eingeloggten Users   *\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nNgQuiz\nThis project was generated with Angular CLI version 12.2.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\nCreate Component\nExample: ng g c >\nSpec.ts-File kann gelöscht werden\nCreate Service\nExample: ng g s shared/services/>\nSpec.ts-File kann gelöscht werden\nCreate Model\nPath: shared/model/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAccountComponent\n\nAccountComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAccountComponent->AppModule\n\n\n\n\n\nAccountLevelPipe\n\nAccountLevelPipe\n\nAppModule -->\n\nAccountLevelPipe->AppModule\n\n\n\n\n\nAddAnswerDialogComponent\n\nAddAnswerDialogComponent\n\nAppModule -->\n\nAddAnswerDialogComponent->AppModule\n\n\n\n\n\nAddQuestionDialogComponent\n\nAddQuestionDialogComponent\n\nAppModule -->\n\nAddQuestionDialogComponent->AppModule\n\n\n\n\n\nAdminComponent\n\nAdminComponent\n\nAppModule -->\n\nAdminComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAuthComponent\n\nAuthComponent\n\nAppModule -->\n\nAuthComponent->AppModule\n\n\n\n\n\nAutofocusDirective\n\nAutofocusDirective\n\nAppModule -->\n\nAutofocusDirective->AppModule\n\n\n\n\n\nCategoryDialogComponent\n\nCategoryDialogComponent\n\nAppModule -->\n\nCategoryDialogComponent->AppModule\n\n\n\n\n\nCourseDialogComponent\n\nCourseDialogComponent\n\nAppModule -->\n\nCourseDialogComponent->AppModule\n\n\n\n\n\nDialogComponent\n\nDialogComponent\n\nAppModule -->\n\nDialogComponent->AppModule\n\n\n\n\n\nEditAnswerDialogComponent\n\nEditAnswerDialogComponent\n\nAppModule -->\n\nEditAnswerDialogComponent->AppModule\n\n\n\n\n\nErrorPageComponent\n\nErrorPageComponent\n\nAppModule -->\n\nErrorPageComponent->AppModule\n\n\n\n\n\nFaqComponent\n\nFaqComponent\n\nAppModule -->\n\nFaqComponent->AppModule\n\n\n\n\n\nGameComponent\n\nGameComponent\n\nAppModule -->\n\nGameComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoadingScreenComponent\n\nLoadingScreenComponent\n\nAppModule -->\n\nLoadingScreenComponent->AppModule\n\n\n\n\n\nLobbyComponent\n\nLobbyComponent\n\nAppModule -->\n\nLobbyComponent->AppModule\n\n\n\n\n\nQuestionDialogComponent\n\nQuestionDialogComponent\n\nAppModule -->\n\nQuestionDialogComponent->AppModule\n\n\n\n\n\nQuestionsComponent\n\nQuestionsComponent\n\nAppModule -->\n\nQuestionsComponent->AppModule\n\n\n\n\n\nRankingComponent\n\nRankingComponent\n\nAppModule -->\n\nRankingComponent->AppModule\n\n\n\n\n\nUserEditComponent\n\nUserEditComponent\n\nAppModule -->\n\nUserEditComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nLoadingScreenInterceptor\n\nLoadingScreenInterceptor\n\nAppModule -->\n\nLoadingScreenInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    21 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        14 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ADMIN   (src/.../app-routing.module.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            URL   (src/.../helpers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app-routing.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ADMIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n\n\n        \n    \n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/helpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:8000'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
